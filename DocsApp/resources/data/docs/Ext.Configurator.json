{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/class/Configurator.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "access": "private",
        "name": "Ext.Configurator",
        "text": "This class manages the config properties for a class.\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "add",
                "text": "This method adds new config properties. This is called for classes when they are\ndeclared, then for any mixins that class may define and finally for any overrides\ndefined that target the class.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "text": "The config object containing the new config properties.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,138,24",
                      "text": "0,138,31,56",
                      "type": "0,138,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "mixinClass",
                    "optional": true,
                    "text": "The mixin class if the configs are from a mixin.\n",
                    "type": "Ext.Class",
                    "src": {
                      "name": "0,139,28",
                      "text": "0,139,40,49",
                      "type": "0,139,16"
                    }
                  }
                ],
                "src": {
                  "access": "0,140,8",
                  "name": "0,142,0",
                  "text": "0,134,8,195"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "configure",
                "text": "This method configures the given `instance` using the specified `instanceConfig`.\nThe given `instance` should have been created by this object's <a href='#!/api/Ext.Configurator-property-cls'>cls</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "instance",
                    "text": "The instance to configure.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,328,24",
                      "text": "0,328,33,27",
                      "type": "0,328,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "instanceConfig",
                    "text": "The configuration properties to apply to `instance`.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,329,24",
                      "text": "0,329,39,53",
                      "type": "0,329,16"
                    }
                  }
                ],
                "src": {
                  "access": "0,330,8",
                  "name": "0,332,0",
                  "text": "0,325,8,153"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "merge",
                "text": "Merges the values of a config object onto a base config.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "instance",
                    "type": "Ext.Base",
                    "src": {
                      "name": "0,629,26",
                      "type": "0,629,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "baseConfig",
                    "type": "Object",
                    "src": {
                      "name": "0,630,24",
                      "type": "0,630,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "config",
                    "type": "Object",
                    "src": {
                      "name": "0,631,24",
                      "type": "0,631,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the merged config\n",
                    "type": "Object",
                    "src": {
                      "text": "0,632,25,18",
                      "type": "0,632,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,633,8",
                  "name": "0,635,0",
                  "text": "0,628,8,57"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "reconfigure",
                "items": [
                  {
                    "$type": "param",
                    "name": "instance",
                    "src": {
                      "name": "0,665,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "instanceConfig",
                    "src": {
                      "name": "0,665,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "src": {
                      "name": "0,665,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,663,8",
                  "name": "0,665,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "resolvePlatformConfig",
                "since": "5.1.0",
                "text": "This method accepts an instance config object containing a `platformConfig`\nproperty and merges the appropriate rules from that sub-object with the root object\nto create the final config object that should be used. This is method called by\n<a href='#!/api/Ext.Configurator-method-configure'>configure</a> when it receives an `instanceConfig` containing a\n`platformConfig` property.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "instanceConfig",
                    "text": "The instance config parameter.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,761,24",
                      "text": "0,761,39,31",
                      "type": "0,761,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The new instance config object with platformConfig results applied.\n",
                    "type": "Object",
                    "src": {
                      "text": "0,762,25,68",
                      "type": "0,762,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,763,8",
                  "name": "0,766,0",
                  "since": "0,764,15",
                  "text": "0,755,8,339"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "access": "private",
                "name": "cls",
                "readonly": true,
                "text": "The class to which this instance is associated.\n",
                "type": "Ext.Class",
                "src": {
                  "access": "0,23,8",
                  "name": "0,22,30",
                  "readonly": "0,24,8",
                  "text": "0,22,34,48",
                  "type": "0,22,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "superCfg",
                "readonly": true,
                "text": "The super class `Configurator` instance or <a href='#!/api/null'>null</a> if there is no super class.\n",
                "type": "Ext.Configurator",
                "src": {
                  "access": "0,32,8",
                  "name": "0,31,37",
                  "readonly": "0,33,8",
                  "text": "0,29,8,79",
                  "type": "0,31,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "configs",
                "readonly": true,
                "text": "This object holds an <a href='#!/api/Ext.Config'>Ext.Config</a> value for each config property keyed by name.\nThis object has as its prototype object the <a href='#!/api/Ext.Configurator-property-configs'>configs</a> of its super class.\n\nThis map is maintained as each property is added via the <a href='#!/api/Ext.Configurator-method-add'>add</a> method.\n",
                "type": "Object",
                "src": {
                  "access": "0,45,12",
                  "name": "0,44,31",
                  "readonly": "0,46,12",
                  "text": "0,39,12,227",
                  "type": "0,44,23"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "cachedConfigs",
                "readonly": true,
                "text": "This object holds a bool value for each cachedConfig property keyed by name.\n\nThis map is maintained as each property is added via the <a href='#!/api/Ext.Configurator-method-add'>add</a> method.\n",
                "type": "Object",
                "src": {
                  "access": "0,56,12",
                  "name": "0,55,31",
                  "readonly": "0,57,12",
                  "text": "0,51,12,150",
                  "type": "0,55,23"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "initMap",
                "readonly": true,
                "text": "This object holds a <a href='#!/api/Number'>Number</a> for each config property keyed by name. This object has\nas its prototype object the <a href='#!/api/Ext.Configurator-property-initMap'>initMap</a> of its super class. The value of each property\nhas the following meaning:\n\n  * `0` - initial value is <a href='#!/api/null'>null</a> and requires no processing.\n  * `1` - initial value must be set on each instance.\n  * `2` - initial value can be cached on the prototype by the first instance.\n\nAny <a href='#!/api/null'>null</a> values will either never be added to this map or (if added by a base\nclass and set to <a href='#!/api/null'>null</a> by a derived class) will cause the entry to be 0.\n\nThis map is maintained as each property is added via the <a href='#!/api/Ext.Configurator-method-add'>add</a> method.\n",
                "type": "Object",
                "src": {
                  "access": "0,76,12",
                  "name": "0,75,31",
                  "readonly": "0,77,12",
                  "text": "0,62,12,620",
                  "type": "0,75,23"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "values",
                "readonly": true,
                "text": "This object holds the default value for each config property keyed by name. This\nobject has as its prototype object the <a href='#!/api/Ext.Configurator-property-values'>values</a> of its super class.\n\nThis map is maintained as each property is added via the <a href='#!/api/Ext.Configurator-method-add'>add</a> method.\n",
                "type": "Object",
                "src": {
                  "access": "0,88,12",
                  "name": "0,87,31",
                  "readonly": "0,89,12",
                  "text": "0,82,12,222",
                  "type": "0,87,23"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "initList",
                "text": "This array holds the properties that need to be set on new instances.\n\nThis array is populated when the first instance is passed to <a href='#!/api/Ext.Configurator-method-configure'>configure</a> (basically\nwhen the first instance is created). The entries in <a href='#!/api/Ext.Configurator-property-initMap'>initMap</a> are iterated to find\nthose configs needing per-instance processing.\n",
                "type": "Ext.Config[]",
                "src": {
                  "access": "0,129,8",
                  "name": "0,128,33",
                  "text": "0,122,8,286",
                  "type": "0,128,19"
                }
              }
            ]
          }
        ],
        "src": {
          "access": "0,4,4",
          "name": "0,2,11",
          "text": "0,3,4,54"
        }
      }
    ]
  },
  "version": 1
}