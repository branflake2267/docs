{
  "$type": "doxi",
  "files": [
    "../../../packages/exporter/src/exporter/file/excel/Row.js",
    "../../../packages/exporter/src/exporter/file/Base.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "extends": "Ext.exporter.file.Base",
        "name": "Ext.exporter.file.excel.Row",
        "text": "This class is used to create an xml Excel Row\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "autoFitHeight",
                "optional": true,
                "text": "\nSet this to 1 if you want to auto fit its height\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "0,9,28",
                  "text": "0,10,12,50",
                  "type": "0,9,18",
                  "value": "0,9,42"
                }
              },
              {
                "$type": "property",
                "name": "caption",
                "text": "\nSpecifies the caption that should appear when the Component's custom row and column headers are showing.\n",
                "type": "String",
                "src": {
                  "name": "0,15,26",
                  "text": "0,16,12,106",
                  "type": "0,15,18"
                }
              },
              {
                "$type": "property",
                "name": "cells",
                "text": "\nCollection of cells available on this row.\n",
                "type": "Ext.exporter.file.excel.Cell[]",
                "src": {
                  "name": "0,21,50",
                  "text": "0,22,12,44",
                  "type": "0,21,18"
                }
              },
              {
                "$type": "property",
                "name": "height",
                "text": "\nRow's height in the Excel table\n",
                "type": "Number",
                "src": {
                  "name": "0,27,26",
                  "text": "0,28,12,33",
                  "type": "0,27,18"
                }
              },
              {
                "$type": "property",
                "name": "id",
                "text": "\nUnique id for this object. Auto generated when missing.\n",
                "type": "String",
                "src": {
                  "name": "1,14,26",
                  "text": "1,15,12,57",
                  "type": "1,14,18"
                }
              },
              {
                "$type": "property",
                "name": "index",
                "text": "\nIndex of this row in the Excel table\n",
                "type": "String",
                "src": {
                  "name": "0,33,26",
                  "text": "0,34,12,38",
                  "type": "0,33,18"
                }
              },
              {
                "$type": "property",
                "name": "span",
                "text": "\nSpecifies the number of adjacent rows with the same formatting as this row. When a Span attribute\nis used, the spanned row elements are not written out.\n\nAs mentioned in the index config, rows must not overlap. Doing so results in an XML Spreadsheet document\nthat is invalid. Care must be taken with this attribute to ensure that the span does not include another\nrow index that is specified.\n\nUnlike columns, rows with the Span attribute must be empty. A row that contains a Span attribute and\none or more Cell elements is considered invalid. The Span attribute for rows is a short-hand method\nfor setting formatting properties for multiple, empty rows.\n",
                "type": "Number",
                "src": {
                  "name": "0,39,26",
                  "text": "0,40,12,657",
                  "type": "0,39,18"
                }
              },
              {
                "$type": "property",
                "name": "styleId",
                "text": "\nExcel style attached to this row\n",
                "type": "String",
                "src": {
                  "name": "0,55,26",
                  "text": "0,56,12,34",
                  "type": "0,55,18"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "addCell",
                "text": "Convenience method to add cells. You can also use workbook.getCells().add(config).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "type": "Object/Array",
                    "src": {
                      "name": "0,102,30",
                      "type": "0,102,16"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.exporter.file.excel.Cell/Ext.exporter.file.excel.Cell[]",
                    "src": {
                      "type": "0,103,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,105,0",
                  "text": "0,101,8,83"
                }
              },
              {
                "$type": "method",
                "name": "checkCollection",
                "text": "This method could be used in config appliers that need to initialize a\nCollection that has items of type className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "data",
                    "src": {
                      "name": "1,44,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "dataCollection",
                    "src": {
                      "name": "1,45,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,46,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "*",
                    "src": {
                      "type": "1,47,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,49,0",
                  "text": "1,41,8,117"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "constructCollection",
                "text": "Create a new Collection with a decoder for the specified className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,64,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.util.Collection",
                    "src": {
                      "type": "1,65,18"
                    }
                  }
                ],
                "src": {
                  "access": "1,67,8",
                  "name": "1,69,0",
                  "text": "1,62,8,69"
                }
              },
              {
                "$type": "method",
                "name": "getCell",
                "text": "Convenience method to fetch a cell by its id.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "src": {
                      "name": "0,111,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.exporter.file.excel.Cell",
                    "src": {
                      "type": "0,112,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,114,0",
                  "text": "0,110,8,46"
                }
              },
              {
                "$type": "method",
                "name": "getCells",
                "items": [
                  {
                    "$type": "return",
                    "text": "\nReturns the collection of cells available in this row\n",
                    "type": "Ext.util.Collection",
                    "src": {
                      "text": "0,65,8,55",
                      "type": "0,64,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,63,16"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getCollectionDecoder",
                "text": "Builds a Collection decoder for the specified className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,78,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Function",
                    "src": {
                      "type": "1,79,18"
                    }
                  }
                ],
                "src": {
                  "access": "1,81,8",
                  "name": "1,83,0",
                  "text": "1,76,8,58"
                }
              },
              {
                "$type": "method",
                "name": "getRenderData",
                "text": "Return the data used when rendering the template\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "1,101,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,103,0",
                  "text": "1,99,8,50"
                }
              },
              {
                "$type": "method",
                "name": "render",
                "text": "Renders the content according to the template provided to the class\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "1,92,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,94,0",
                  "text": "1,90,8,69"
                }
              }
            ]
          }
        ],
        "src": {
          "extends": "0,5,0",
          "name": "0,4,0",
          "text": "0,2,4,46"
        }
      }
    ]
  },
  "version": 1
}