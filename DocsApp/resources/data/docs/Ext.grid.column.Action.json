{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/grid/column/Action.js",
    "../../../ext/classic/theme-neutral/sass/var/grid/column/Action.scss",
    "../../../ext/classic/classic/src/util/FocusableContainer.js",
    "../../../ext/classic/classic/src/util/Floating.js",
    "../../../ext/classic/classic/src/container/Container.js",
    "../../../ext/classic/classic/src/grid/column/Column.js",
    "../../../ext/classic/classic/src/Component.js",
    "../../../ext/classic/classic/src/layout/container/Anchor.js",
    "../../../ext/packages/core/src/mixin/Accessible.js",
    "../../../ext/packages/core/src/mixin/Bindable.js",
    "../../../ext/classic/classic/src/grid/header/Container.js",
    "../../../ext/classic/classic/src/util/Focusable.js",
    "../../../ext/classic/classic/src/util/KeyboardInteractive.js",
    "../../../ext/packages/core/src/mixin/Observable.js",
    "../../../ext/classic/classic/src/util/ComponentDragger.js",
    "../../../ext/packages/core/src/mixin/Container.js",
    "../../../ext/classic/classic/src/state/Stateful.js",
    "../../../ext/classic/classic/src/util/ElementContainer.js",
    "../../../ext/packages/core/src/mixin/ComponentDelegation.js",
    "../../../ext/packages/core/src/util/Positionable.js",
    "../../../ext/classic/classic/src/util/Renderable.js",
    "../../../ext/classic/classic/src/util/Animate.js",
    "../../../ext/packages/core/src/mixin/Queryable.js",
    "../../../ext/packages/core/src/mixin/Inheritable.js",
    "../../../../docs/docs/js/primitives/Object.js",
    "../../../ext/classic/theme-neutral/sass/var/grid/column/Column.scss",
    "../../../ext/classic/theme-neutral/sass/var/grid/header/Container.scss",
    "../../../ext/classic/theme-neutral/sass/var/scroll/Indicator.scss"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "widget.actioncolumn",
        "alternateClassNames": "Ext.grid.ActionColumn",
        "extended": "Ext.grid.column.Column,Ext.grid.header.Container,Ext.container.Container,Ext.Component,Object",
        "extends": "Ext.grid.column.Column",
        "name": "Ext.grid.column.Action",
        "text": "A Grid header type which renders an icon, or a series of icons in a grid cell, and offers a scoped click\nhandler for each icon.\n\n    @example\n    // Init the singleton.  Any tag-based quick tips will start working.\n    Ext.tip.QuickTipManager.init();\n\n    Ext.create('Ext.data.Store', {\n        storeId:'employeeStore',\n        fields:['firstname', 'lastname', 'seniority', 'dep', 'hired'],\n        data:[\n            {firstname:\"Michael\", lastname:\"Scott\"},\n            {firstname:\"Dwight\", lastname:\"Schrute\"},\n            {firstname:\"Jim\", lastname:\"Halpert\"},\n            {firstname:\"Kevin\", lastname:\"Malone\"},\n            {firstname:\"Angela\", lastname:\"Martin\"}\n        ]\n    });\n\n    Ext.create('Ext.grid.Panel', {\n        title: 'Action Column Demo',\n        store: Ext.data.StoreManager.lookup('employeeStore'),\n        columns: [\n            {text: 'First Name',  dataIndex:'firstname'},\n            {text: 'Last Name',  dataIndex:'lastname'},\n            {\n                xtype:'actioncolumn',\n                width:50,\n                items: [{\n                    icon: 'extjs-build/examples/shared/icons/fam/cog_edit.png',  // Use a URL in the icon config\n                    tooltip: 'Edit',\n                    handler: function(grid, rowIndex, colIndex) {\n                        var rec = grid.getStore().getAt(rowIndex);\n                        alert(\"Edit \" + rec.get('firstname'));\n                    }\n                },{\n                    icon: 'extjs-build/examples/restful/images/delete.png',\n                    tooltip: 'Delete',\n                    handler: function(grid, rowIndex, colIndex) {\n                        var rec = grid.getStore().getAt(rowIndex);\n                        alert(\"Terminate \" + rec.get('firstname'));\n                    }\n                }]\n            }\n        ],\n        width: 250,\n        renderTo: Ext.getBody()\n    });\n\nThe action column can be at any index in the columns array, and a grid can have any number of\naction columns.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "activeChildTabIndex",
                "optional": true,
                "text": "DOM tabIndex attribute to set on the\nactive Focusable child of this container when using the \"Roaming tabindex\"\ntechnique. Set this value to > 0 to precisely control the tabbing order\nof the components/containers on the page.\n",
                "type": "Number",
                "value": "0",
                "src": {
                  "name": "2,43,23",
                  "text": "2,43,46,37:2,44,8,189",
                  "type": "2,43,14",
                  "value": "2,43,43"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "activeCounter",
                "text": "An incrementing numeric counter indicating activation index for use by the <a href='#!/api/Ext.grid.column.Action-property-zIndexManager'>zIndexManager</a>\nto sort its stack.\n",
                "type": "Number",
                "src": {
                  "access": "3,126,12",
                  "name": "3,127,26",
                  "text": "3,127,40,98:3,128,12,19",
                  "type": "3,127,18"
                }
              },
              {
                "$type": "property",
                "name": "activeItem",
                "since": "2.3.0",
                "text": "A string component id or the numeric index of the component that should be\ninitially activated within the container's layout on render.  For example,\nactiveItem: 'item-1' or activeItem: 0 (index 0 = the first item in the\ncontainer's collection).  activeItem only applies to layout styles that can\ndisplay items one at a time (like <a href='#!/api/Ext.layout.container.Card'>Ext.layout.container.Card</a> and\n<a href='#!/api/Ext.layout.container.Fit'>Ext.layout.container.Fit</a>).\n",
                "type": "String/Number",
                "src": {
                  "name": "4,442,29",
                  "since": "4,450,15",
                  "text": "4,443,8,405",
                  "type": "4,442,14"
                }
              },
              {
                "$type": "property",
                "name": "align",
                "text": "Sets the alignment of the header and rendered columns.\nPossible values are: `'left'`, `'center'`, and `'right'`.\n",
                "type": "String",
                "src": {
                  "name": "5,605,22",
                  "text": "5,606,8,113",
                  "type": "5,605,14"
                }
              },
              {
                "$type": "property",
                "name": "alignOnScroll",
                "optional": true,
                "text": "By default, when the <a href='#!/api/Ext.Component-method-alignTo'>Ext.Component#alignTo</a> method is called, a floating component will\nscroll to keep aligned with the anchoring element if the anchoring element is part of the scroll.\n\nIf this is not necessary, and the <a href='#!/api/Ext.grid.column.Action-method-alignTo'>alignTo</a> is a one-off operation then set this config to `false`.\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "3,46,24",
                  "text": "3,47,8,302",
                  "type": "3,46,14",
                  "value": "3,46,38"
                }
              },
              {
                "$type": "property",
                "name": "alignTarget",
                "optional": true,
                "text": "A Component or Element by which to position this component according to the <a href='#!/api/Ext.grid.column.Action-cfg-defaultAlign'>defaultAlign</a>.\nDefaults to the owning Container.\n\n*Only applicable if this component is <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a>*\n\n*Used upon first show*.\n",
                "type": "String",
                "src": {
                  "name": "6,414,23",
                  "text": "6,415,8,220",
                  "type": "6,414,14"
                }
              },
              {
                "$type": "property",
                "name": "altText",
                "text": "The alt text to use for the image element.\n",
                "type": "String",
                "src": {
                  "name": "0,282,22",
                  "text": "0,283,8,43",
                  "type": "0,282,14"
                }
              },
              {
                "$type": "property",
                "name": "alwaysOnTop",
                "optional": true,
                "text": "A flag indicating that this component should be on the top of the z-index stack for use by the <a href='#!/api/Ext.grid.column.Action-property-zIndexManager'>zIndexManager</a>\nto sort its stack.\n\nThis may be a positive number to prioritize the ordering of multiple visible always on top components.\n\nThis may be set to a *negative* number to prioritize a component to the *bottom* of the z-index stack.\n",
                "type": "Boolean/Number",
                "value": "false",
                "src": {
                  "name": "3,133,35",
                  "text": "3,133,54,118:3,134,12,227",
                  "type": "3,133,18",
                  "value": "3,133,47"
                }
              },
              {
                "$type": "property",
                "inheritdoc": "Ext.layout.container.Anchor",
                "name": "anchor",
                "type": "String",
                "src": {
                  "inheritdoc": "6,426,8",
                  "name": "6,425,22",
                  "type": "6,425,14"
                }
              },
              {
                "$type": "property",
                "name": "anchorSize",
                "text": "Defines the anchoring size of container.\nEither a number to define the width of the container or an object with <a href='#!/api/Ext.grid.column.Action-cfg-width'>width</a> and <a href='#!/api/Ext.grid.column.Action-cfg-height'>height</a> fields.\n",
                "type": "Number/Object",
                "src": {
                  "name": "7,304,33",
                  "text": "7,305,12,141",
                  "type": "7,304,18"
                }
              },
              {
                "$type": "property",
                "name": "animateShadow",
                "optional": true,
                "text": "`true` to animate the shadow along with the component while the component is animating.\nBy default the shadow is hidden while the component is animating\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "3,31,24",
                  "text": "3,32,8,153",
                  "type": "3,31,14",
                  "value": "3,31,38"
                }
              },
              {
                "$type": "property",
                "name": "ariaAttributes",
                "text": "An object containing ARIA attributes to be set\non this Component's ARIA element. Use this to set the attributes that cannot be\ndetermined by the Component's state, such as `aria-live`, `aria-flowto`, etc.\n\n**Note** that this config is only meaningful at the Component rendering time,\nand setting it after that will do nothing.\n",
                "type": "Object",
                "src": {
                  "name": "8,39,26",
                  "text": "8,39,41,47:8,40,12,280",
                  "type": "8,39,18"
                }
              },
              {
                "$type": "property",
                "name": "ariaDescribedBy",
                "optional": true,
                "text": "DOM selector for a child element that is to be used\nas description for this Component, set in `aria-describedby` attribute.\nThe selector works the same way as <a href='#!/api/Ext.grid.column.Action-cfg-ariaLabelledBy'>ariaLabelledBy</a>.\n",
                "type": "String",
                "src": {
                  "name": "8,32,23",
                  "text": "8,32,40,52:8,33,8,132",
                  "type": "8,32,14"
                }
              },
              {
                "$type": "property",
                "name": "ariaLabel",
                "optional": true,
                "text": "ARIA label for this Component. It is best to use\n<a href='#!/api/Ext.grid.column.Action-cfg-ariaLabelledBy'>ariaLabelledBy</a> option instead, because screen readers prefer\n`aria-labelledby` attribute to `aria-label`. <a href='#!/api/Ext.grid.column.Action-cfg-ariaLabel'>ariaLabel</a> and\n<a href='#!/api/Ext.grid.column.Action-cfg-ariaLabelledBy'>ariaLabelledBy</a> config options are mutually exclusive.\n",
                "type": "String",
                "src": {
                  "name": "8,15,23",
                  "text": "8,15,34,49:8,16,8,201",
                  "type": "8,15,14"
                }
              },
              {
                "$type": "property",
                "name": "ariaLabelledBy",
                "optional": true,
                "text": "DOM selector for a child element that is to be used\nas label for this Component, set in `aria-labelledby` attribute.\nIf the selector is by <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a>, the label element can be any existing element,\nnot necessarily a child of the main Component element.\n\n<a href='#!/api/Ext.grid.column.Action-cfg-ariaLabelledBy'>ariaLabelledBy</a> and <a href='#!/api/Ext.grid.column.Action-cfg-ariaLabel'>ariaLabel</a> config options are\nmutually exclusive, and <a href='#!/api/Ext.grid.column.Action-cfg-ariaLabelledBy'>ariaLabelledBy</a> has the higher precedence.\n",
                "type": "String",
                "src": {
                  "name": "8,22,23",
                  "text": "8,22,39,52:8,23,8,331",
                  "type": "8,22,14"
                }
              },
              {
                "$type": "property",
                "name": "autoDestroy",
                "optional": true,
                "since": "2.3.0",
                "text": "If true the container will automatically destroy any contained component that is removed\nfrom it, else destruction must be handled manually.\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "4,454,24",
                  "since": "4,457,15",
                  "text": "4,455,8,141",
                  "type": "4,454,14",
                  "value": "4,454,36"
                }
              },
              {
                "$type": "property",
                "name": "autoEl",
                "since": "2.3.0",
                "text": "A tag name or <a href='#!/api/Ext.dom.Helper'>Ext.dom.Helper</a> spec used to create the <a href='#!/api/Ext.grid.column.Action-method-getEl'>getEl</a> which will\nencapsulate this Component.\n\nYou do not normally need to specify this. For the base classes <a href='#!/api/Ext.Component'>Ext.Component</a> and\n<a href='#!/api/Ext.container.Container'>Ext.container.Container</a>, this defaults to **'div'**. The more complex Sencha classes use a more\ncomplex DOM structure specified by their own <a href='#!/api/Ext.grid.column.Action-cfg-renderTpl'>renderTpl</a>s.\n\nThis is intended to allow the developer to create application-specific utility Components encapsulated by\ndifferent DOM elements. Example usage:\n\n    {\n        xtype: 'component',\n        autoEl: {\n            tag: 'img',\n            src: 'http://www.example.com/example.jpg'\n        }\n    }, {\n        xtype: 'component',\n        autoEl: {\n            tag: 'blockquote',\n            html: 'autoEl is cool!'\n        }\n    }, {\n        xtype: 'container',\n        autoEl: 'ul',\n        cls: 'ux-unordered-list',\n        items: {\n            xtype: 'component',\n            autoEl: 'li',\n            html: 'First list item'\n        }\n    }\n",
                "type": "String/Object",
                "src": {
                  "name": "6,430,29",
                  "since": "6,464,15",
                  "text": "6,431,8,1033",
                  "type": "6,430,14"
                }
              },
              {
                "$type": "property",
                "name": "autoRender",
                "text": "This config is intended mainly for non-<a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> Components which may or may not be shown. Instead of using\n<a href='#!/api/Ext.grid.column.Action-cfg-renderTo'>renderTo</a> in the configuration, and rendering upon construction, this allows a Component to render itself\nupon first _<a href='#!/api/Ext.Component-method-show'>Ext.Component#method-show</a>_. If <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> is `true`, the value of this config is omitted as if it is `true`.\n\nSpecify as `true` to have this Component render to the document body upon first show.\n\nSpecify as an element, or the ID of an element to have this Component render to a specific element upon first\nshow.\n",
                "type": "Boolean/String/HTMLElement/Ext.dom.Element",
                "src": {
                  "name": "6,468,58",
                  "text": "6,469,8,583",
                  "type": "6,468,14"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-scrollable'>scrollable</a> instead\n",
                "deprecatedVersion": "5.1.0",
                "name": "autoScroll",
                "optional": true,
                "text": "`true` to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary,\n`false` to clip any overflowing content.\n\nThis should not be combined with <a href='#!/api/Ext.grid.column.Action-cfg-overflowX'>overflowX</a> or  <a href='#!/api/Ext.grid.column.Action-cfg-overflowY'>overflowY</a>.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "deprecatedMessage": "6,486,8",
                  "deprecatedVersion": "6,486,8",
                  "name": "6,481,24",
                  "text": "6,482,8,232",
                  "type": "6,481,14",
                  "value": "6,481,35"
                }
              },
              {
                "$type": "property",
                "name": "autoShow",
                "since": "2.3.0",
                "text": "`true` to automatically show the component upon creation. This config option may only be used for\n<a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> components or components that use <a href='#!/api/Ext.grid.column.Action-cfg-autoRender'>autoRender</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,490,23",
                  "since": "6,494,15",
                  "text": "6,491,8,176",
                  "type": "6,490,14"
                }
              },
              {
                "$type": "property",
                "name": "baseCls",
                "optional": true,
                "text": "The base CSS class to apply to this component's element. This will also be prepended to elements within this\ncomponent like Panel's body will get a class `x-panel-body`. This means that if you create a subclass of Panel, and\nyou want it to get all the Panels styling for the element and the body, you leave the <a href='#!/api/Ext.grid.column.Action-cfg-baseCls'>baseCls</a> `x-panel` and use\n<a href='#!/api/Ext.grid.column.Action-cfg-componentCls'>componentCls</a> to add specific styling for this component.\n",
                "type": "String",
                "value": "'x-component'",
                "src": {
                  "name": "6,499,23",
                  "text": "6,500,8,398",
                  "type": "6,499,14",
                  "value": "6,499,31"
                }
              },
              {
                "$type": "property",
                "name": "bind",
                "optional": true,
                "text": "Setting this config option adds or removes data bindings for other configs.\nFor example, to bind the `title` config:\n\n     var panel = Ext.create({\n         xtype: 'panel',\n         bind: {\n             title: 'Hello {user.name}'\n         }\n     });\n\nTo dynamically add bindings:\n\n     panel.setBind({\n         title: 'Greetings {user.name}!'\n     });\n\nTo remove bindings:\n\n     panel.setBind({\n         title: null\n     });\n\nThe bind expressions are presented to <a href='#!/api/Ext.app.ViewModel-method-bind'>Ext.app.ViewModel#bind</a>. The\n`ViewModel` instance is determined by <a href='#!/api/Ext.grid.column.Action-method-lookupViewModel'>lookupViewModel</a>.\n",
                "type": "Object",
                "src": {
                  "name": "9,12,27",
                  "text": "9,13,12,559",
                  "type": "9,12,18"
                }
              },
              {
                "$type": "property",
                "name": "border",
                "text": "Specifies the border size for this component. The border can be a single numeric value to apply to all sides or it can\nbe a CSS style specification for each style, for example: '10 5 3 10' (top, right, bottom, left).\n\nFor components that have no border by default, setting this won't make the border appear by itself.\nYou also need to specify border color and style:\n\n    border: 5,\n    style: {\n        borderColor: 'red',\n        borderStyle: 'solid'\n    }\n\nTo turn off the border, use `border: false`.\n",
                "type": "Number/String/Boolean",
                "src": {
                  "name": "6,508,37",
                  "text": "6,509,8,505",
                  "type": "6,508,14"
                }
              },
              {
                "$type": "property",
                "name": "bubbleEvents",
                "since": "3.4.0",
                "text": "An array of events that, when fired, should be bubbled to any parent container.\nSee <a href='#!/api/Ext.util.Observable-method-enableBubble'>Ext.util.Observable#enableBubble</a>.\n",
                "type": "String[]",
                "src": {
                  "name": "4,462,24",
                  "since": "4,465,15",
                  "text": "4,463,8,126",
                  "type": "4,462,14"
                }
              },
              {
                "$type": "property",
                "name": "cellWrap",
                "optional": true,
                "text": "True to allow whitespace in this column's cells to wrap, and cause taller column height where\nnecessary.\n\nThis implicitly sets the <a href='#!/api/Ext.grid.column.Action-cfg-variableRowHeight'>variableRowHeight</a> config to `true`\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "5,253,24",
                  "text": "5,254,8,175",
                  "type": "5,253,14",
                  "value": "5,253,33"
                }
              },
              {
                "$type": "property",
                "inheritdoc": "Ext.util.ElementContainer#childEls",
                "name": "childEls",
                "type": "Object/String[]/Object[]",
                "src": {
                  "inheritdoc": "6,526,8",
                  "name": "6,525,40",
                  "type": "6,525,14"
                }
              },
              {
                "$type": "property",
                "name": "cls",
                "optional": true,
                "since": "1.1.0",
                "text": "An optional extra CSS class that will be added to this component's Element.\nThe value can be a string, a list of strings separated by spaces, or an array of strings. This can be useful\nfor adding customized styles to the component or any of its children using standard CSS rules.\n",
                "type": "String/String[]",
                "value": "''",
                "src": {
                  "name": "6,542,32",
                  "since": "6,547,15",
                  "text": "6,543,8,281",
                  "type": "6,542,14",
                  "value": "6,542,36"
                }
              },
              {
                "$type": "property",
                "name": "columns",
                "text": "An optional array of sub-column definitions. This column becomes a group, and houses the columns defined in the\n<a href='#!/api/Ext.grid.column.Action-cfg-columns'>columns</a> config.\n\nGroup columns may not be sortable. But they may be hideable and moveable. And you may move headers into and out\nof a group. Note that if all sub columns are dragged out of a group, the group is destroyed.\n",
                "type": "Object[]",
                "src": {
                  "name": "5,168,24",
                  "text": "5,169,8,336",
                  "type": "5,168,14"
                }
              },
              {
                "$type": "property",
                "name": "columnWidth",
                "optional": true,
                "text": "Defines the column width inside <a href='#!/api/Ext.layout.container.Column'>Ext.layout.container.Column</a>.\n\nThe columnWidth property is always evaluated as a percentage and must be a decimal value greater than 0 and\nless than 1 (e.g., .25).  See the description at the top of <a href='#!/api/Ext.layout.container.Column'>Ext.layout.container.Column</a> for\nadditional usage details when combining width and columnWidth configs within the layout.\n",
                "type": "Number",
                "src": {
                  "name": "6,551,23",
                  "text": "6,552,8,395",
                  "type": "6,551,14"
                }
              },
              {
                "$type": "property",
                "name": "componentCls",
                "text": "CSS Class to be added to a components root level element to give distinction to it via styling.\n",
                "type": "String",
                "src": {
                  "name": "6,560,22",
                  "text": "6,561,8,96",
                  "type": "6,560,14"
                }
              },
              {
                "$type": "property",
                "name": "componentLayout",
                "text": "The sizing and positioning of a Component's internal Elements is the responsibility of the Component's layout\nmanager which sizes a Component's internal structure in response to the Component being sized.\n\nGenerally, developers will not use this configuration as all provided Components which need their internal\nelements sizing (Such as <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a>) come with their own componentLayout managers.\n\nThe <a href='#!/api/Ext.layout.container.Auto'>Ext.layout.container.Auto</a> will be used on instances of the base Ext.Component\nclass which simply sizes the Component's encapsulating element to the height and width specified in the\n<a href='#!/api/Ext.grid.column.Action-method-setSize'>setSize</a> method.\n",
                "type": "String/Object",
                "src": {
                  "name": "6,566,29",
                  "text": "6,567,8,670",
                  "type": "6,566,14"
                }
              },
              {
                "$type": "property",
                "name": "constrain",
                "text": "True to constrain this Components within its containing element, false to allow it to fall outside of its containing\nelement. By default this Component will be rendered to `document.body`. To render and constrain this Component within\nanother element specify <a href='#!/api/Ext.Component-cfg-renderTo'>Ext.Component#renderTo</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "3,38,23",
                  "text": "3,39,8,300",
                  "type": "3,38,14"
                }
              },
              {
                "$type": "property",
                "name": "constraintInsets",
                "text": "An object or a string (in TRBL order) specifying insets from the configured <a href='#!/api/Ext.grid.column.Action-cfg-constrainTo'>constrainTo</a>\nwithin which this component must be constrained when positioning or sizing.\nexample:\n\n   constraintInsets: '10 10 10 10' // Constrain with 10px insets from parent\n",
                "type": "Object/String",
                "src": {
                  "name": "6,581,29",
                  "text": "6,582,8,277",
                  "type": "6,581,14"
                }
              },
              {
                "$type": "property",
                "name": "constrainTo",
                "text": "A <a href='#!/api/Ext.util.Region'>Ext.util.Region</a> (or an element from which a Region measurement will be read) which is used\nto constrain the component. Only applies when the component is floating.\n",
                "type": "Ext.util.Region/Ext.dom.Element",
                "src": {
                  "name": "6,590,47",
                  "text": "6,591,8,181",
                  "type": "6,590,14"
                }
              },
              {
                "$type": "property",
                "name": "contentEl",
                "since": "3.4.0",
                "text": "Specify an existing HTML element, or the <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> of an existing HTML element to use as the content for this component.\n\nThis config option is used to take an existing HTML element and place it in the layout element of a new component\n(it simply moves the specified DOM element _after the Component is rendered_ to use as the content.\n\n**Notes:**\n\nThe specified HTML element is appended to the layout element of the component _after any configured\n<a href='#!/api/Ext.grid.column.Action-cfg-html'>html</a> has been inserted_, and so the document will not contain this element at the time\nthe <a href='#!/api/Ext.grid.column.Action-event-render'>event-render</a> event is fired.\n\nThe specified HTML element used will not participate in any **<a href='#!/api/Ext.container.Container-cfg-layout'>Ext.container.Container#layout</a>**\nscheme that the Component may use. It is just HTML. Layouts operate on child\n**<a href='#!/api/Ext.container.Container-cfg-items'>Ext.container.Container#cfg-items</a>**.\n\nAdd either the `x-hidden` or the `x-hidden-display` CSS class to prevent a brief flicker of the content before it\nis rendered to the panel.\n",
                "type": "String",
                "src": {
                  "name": "6,596,22",
                  "since": "6,615,15",
                  "text": "6,597,8,974",
                  "type": "6,596,14"
                }
              },
              {
                "$type": "property",
                "name": "controller",
                "text": "A string alias, a configuration object or an instance of a `ViewController` for\nthis container. Sample usage:\n\n    Ext.define('MyApp.UserController', {\n        alias: 'controller.user'\n    });\n\n    Ext.define('UserContainer', {\n        extend: 'Ext.container.container',\n        controller: 'user'\n    });\n    // Or\n    Ext.define('UserContainer', {\n        extend: 'Ext.container.container',\n        controller: {\n            type: 'user',\n            someConfig: true\n        }\n    });\n\n    // Can also instance at runtime\n    var ctrl = new MyApp.UserController();\n    var view = new UserContainer({\n        controller: ctrl\n    });\n",
                "type": "String/Object/Ext.app.ViewController",
                "src": {
                  "name": "9,45,56",
                  "text": "9,46,12,637",
                  "type": "9,45,18"
                }
              },
              {
                "$type": "property",
                "name": "data",
                "since": "3.4.0",
                "text": "The initial set of data to apply to the <a href='#!/api/Ext.grid.column.Action-cfg-tpl'>tpl</a> to update the content\narea of the Component.\n",
                "type": "Object",
                "src": {
                  "name": "6,280,26",
                  "since": "6,284,19",
                  "text": "6,281,12,101",
                  "type": "6,280,18"
                }
              },
              {
                "$type": "property",
                "name": "dataIndex",
                "text": "The name of the field in the grid's <a href='#!/api/Ext.data.Store'>Ext.data.Store</a>s <a href='#!/api/Ext.data.Model'>Ext.data.Model</a> definition from\nwhich to draw the column's value. **Required.**\n",
                "type": "String",
                "src": {
                  "name": "5,185,22",
                  "text": "5,186,8,148",
                  "type": "5,185,14"
                }
              },
              {
                "$type": "property",
                "name": "defaultAlign",
                "optional": true,
                "text": "The default <a href='#!/api/Ext.util.Positionable-method-getAlignToXY'>Ext.util.Positionable#getAlignToXY</a> anchor position value for this component\nrelative to its <a href='#!/api/Ext.grid.column.Action-cfg-alignTarget'>alignTarget</a> (which defaults to its owning Container).\n\n_Only applicable if this component is <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a>_\n\n*Used upon first show*.\n",
                "type": "String",
                "value": "\"c-c\"",
                "src": {
                  "name": "6,619,23",
                  "text": "6,620,8,291",
                  "type": "6,619,14",
                  "value": "6,619,36"
                }
              },
              {
                "$type": "property",
                "name": "defaultFocus",
                "text": "\nSpecifies a child Component to receive focus when this Container's <a href='#!/api/Ext.grid.column.Action-method-focus'>method-focus</a>\nmethod is called. Should be a valid <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector.\n",
                "type": "String",
                "src": {
                  "name": "4,650,22",
                  "text": "4,651,8,169",
                  "type": "4,650,14"
                }
              },
              {
                "$type": "property",
                "name": "defaultListenerScope",
                "text": "If `true`, this component will be the default scope (this pointer) for events\nspecified with string names so that the scope can be dynamically resolved. The\ncomponent will automatically become the defaultListenerScope if a\n<a href='#!/api/Ext.grid.column.Action-cfg-controller'>controller</a> is specified.\n\nSee the introductory docs for <a href='#!/api/Ext.container.Container'>Ext.container.Container</a> for some sample\nusages.\n\n**NOTE**: This value can only be reliably set at construction time. Setting it\nafter that time may not correctly rewire all of the potentially effected\nlisteners.\n",
                "type": "Boolean",
                "src": {
                  "name": "9,84,27",
                  "text": "9,85,12,508",
                  "type": "9,84,18"
                }
              },
              {
                "$type": "property",
                "name": "defaults",
                "since": "2.3.0",
                "text": "This option is a means of applying default settings to all added items whether added\nthrough the <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> config or via the <a href='#!/api/Ext.grid.column.Action-method-add'>method-add</a> or <a href='#!/api/Ext.grid.column.Action-method-insert'>insert</a> methods.\n\nDefaults are applied to both config objects and instantiated components conditionally\nso as not to override existing properties in the item (see <a href='#!/api/Ext-method-applyIf'>Ext#applyIf</a>).\n\nIf the defaults option is specified as a function, then the function will be called\nusing this Container as the scope (`this` reference) and passing the added item as\nthe first parameter. Any resulting object from that call is then applied to the item\nas default properties.\n\nFor example, to automatically apply padding to the body of each of a set of\ncontained <a href='#!/api/Ext.panel.Panel'>Ext.panel.Panel</a> items, you could pass:\n`defaults: {bodyStyle:'padding:15px'}`.\n\nUsage:\n\n    defaults: { // defaults are applied to items, not the container\n        scrollable: true\n    },\n    items: [\n        // default will not be applied here, panel1 will be scrollable: false\n        {\n            xtype: 'panel',\n            id: 'panel1',\n            scrollable: false\n        },\n        // this component will have scrollable: true\n        new Ext.panel.Panel({\n            id: 'panel2'\n        })\n    ]\n",
                "type": "Object/Function",
                "src": {
                  "name": "4,469,31",
                  "since": "4,503,15",
                  "text": "4,470,8,1231",
                  "type": "4,469,14"
                }
              },
              {
                "$type": "property",
                "name": "defaultType",
                "optional": true,
                "since": "2.3.0",
                "text": "The default <a href='#!/api/Ext.Component'>Ext.Component</a> of child Components to create in this Container when\na child item is specified as a raw configuration object, rather than as an instantiated Component.\n",
                "type": "String",
                "value": "\"panel\"",
                "src": {
                  "name": "4,507,24",
                  "since": "4,510,16",
                  "text": "4,508,9,192",
                  "type": "4,507,15",
                  "value": "4,507,36"
                }
              },
              {
                "$type": "property",
                "name": "defaultWidth",
                "text": "Width of the header if no width or flex is specified.\n",
                "type": "Number",
                "src": {
                  "name": "10,67,22",
                  "text": "10,68,8,54",
                  "type": "10,67,14"
                }
              },
              {
                "$type": "property",
                "name": "detachOnRemove",
                "optional": true,
                "text": "True to move any component to the <a href='#!/api/Ext-method-getDetachedBody'>Ext#getDetachedBody</a> when the component is\nremoved from this container. This option is only applicable when the component is not destroyed while\nbeing removed, see <a href='#!/api/Ext.grid.column.Action-cfg-autoDestroy'>autoDestroy</a> and <a href='#!/api/Ext.grid.column.Action-method-remove'>method-remove</a>. If this option is set to false, the DOM\nof the component will remain in the current place until it is explicitly moved.\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "4,515,24",
                  "text": "4,516,8,387",
                  "type": "4,515,14",
                  "value": "4,515,39"
                }
              },
              {
                "$type": "property",
                "name": "disabled",
                "text": "If true, the action will not respond to click events, and will be displayed semi-opaque.\n\nThis Column may also be disabled on a row by row basis by configuring a <a href='#!/api/Ext.grid.column.Action-cfg-isDisabled'>cfg-isDisabled</a> method.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,96,23",
                  "text": "0,97,8,194",
                  "type": "0,96,14"
                }
              },
              {
                "$type": "property",
                "name": "disabledCls",
                "optional": true,
                "text": "CSS class to add when the Component is disabled.\n",
                "type": "String",
                "value": "'x-item-disabled'",
                "src": {
                  "name": "6,653,23",
                  "text": "6,654,8,49",
                  "type": "6,653,14",
                  "value": "6,653,35"
                }
              },
              {
                "$type": "property",
                "name": "dock",
                "text": "The side of the <a href='#!/api/Ext.panel.Panel'>Ext.panel.Panel</a> where this component is to be\ndocked when specified in the panel's\n<a href='#!/api/Ext.panel.Panel-cfg-dockedItems'>Ext.panel.Panel#dockedItems</a> config.\n\nPossible values are:\n\n - top\n - bottom\n - left\n - right\n",
                "type": "'top'/'bottom'/'left'/'right'",
                "src": {
                  "name": "6,659,45",
                  "text": "6,660,8,226",
                  "type": "6,659,14"
                }
              },
              {
                "$type": "property",
                "name": "draggable",
                "text": "False to disable drag-drop reordering of this column.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,612,23",
                  "text": "5,613,8,54",
                  "type": "5,612,14"
                }
              },
              {
                "$type": "property",
                "name": "editor",
                "text": "An optional xtype or config object for a <a href='#!/api/Ext.form.field.Field'>Ext.form.field.Field</a> to use for editing.\nOnly applicable if the grid is using an <a href='#!/api/Ext.grid.plugin.Editing'>Ext.grid.plugin.Editing</a> plugin.\n\n**Note:** The <a href='#!/api/Ext.form.field.HtmlEditor'>Ext.form.field.HtmlEditor</a> field is not a\nsupported editor field type.\n",
                "type": "Object/String",
                "src": {
                  "name": "5,639,29",
                  "text": "5,640,8,288",
                  "type": "5,639,14"
                }
              },
              {
                "$type": "property",
                "controllable": true,
                "name": "editRenderer",
                "text": "A renderer to be used in conjunction with\n<a href='#!/api/Ext.grid.plugin.RowEditing'>Ext.grid.plugin.RowEditing</a>. This renderer is used to display a\ncustom value for non-editable fields.\n\n**Note:** The editRenderer is called when the roweditor is initially shown.\nChanges to the record during editing will not call editRenderer.\n\n    var store = Ext.create('Ext.data.Store', {\n        fields: ['name', 'email'],\n        data: [{\n            \"name\": \"Finn\",\n            \"email\": \"finn@adventuretime.com\"\n        }, {\n            \"name\": \"Jake\",\n            \"email\": \"jake@adventuretime.com\"\n        }]\n    });\n\n    Ext.create('Ext.grid.Panel', {\n        title: 'Land Of Ooo',\n        store: store,\n        columns: [{\n            text: 'Name',\n            dataIndex: 'name',\n            editRenderer: function(value){\n                return '<span style=\"color:gray;\">' + value + '</span>';\n              }\n        }, {\n            text: 'Email',\n            dataIndex: 'email',\n            flex: 1,\n            editor: {\n                xtype: 'textfield',\n                allowBlank: false\n            }\n        }],\n        plugins: {\n            ptype: 'rowediting',\n            clicksToEdit: 1\n        },\n        height: 200,\n        width: 400,\n        renderTo: document.body\n    });\n",
                "type": "Function/String",
                "items": [
                  {
                    "$type": "param",
                    "name": "value",
                    "text": "The data value for the current cell\n\n    editRenderer: function(value){\n        // evaluates `value` to append either `person' or `people`\n        return Ext.util.Format.plural(value, 'person', 'people');\n    }\n",
                    "type": "Object",
                    "src": {
                      "name": "5,541,24",
                      "text": "5,541,30,36:5,542,8,176",
                      "type": "5,541,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "metaData",
                    "text": "**Note:** The metadata param is passed to the\neditRenderer, but is not used.\n",
                    "type": "Object",
                    "src": {
                      "name": "5,548,24",
                      "text": "5,548,33,46:5,549,8,32",
                      "type": "5,548,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "record",
                    "text": "The record for the current row\n\n    editRenderer: function (value, metaData, record) {\n        // evaluate the record's `updated` field and if truthy return the value\n        // from the `newVal` field, else return value\n        var updated = record.get('updated');\n        return updated ? record.get('newVal') : value;\n    }\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "5,551,32",
                      "text": "5,551,39,31:5,552,8,297",
                      "type": "5,551,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "rowIndex",
                    "text": "The index of the current row\n\n    editRenderer: function (value, metaData, record, rowIndex) {\n        // style the value differently for even / odd values\n        var odd = (rowIndex % 2 === 0),\n            color = (odd ? 'gray' : 'red');\n        return '<span style=\"color:' + color + ';\">' + value + '</span>';\n    }\n",
                    "type": "Number",
                    "src": {
                      "name": "5,560,24",
                      "text": "5,560,33,29:5,561,8,292",
                      "type": "5,560,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "colIndex",
                    "text": "The index of the current column\n",
                    "type": "Number",
                    "src": {
                      "name": "5,569,24",
                      "text": "5,569,33,32",
                      "type": "5,569,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "store",
                    "text": "The data store\n\n    editRenderer: function (value, metaData, record, rowIndex, colIndex, store) {\n        // style the cell differently depending on how the value relates to the\n        // average of all values\n        var average = store.average('grades'),\n            status = (value < average) ? 'needsImprovement' : 'satisfactory';\n        return '<span class=\"' + status + '\">' + value + '</span>';\n    }\n",
                    "type": "Ext.data.Store",
                    "src": {
                      "name": "5,571,32",
                      "text": "5,571,38,15:5,572,8,396",
                      "type": "5,571,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "view",
                    "text": "The data view\n\n    editRenderer: function (value, metaData, record, rowIndex, colIndex, store, view) {\n        // style the value using the dataIndex of the column\n        var headerCt = this.getHeaderContainer(),\n            column = headerCt.getHeaderAtIndex(colIndex);\n\n        return '<span class=\"app-' + column.dataIndex + '\">' + value + '</span>';\n    }\n",
                    "type": "Ext.view.View",
                    "src": {
                      "name": "5,581,31",
                      "text": "5,581,36,14:5,582,8,348",
                      "type": "5,581,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The HTML string to be rendered.\n",
                    "type": "String",
                    "src": {
                      "text": "5,592,8,32",
                      "type": "5,591,17"
                    }
                  }
                ],
                "src": {
                  "controllable": "5,593,8",
                  "name": "5,495,31",
                  "text": "5,496,8,1265",
                  "type": "5,495,14"
                }
              },
              {
                "$type": "property",
                "name": "emptyCellText",
                "optional": true,
                "text": "The text to display in empty cells (cells with a value of <a href='#!/api/undefined'>undefined</a>, <a href='#!/api/null'>null</a>, or `''`).\n\nDefaults to `&#160;` aka `&nbsp;`.\n",
                "type": "String",
                "value": "undefined",
                "src": {
                  "name": "5,212,23",
                  "text": "5,213,8,125",
                  "type": "5,212,14",
                  "value": "5,212,37"
                }
              },
              {
                "$type": "property",
                "name": "enableColumnHide",
                "optional": true,
                "text": "False to disable column hiding within this grid.\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "10,140,24",
                  "text": "10,141,8,49",
                  "type": "10,140,14",
                  "value": "10,140,41"
                }
              },
              {
                "$type": "property",
                "name": "enableFocusableContainer",
                "optional": true,
                "text": "Enable or disable\nnavigation with arrow keys for this FocusableContainer. This option may\nbe useful with nested FocusableContainers such as Grid column headers,\nwhen only the root container should handle keyboard events.\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "2,35,24",
                  "text": "2,35,55,18:2,36,8,203",
                  "type": "2,35,14",
                  "value": "2,35,49"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-editor'>editor</a> instead.\n",
                "deprecatedVersion": "4.0.5",
                "name": "field",
                "text": "Alias for <a href='#!/api/Ext.grid.column.Action-cfg-editor'>editor</a>.\n",
                "type": "Object/String",
                "src": {
                  "deprecatedMessage": "5,650,8",
                  "deprecatedVersion": "5,650,8",
                  "name": "5,648,29",
                  "text": "5,649,8,27",
                  "type": "5,648,14"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-resizable'>resizable</a> instead.\n",
                "deprecatedVersion": "4.0",
                "name": "fixed",
                "text": "True to prevent the column from being resizable.\n",
                "type": "Boolean",
                "src": {
                  "deprecatedMessage": "5,243,8",
                  "deprecatedVersion": "5,243,8",
                  "name": "5,241,23",
                  "text": "5,242,8,49",
                  "type": "5,241,14"
                }
              },
              {
                "$type": "property",
                "name": "flex",
                "text": "Flex may be applied to **child items** of a box layout (<a href='#!/api/Ext.layout.container.VBox'>Ext.layout.container.VBox</a> or\n<a href='#!/api/Ext.layout.container.HBox'>Ext.layout.container.HBox</a>). Each child item with a flex property will\nfill space (horizontally in `hbox`, vertically in `vbox`) according to that item's\n**relative** flex value compared to the sum of all items with a flex value specified.\n\nAny child items that have either a <a href='#!/api/Ext.grid.column.Action-cfg-flex'>flex</a> of `0` or <a href='#!/api/undefined'>undefined</a>\nwill not be 'flexed' (the initial size will not be changed).\n",
                "type": "Number",
                "src": {
                  "name": "6,699,22",
                  "text": "6,700,8,476",
                  "type": "6,699,14"
                }
              },
              {
                "$type": "property",
                "name": "floating",
                "text": "Specify as true to float the Component outside of the document flow using CSS absolute positioning.\n\nComponents such as <a href='#!/api/Ext.window.Window'>Ext.window.Window</a>s and <a href='#!/api/Ext.menu.Menu'>Ext.menu.Menu</a>s are floating by default.\n\nFloating Components that are programmatically <a href='#!/api/Ext.Component-method-render'>Ext.Component#method-render</a> will register\nthemselves with the global <a href='#!/api/Ext.WindowManager'>Ext.WindowManager</a>\n\n### Floating Components as child items of a Container\n\nA floating Component may be used as a child item of a Container. This just allows the floating Component to seek\na ZIndexManager by examining the ownerCt chain.\n\nWhen configured as floating, Components acquire, at render time, a <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a> which\nmanages a stack of related floating Components. The ZIndexManager sorts its stack according to\nan incrementing access counter and the <a href='#!/api/Ext.util.Floating-cfg-alwaysOnTop'>Ext.util.Floating#alwaysOnTop</a> config when the Component's <a href='#!/api/Ext.grid.column.Action-method-toFront'>toFront</a> method is called.\n\nThe ZIndexManager is found by traversing up the <a href='#!/api/Ext.grid.column.Action-property-ownerCt'>ownerCt</a> chain to find an ancestor which itself is\nfloating. This is so that descendant floating Components of floating _Containers_ (Such as a ComboBox dropdown\nwithin a Window) can have its zIndex managed relative to any siblings, but always **above** that floating\nancestor Container.\n\nIf no floating ancestor is found, a floating Component registers itself with the default <a href='#!/api/Ext.WindowManager'>Ext.WindowManager</a>.\n\nFloating components _do not participate in the Container's layout_. Because of this, they are not rendered until\nyou explicitly <a href='#!/api/Ext.grid.column.Action-method-show'>method-show</a> them.\n\nAfter rendering, the ownerCt reference is deleted, and the <a href='#!/api/Ext.grid.column.Action-property-floatParent'>floatParent</a> property is set to the found\nfloating ancestor Container. If no floating ancestor Container was found the <a href='#!/api/Ext.grid.column.Action-property-floatParent'>floatParent</a> property will\nnot be set.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,710,23",
                  "text": "6,711,8,1828",
                  "type": "6,710,14"
                }
              },
              {
                "$type": "property",
                "name": "focusCls",
                "optional": true,
                "text": "CSS class that will be added to focused\nComponent, and removed when Component blurs.\n",
                "type": "String",
                "value": "'x-focus'",
                "src": {
                  "name": "11,38,23",
                  "text": "11,38,43,40:11,39,8,45",
                  "type": "11,38,14",
                  "value": "11,38,32"
                }
              },
              {
                "$type": "property",
                "name": "focusOnToFront",
                "text": "Specifies whether the floated component should be automatically <a href='#!/api/Ext.Component-method-focus'>Ext.Component#method-focus</a> when\nit is <a href='#!/api/Ext.grid.column.Action-method-toFront'>toFront</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "3,10,23",
                  "text": "3,11,8,157",
                  "type": "3,10,14"
                }
              },
              {
                "$type": "property",
                "name": "formatter",
                "since": "5.0.0",
                "text": "This config accepts a format specification as would be used in a <a href='#!/api/Ext.Template'>Ext.Template</a>\nformatted token. For example `'round(2)'` to round numbers to 2 decimal places\nor `'date(\"Y-m-d\")'` to format a Date.\n\nIn previous releases the <a href='#!/api/Ext.grid.column.Action-cfg-renderer'>renderer</a> config had limited abilities to use one\nof the <a href='#!/api/Ext.util.Format'>Ext.util.Format</a> methods but <a href='#!/api/Ext.grid.column.Action-cfg-formatter'>formatter</a> now replaces that usage and\ncan also handle formatting parameters.\n\nWhen the value begins with `\"this.\"` (for example, `\"this.foo(2)\"`), the\nimplied scope on which \"foo\" is found is the <a href='#!/api/Ext.grid.column.Action-cfg-scope'>scope</a> config for the column.\n\nIf the <a href='#!/api/Ext.grid.column.Action-cfg-scope'>scope</a> is not given, or implied using a prefix of `\"this\"`, then either the\n<a href='#!/api/Ext.grid.column.Action-method-getController'>method-getController</a> or the closest ancestor component configured\nas <a href='#!/api/Ext.grid.column.Action-cfg-defaultListenerScope'>defaultListenerScope</a> is assumed to be the object with the method.\n",
                "type": "String",
                "src": {
                  "name": "5,895,30",
                  "since": "5,910,23",
                  "text": "5,896,16,794",
                  "type": "5,895,22"
                }
              },
              {
                "$type": "property",
                "name": "formBind",
                "optional": true,
                "text": "When inside FormPanel, any component configured with `formBind: true` will\nbe enabled/disabled depending on the validity state of the form.\nSee <a href='#!/api/Ext.form.Panel'>Ext.form.Panel</a> for more information and example.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "6,745,24",
                  "text": "6,746,8,201",
                  "type": "6,745,14",
                  "value": "6,745,33"
                }
              },
              {
                "$type": "property",
                "name": "frame",
                "text": "Specify as `true` to have the Component inject framing elements within the Component at render time to provide a\ngraphical rounded frame around the Component content.\n\nThis is only necessary when running on outdated, or non standard-compliant browsers such as Microsoft's Internet\nExplorer prior to version 9 which do not support rounded corners natively.\n\nThe extra space taken up by this framing is available from the read only property <a href='#!/api/Ext.grid.column.Action-property-frameSize'>frameSize</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,752,23",
                  "text": "6,753,8,459",
                  "type": "6,752,14"
                }
              },
              {
                "$type": "property",
                "name": "getClass",
                "text": "A function which returns the CSS class to apply to the icon image.\n\nFor information on using the icons provided in the SDK see <a href='#!/api/Ext.grid.column.Action-cfg-iconCls'>iconCls</a>.\n",
                "type": "Function",
                "items": [
                  {
                    "$type": "property",
                    "name": "v",
                    "text": "The value of the column's configured field (if any).\n",
                    "type": "Object",
                    "src": {
                      "name": "0,114,31",
                      "text": "0,114,33,53",
                      "type": "0,114,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "metadata",
                    "text": "An object in which you may set the following attributes:\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "css",
                        "text": "A CSS class name to add to the cell's TD element.\n",
                        "type": "String",
                        "src": {
                          "name": "0,116,40",
                          "text": "0,116,44,50",
                          "type": "0,116,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "attr",
                        "text": "An HTML attribute definition string to apply to the data container\nelement *within* the table cell (e.g. 'style=\"color:red;\"').\n",
                        "type": "String",
                        "src": {
                          "name": "0,117,40",
                          "text": "0,117,45,67:0,118,8,61",
                          "type": "0,117,14"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,115,31",
                      "text": "0,115,40,57",
                      "type": "0,115,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "r",
                    "text": "The Record providing the data.\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,119,39",
                      "text": "0,119,41,31",
                      "type": "0,119,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "rowIndex",
                    "text": "The row index.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,120,31",
                      "text": "0,120,40,15",
                      "type": "0,120,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "colIndex",
                    "text": "The column index.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,121,31",
                      "text": "0,121,40,18",
                      "type": "0,121,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "store",
                    "text": "The Store which is providing the data Model.\n",
                    "type": "Ext.data.Store",
                    "src": {
                      "name": "0,122,39",
                      "text": "0,122,45,45",
                      "type": "0,122,14"
                    }
                  }
                ],
                "src": {
                  "name": "0,110,24",
                  "text": "0,111,8,145",
                  "type": "0,110,14"
                }
              },
              {
                "$type": "property",
                "name": "getTip",
                "text": "A function which returns the tooltip string for any row.\n\n*Note*: Outside of an Ext.application() use of this config requires\n<a href='#!/api/Ext.tip.QuickTipManager-method-init'>Ext.tip.QuickTipManager#init</a> to be called.\n\n    Ext.tip.QuickTipManager.init();\n\n    Ext.create('Ext.data.Store', {\n        storeId: 'employeeStore',\n        fields: ['firstname', 'grade'],\n        data: [{\n            firstname: \"Michael\",\n            grade: 50\n        }, {\n            firstname: \"Dwight\",\n            grade: 100\n        }]\n    });\n\n    Ext.create('Ext.grid.Panel', {\n        title: 'Action Column Demo',\n        store: Ext.data.StoreManager.lookup('employeeStore'),\n        columns: [{\n            text: 'First Name',\n            dataIndex: 'firstname'\n        }, {\n            text: 'Last Name',\n            dataIndex: 'grade'\n        }, {\n            xtype: 'actioncolumn',\n            width: 50,\n            icon: 'sample/icons/action-icons.png',\n            getTip: function(value, metadata, record, row, col, store) {\n                var avg = store.average('grade'),\n                    grade = record.get('grade');\n\n                if (grade < avg) {\n                    metadata.tdCls = \"below-average\";\n                }\n\n                return grade > 70 ? 'Pass' : 'Fail';\n            },\n            handler: function(grid, rowIndex, colIndex) {\n                var rec = grid.getStore().getAt(rowIndex);\n                alert(\"Edit \" + rec.get('firstname'));\n            }\n        }],\n        width: 250,\n        renderTo: document.body\n    });\n",
                "type": "Function",
                "items": [
                  {
                    "$type": "param",
                    "name": "value",
                    "text": "The value of the column's configured field (if any).\n",
                    "type": "Object",
                    "src": {
                      "name": "0,186,24",
                      "text": "0,186,30,53",
                      "type": "0,186,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "metadata",
                    "text": "An object in which you may set the following attributes:\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "tdCls",
                        "text": "A CSS class name to add to the cell's TD element.\n\n    metadata.tdCls = \"custom-cell-cls\";\n",
                        "type": "String",
                        "src": {
                          "name": "0,188,33",
                          "text": "0,188,39,50:0,189,8,42",
                          "type": "0,188,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "tdAttr",
                        "text": "An HTML attribute definition string to apply to\nthe data container element _within_ the table cell.\n\n    metadata.tdCls = tdAttr = \"*\";\n    // * see https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\n    // be aware that setting cell attributes may override the cell layout\n    // provided by the framework\n",
                        "type": "String",
                        "src": {
                          "name": "0,192,33",
                          "text": "0,192,40,48:0,193,8,270",
                          "type": "0,192,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "tdStyle",
                        "text": "An inline style for the table cell\n\n    metadata.tdStyle = \"background-color:red;\";\n",
                        "type": "String",
                        "src": {
                          "name": "0,200,33",
                          "text": "0,200,41,35:0,201,8,50",
                          "type": "0,200,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,187,24",
                      "text": "0,187,33,57",
                      "type": "0,187,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "record",
                    "text": "The Record providing the data.\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,204,32",
                      "text": "0,204,39,31",
                      "type": "0,204,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "rowIndex",
                    "text": "The row index.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,205,24",
                      "text": "0,205,33,15",
                      "type": "0,205,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "colIndex",
                    "text": "The column index.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,206,24",
                      "text": "0,206,33,18",
                      "type": "0,206,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "store",
                    "text": "The Store which is providing the data Model.\n",
                    "type": "Ext.data.Store",
                    "src": {
                      "name": "0,207,32",
                      "text": "0,207,38,45",
                      "type": "0,207,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "tip The tip text\n",
                    "type": "String",
                    "src": {
                      "text": "0,208,25,17",
                      "type": "0,208,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,135,24",
                  "text": "0,135,31,57:0,136,8,1455",
                  "type": "0,135,14"
                }
              },
              {
                "$type": "property",
                "name": "groupable",
                "text": "If the grid uses a <a href='#!/api/Ext.grid.feature.Grouping'>Ext.grid.feature.Grouping</a>, this option may be used to disable the header menu\nitem to group by the column selected. By default, the header menu group option is enabled. Set to false to\ndisable (but still show) the group option in the header menu for the column.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,234,23",
                  "text": "5,235,8,289",
                  "type": "5,234,14"
                }
              },
              {
                "$type": "property",
                "controllable": true,
                "name": "handler",
                "text": "A function called when the icon is clicked.\n",
                "type": "Function/String",
                "items": [
                  {
                    "$type": "property",
                    "name": "view",
                    "text": "The owning TableView.\n",
                    "type": "Ext.view.Table",
                    "src": {
                      "name": "0,72,38",
                      "text": "0,72,43,22",
                      "type": "0,72,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "rowIndex",
                    "text": "The row index clicked on.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,73,30",
                      "text": "0,73,39,26",
                      "type": "0,73,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "colIndex",
                    "text": "The column index clicked on.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,74,30",
                      "text": "0,74,39,29",
                      "type": "0,74,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "item",
                    "text": "The clicked item (or this Column if multiple <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> were not configured).\n",
                    "type": "Object",
                    "src": {
                      "name": "0,75,30",
                      "text": "0,75,35,86",
                      "type": "0,75,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "e",
                    "text": "The click event.\n",
                    "type": "Event",
                    "src": {
                      "name": "0,76,29",
                      "text": "0,76,31,17",
                      "type": "0,76,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "record",
                    "text": "The Record underlying the clicked row.\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,77,38",
                      "text": "0,77,45,39",
                      "type": "0,77,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "row",
                    "text": "The table row clicked upon.\n",
                    "type": "HTMLElement",
                    "src": {
                      "name": "0,78,35",
                      "text": "0,78,39,28",
                      "type": "0,78,14"
                    }
                  }
                ],
                "src": {
                  "controllable": "0,79,8",
                  "name": "0,70,31",
                  "text": "0,71,8,44",
                  "type": "0,70,14"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-text'>text</a> instead.\n",
                "deprecatedVersion": "4.0",
                "name": "header",
                "text": "The header text.\n",
                "type": "String",
                "src": {
                  "deprecatedMessage": "5,201,8",
                  "deprecatedVersion": "5,201,8",
                  "name": "5,199,22",
                  "text": "5,200,8,17",
                  "type": "5,199,14"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "headerWrap",
                "optional": true,
                "text": "The default setting indicates that external CSS rules dictate that the title is `white-space: nowrap` and\ntherefore, width cannot affect the measured height by causing text wrapping. This is what the Sencha-supplied\nstyles set. If you change those styles to allow text wrapping, you must set this to `true`.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "access": "5,135,8",
                  "name": "5,136,24",
                  "text": "5,137,8,308",
                  "type": "5,136,14",
                  "value": "5,136,35"
                }
              },
              {
                "$type": "property",
                "name": "height",
                "text": "The height of this component. A numeric value will be interpreted as the number of\npixels; a string value will be treated as a CSS value with units.\n",
                "type": "Number/String",
                "src": {
                  "name": "6,763,29",
                  "text": "6,764,8,149",
                  "type": "6,763,14"
                }
              },
              {
                "$type": "property",
                "name": "hidden",
                "since": "2.3.0",
                "text": "`true` to hide the component.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,769,23",
                  "since": "6,771,15",
                  "text": "6,770,8,30",
                  "type": "6,769,14"
                }
              },
              {
                "$type": "property",
                "name": "hideable",
                "text": "False to prevent the user from hiding this column.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,277,23",
                  "text": "5,278,8,51",
                  "type": "5,277,14"
                }
              },
              {
                "$type": "property",
                "name": "hideMode",
                "since": "1.1.0",
                "text": "A String which specifies how this Component's encapsulating DOM element will be hidden. Values may be:\n\n  - `'display'` : The Component will be hidden using the `display: none` style.\n  - `'visibility'` : The Component will be hidden using the `visibility: hidden` style.\n  - `'offsets'` : The Component will be hidden by absolutely positioning it out of the visible area of the document.\n    This is useful when a hidden Component must maintain measurable dimensions. Hiding using `display` results in a\n    Component having zero dimensions.\n",
                "type": "String",
                "src": {
                  "name": "6,776,22",
                  "since": "6,785,15",
                  "text": "6,777,8,544",
                  "type": "6,776,14"
                }
              },
              {
                "$type": "property",
                "name": "html",
                "optional": true,
                "since": "3.4.0",
                "text": "An HTML fragment, or a <a href='#!/api/Ext.dom.Helper'>Ext.dom.Helper</a> specification to use as the layout element content.\nThe HTML content is added after the component is rendered, so the document will not contain this HTML at the time\nthe <a href='#!/api/Ext.grid.column.Action-event-render'>event-render</a> event is fired. This content is inserted into the body _before_ any configured <a href='#!/api/Ext.grid.column.Action-cfg-contentEl'>contentEl</a>\nis appended.\n",
                "type": "String/Object",
                "value": "''",
                "src": {
                  "name": "6,790,30",
                  "since": "6,796,15",
                  "text": "6,791,8,360",
                  "type": "6,790,14",
                  "value": "6,790,35"
                }
              },
              {
                "$type": "property",
                "inheritdoc": "Ext.panel.Header#icon",
                "name": "icon",
                "optional": true,
                "type": "String",
                "value": "Ext#BLANK_IMAGE_URL",
                "src": {
                  "inheritdoc": "0,61,8",
                  "name": "0,60,23",
                  "type": "0,60,14",
                  "value": "0,60,28"
                }
              },
              {
                "$type": "property",
                "inheritdoc": "Ext.panel.Header#cfg-iconCls",
                "localDoc": "**Note:** To determine the class dynamically, configure the Column with\na <a href='#!/api/Ext.grid.column.Action-getClass'>getClass</a> function.\n",
                "name": "iconCls",
                "type": "String",
                "src": {
                  "inheritdoc": "0,65,8",
                  "localDoc": "0,66,18",
                  "name": "0,64,22",
                  "type": "0,64,14"
                }
              },
              {
                "$type": "property",
                "name": "id",
                "since": "1.1.0",
                "text": "The **unique** id of this component instance.\n\nUse of this config should be considered carefully as this value must be unique across\nall existing components. Components created with an <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> may be accessed globally\nusing <a href='#!/api/Ext-getCmp'>Ext.getCmp</a>.\n\nInstead of using assigned ids, consider a <a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> config and a <a href='#!/api/Ext.grid.column.Action-cfg-controller'>cfg-controller</a>\nto respond to events and perform processing upon this Component.\n\nAlternatively, <a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a> and <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> can be\nused to perform selector-based searching for Components analogous to DOM querying.\nThe <a href='#!/api/Ext.container.Container'>Ext.container.Container</a> class contains several helpful\n<a href='#!/api/Ext.container.Container-method-down'>Ext.container.Container#down</a> to query its descendant\nComponents by selector.\n\nNote that this <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> will also be used as the element id for the containing HTML\nelement that is rendered to the page for this component. This allows you to write\nid-based CSS rules to style the specific instance of this component uniquely, and\nalso to select sub-elements using this component's <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> as the parent.\n\nDefaults to an <a href='#!/api/Ext.grid.column.Action-method-getId'>getId</a>.\n\n**Note**: Valid identifiers start with a letter or underscore and are followed by\n(optional) additional letters, underscores, digits or hyphens.\n",
                "type": "String",
                "src": {
                  "name": "6,800,22",
                  "since": "6,826,15",
                  "text": "6,801,8,1290",
                  "type": "6,800,14"
                }
              },
              {
                "$type": "property",
                "name": "ignoreExport",
                "text": "This flag indicates that this column will be ignored when grid data is exported.\n\nWhen grid data is exported you may want to export only some columns that are important\nand not everything. Widget, check and action columns are not relevant when data is\nexported. You can set this flag on any column that you want to be ignored during export.\n\nThis is used by <a href='#!/api/Ext.grid.plugin.Clipboard'>Ext.grid.plugin.Clipboard</a> and <a href='#!/api/Ext.grid.plugin.Exporter'>Ext.grid.plugin.Exporter</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,665,23",
                  "text": "5,666,8,463",
                  "type": "5,665,14"
                }
              },
              {
                "$type": "property",
                "name": "inactiveChildTabIndex",
                "optional": true,
                "text": "DOM tabIndex attribute to set on\ninactive Focusable children of this container when using the \"Roaming tabindex\"\ntechnique. This value rarely needs to be changed from its default.\n",
                "type": "Number",
                "value": "-1",
                "src": {
                  "name": "2,51,23",
                  "text": "2,51,49,33:2,52,8,147",
                  "type": "2,51,14",
                  "value": "2,51,45"
                }
              },
              {
                "$type": "property",
                "name": "isDisabled",
                "text": "A function which determines whether the action item for any row is disabled and returns `true` or `false`.\n",
                "type": "Function",
                "items": [
                  {
                    "$type": "property",
                    "name": "view",
                    "text": "The owning TableView.\n",
                    "type": "Ext.view.Table",
                    "src": {
                      "name": "0,127,41",
                      "text": "0,127,46,22",
                      "type": "0,127,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "rowIndex",
                    "text": "The row index.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,128,33",
                      "text": "0,128,42,15",
                      "type": "0,128,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "colIndex",
                    "text": "The column index.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,129,33",
                      "text": "0,129,42,18",
                      "type": "0,129,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "item",
                    "text": "The clicked item (or this Column if multiple <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> were not configured).\n",
                    "type": "Object",
                    "src": {
                      "name": "0,130,33",
                      "text": "0,130,38,86",
                      "type": "0,130,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "record",
                    "text": "The Record underlying the row.\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,131,41",
                      "text": "0,131,48,31",
                      "type": "0,131,14"
                    }
                  }
                ],
                "src": {
                  "name": "0,126,24",
                  "text": "0,126,35,107",
                  "type": "0,126,14"
                }
              },
              {
                "$type": "property",
                "name": "itemId",
                "since": "3.4.0",
                "text": "The **unique** id of this component instance within its container. See also the\n<a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> config.\n\nAn <a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a> can be used as an alternative way to get a reference to a component when no object reference is\navailable. Instead of using an <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> with <a href='#!/api/Ext-getCmp'>getCmp</a>, use\n<a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a> with <a href='#!/api/Ext.container.Container-method-getComponent'>Ext.container.Container#getComponent</a> which will\nretrieve <a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a>s or <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a>s. Since <a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a>s are an index to the container's\ninternal collection, the <a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a> is scoped locally to the container -- avoiding\npotential conflicts with <a href='#!/api/Ext.ComponentManager'>Ext.ComponentManager</a> which requires a **unique**\n<a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> values.\n\n    var c = new Ext.panel.Panel({ //\n        height: 300,\n        renderTo: document.body,\n        layout: 'auto',\n        items: [{\n            itemId: 'p1',\n            title: 'Panel 1',\n            height: 150\n        },{\n            itemId: 'p2',\n            title: 'Panel 2',\n            height: 150\n        }]\n    });\n\n    p1 = c.getComponent('p1'); // not the same as Ext.getCmp()\n    console.log(p1);\n    p2 = p1.ownerCt.getComponent('p2'); // reference via a sibling\n    console.log(p2);\n\nAlso see <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a>, <a href='#!/api/Ext.container.Container-method-query'>Ext.container.Container#query</a>, <a href='#!/api/Ext.container.Container-method-down'>Ext.container.Container#down</a> and\n<a href='#!/api/Ext.container.Container-method-child'>Ext.container.Container#child</a>.\n\n**Note**: Valid identifiers start with a letter or underscore and are followed by\n(optional) additional letters, underscores, digits or hyphens.\n\n**Note**: to access the container of an item see <a href='#!/api/Ext.grid.column.Action-property-ownerCt'>ownerCt</a>.\n",
                "type": "String",
                "src": {
                  "name": "6,830,22",
                  "since": "6,870,15",
                  "text": "6,831,8,1513",
                  "type": "6,830,14"
                }
              },
              {
                "$type": "property",
                "name": "items",
                "text": "An Array which may contain multiple icon definitions, each element of which may contain:\n",
                "type": "Object[]",
                "items": [
                  {
                    "$type": "property",
                    "name": "icon",
                    "text": "The url of an image to display as the clickable element in the column.\n",
                    "type": "String",
                    "src": {
                      "name": "0,215,28",
                      "text": "0,215,33,71",
                      "type": "0,215,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "iconCls",
                    "text": "A CSS class to apply to the icon element. To\ndetermine the class dynamically, configure the item with a <a href='#!/api/Ext.grid.column.Action-cfg-getClass'>getClass</a> function.\n\nFor information on using the icons provided in the SDK see <a href='#!/api/Ext.grid.column.Action-cfg-iconCls'>iconCls</a>.\n",
                    "type": "String",
                    "src": {
                      "name": "0,217,28",
                      "text": "0,217,36,45:0,218,8,159",
                      "type": "0,217,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "getClass",
                    "text": "A function which returns the CSS class to apply to the icon image.\n",
                    "type": "Function",
                    "items": [
                      {
                        "$type": "property",
                        "name": "v",
                        "text": "The value of the column's configured field (if any).\n",
                        "type": "Object",
                        "src": {
                          "name": "0,223,37",
                          "text": "0,223,39,53",
                          "type": "0,223,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "metadata",
                        "text": "An object in which you may set the following attributes:\n",
                        "type": "Object",
                        "items": [
                          {
                            "$type": "property",
                            "name": "css",
                            "text": "A CSS class name to add to the cell's TD element.\n",
                            "type": "String",
                            "src": {
                              "name": "0,225,46",
                              "text": "0,225,50,50",
                              "type": "0,225,14"
                            }
                          },
                          {
                            "$type": "property",
                            "name": "attr",
                            "text": "An HTML attribute definition string to apply to the data\ncontainer element _within_ the table cell (e.g. 'style=\"color:red;\"').\n",
                            "type": "String",
                            "src": {
                              "name": "0,226,46",
                              "text": "0,226,51,57:0,227,8,71",
                              "type": "0,226,14"
                            }
                          }
                        ],
                        "src": {
                          "name": "0,224,37",
                          "text": "0,224,46,57",
                          "type": "0,224,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "r",
                        "text": "The Record providing the data.\n",
                        "type": "Ext.data.Model",
                        "src": {
                          "name": "0,228,45",
                          "text": "0,228,47,31",
                          "type": "0,228,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "rowIndex",
                        "text": "The row index.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,229,37",
                          "text": "0,229,46,15",
                          "type": "0,229,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "colIndex",
                        "text": "The column index.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,230,37",
                          "text": "0,230,46,18",
                          "type": "0,230,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "store",
                        "text": "The Store which is providing the data Model.\n",
                        "type": "Ext.data.Store",
                        "src": {
                          "name": "0,231,45",
                          "text": "0,231,51,45",
                          "type": "0,231,14"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,222,30",
                      "text": "0,222,39,67",
                      "type": "0,222,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "handler",
                    "text": "A function called when the icon is clicked.\n",
                    "type": "Function",
                    "items": [
                      {
                        "$type": "property",
                        "name": "view",
                        "text": "The owning TableView.\n",
                        "type": "Ext.view.Table",
                        "src": {
                          "name": "0,234,44",
                          "text": "0,234,49,22",
                          "type": "0,234,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "rowIndex",
                        "text": "The row index clicked on.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,235,36",
                          "text": "0,235,45,26",
                          "type": "0,235,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "colIndex",
                        "text": "The column index clicked on.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,236,36",
                          "text": "0,236,45,29",
                          "type": "0,236,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "item",
                        "text": "The clicked item (or this Column if multiple <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> were not configured).\n",
                        "type": "Object",
                        "src": {
                          "name": "0,237,36",
                          "text": "0,237,41,86",
                          "type": "0,237,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "e",
                        "text": "The click event.\n",
                        "type": "Event",
                        "src": {
                          "name": "0,238,35",
                          "text": "0,238,37,17",
                          "type": "0,238,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "record",
                        "text": "The Record underlying the clicked row.\n",
                        "type": "Ext.data.Model",
                        "src": {
                          "name": "0,239,44",
                          "text": "0,239,51,39",
                          "type": "0,239,14"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,233,30",
                      "text": "0,233,38,44",
                      "type": "0,233,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "row",
                    "text": "The table row clicked upon.\n",
                    "type": "HTMLElement",
                    "src": {
                      "name": "0,240,33",
                      "text": "0,240,37,28",
                      "type": "0,240,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "isDisabled",
                    "text": "A function which determines whether the action item for any row is disabled and returns `true` or `false`.\n",
                    "type": "Function",
                    "items": [
                      {
                        "$type": "property",
                        "name": "view",
                        "text": "The owning TableView.\n",
                        "type": "Ext.view.Table",
                        "src": {
                          "name": "0,243,47",
                          "text": "0,243,52,22",
                          "type": "0,243,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "rowIndex",
                        "text": "The row index.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,244,39",
                          "text": "0,244,48,15",
                          "type": "0,244,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "colIndex",
                        "text": "The column index.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,245,39",
                          "text": "0,245,48,18",
                          "type": "0,245,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "item",
                        "text": "The clicked item (or this Column if multiple <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> were not configured).\n",
                        "type": "Object",
                        "src": {
                          "name": "0,246,39",
                          "text": "0,246,44,86",
                          "type": "0,246,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "record",
                        "text": "The Record underlying the row.\n",
                        "type": "Ext.data.Model",
                        "src": {
                          "name": "0,247,47",
                          "text": "0,247,54,31",
                          "type": "0,247,14"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,242,30",
                      "text": "0,242,41,107",
                      "type": "0,242,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "getTip",
                    "text": "A function which returns the tooltip string for any row.\n",
                    "type": "Function",
                    "items": [
                      {
                        "$type": "property",
                        "name": "v",
                        "text": "The value of the column's configured field (if any).\n",
                        "type": "Object",
                        "src": {
                          "name": "0,250,35",
                          "text": "0,250,37,53",
                          "type": "0,250,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "metadata",
                        "text": "An object in which you may set the following attributes:\n",
                        "type": "Object",
                        "items": [
                          {
                            "$type": "property",
                            "name": "css",
                            "text": "A CSS class name to add to the cell's TD element.\n",
                            "type": "String",
                            "src": {
                              "name": "0,252,44",
                              "text": "0,252,48,50",
                              "type": "0,252,14"
                            }
                          },
                          {
                            "$type": "property",
                            "name": "attr",
                            "text": "An HTML attribute definition string to apply to the data\ncontainer element _within_ the table cell (e.g. 'style=\"color:red;\"').\n",
                            "type": "String",
                            "src": {
                              "name": "0,253,44",
                              "text": "0,253,49,57:0,254,8,71",
                              "type": "0,253,14"
                            }
                          }
                        ],
                        "src": {
                          "name": "0,251,35",
                          "text": "0,251,44,57",
                          "type": "0,251,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "r",
                        "text": "The Record providing the data.\n",
                        "type": "Ext.data.Model",
                        "src": {
                          "name": "0,255,43",
                          "text": "0,255,45,31",
                          "type": "0,255,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "rowIndex",
                        "text": "The row index.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,256,35",
                          "text": "0,256,44,15",
                          "type": "0,256,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "colIndex",
                        "text": "The column index.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,257,35",
                          "text": "0,257,44,18",
                          "type": "0,257,14"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "store",
                        "text": "The Store which is providing the data Model.\n",
                        "type": "Ext.data.Store",
                        "src": {
                          "name": "0,258,43",
                          "text": "0,258,49,45",
                          "type": "0,258,14"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,249,30",
                      "text": "0,249,37,57",
                      "type": "0,249,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "scope",
                    "text": "The scope (`this` reference) in which the <a href='#!/api/Ext.grid.column.Action-cfg-handler'>handler</a>, <a href='#!/api/Ext.grid.column.Action-cfg-getClass'>getClass</a>, `isDisabled` and <a href='#!/api/Ext.grid.column.Action-cfg-getTip'>getTip</a> functions\nare executed. Fallback defaults are this Column's configured scope, then this Column.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,260,28",
                      "text": "0,260,34,101:0,261,8,87",
                      "type": "0,260,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "tooltip",
                    "text": "A tooltip message to be displayed on hover.\n<a href='#!/api/Ext.tip.QuickTipManager-method-init'>Ext.tip.QuickTipManager#init</a> must have been initialized.\n\nThe tooltip may also be determined on a row by row basis by configuring a <a href='#!/api/Ext.grid.column.Action-cfg-getTip'>getTip</a> method.\n",
                    "type": "String",
                    "src": {
                      "name": "0,263,28",
                      "text": "0,263,36,44:0,264,8,182",
                      "type": "0,263,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "disabled",
                    "text": "If true, the action will not respond to click events, and will be displayed semi-opaque.\n\nThis item may also be disabled on a row by row basis by configuring an `isDisabled` method.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "0,268,29",
                      "text": "0,268,38,89:0,269,8,93",
                      "type": "0,268,14"
                    }
                  }
                ],
                "src": {
                  "name": "0,212,24",
                  "text": "0,213,8,90",
                  "type": "0,212,14"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "keyHandlers",
                "text": "Handlers for keydown events.\n\nThis object's keys correspond to keyboard key names in\n<a href='#!/api/Ext.event.Event'>Ext.event.Event</a>, with values defined as method\nnames that should be executed when a keydown event occurs\nfor the specified key name.\nFor example:\n\n     Ext.define('MyButton', {\n         extend: 'Ext.button.Button',\n\n         config: {\n             keyHandlers: {\n                 ENTER: 'onEnterKey'\n             }\n         },\n\n         onEnterKey: function(event) {\n             ...\n         }\n     });\n",
                "type": "Object",
                "src": {
                  "access": "12,36,12",
                  "name": "12,14,26",
                  "text": "12,14,38,29:12,15,12,469",
                  "type": "12,14,18"
                }
              },
              {
                "$type": "property",
                "name": "layout",
                "since": "2.3.0",
                "text": "**Important**: In order for child items to be correctly sized and\npositioned, typically a layout manager **must** be specified through\nthe <a href='#!/api/Ext.grid.column.Action-cfg-layout'>layout</a> configuration option.\n\nThe sizing and positioning of child <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> is the responsibility of\nthe Container's layout manager which creates and manages the type of layout\nyou have in mind.  For example:\n\nIf the layout configuration is not explicitly specified for\na general purpose container (e.g. Container or Panel) the\n<a href='#!/api/Ext.layout.container.Auto'>Ext.layout.container.Auto</a> will be used\nwhich does nothing but render child components sequentially into the\nContainer (no sizing or positioning will be performed in this situation).\n\n**layout** may be specified as either as an Object or as a String:\n\n## Specify as an Object\n\nExample usage:\n\n    layout: {\n        type: 'vbox',\n        align: 'left'\n    }\n\n  - **type**\n\n    The layout type to be used for this container.  If not specified,\n    a default <a href='#!/api/Ext.layout.container.Auto'>Ext.layout.container.Auto</a> will be created and used.\n\n    Valid layout <code>type</code> values are listed in <a href='#!/api/Ext.enums.Layout'>Ext.enums.Layout</a>.\n\n  - Layout specific configuration properties\n\n    Additional layout specific configuration properties may also be\n    specified. For complete details regarding the valid config options for\n    each layout type, see the layout class corresponding to the `type`\n    specified.\n\n## Specify as a String\n\nExample usage:\n\n    layout: 'vbox'\n\n  - **layout**\n\n    The layout `type` to be used for this container (see <a href='#!/api/Ext.enums.Layout'>Ext.enums.Layout</a>\n    for list of valid values).\n\n    Additional layout specific configuration properties. For complete\n    details regarding the valid config options for each layout type, see the\n    layout class corresponding to the <a href='#!/api/Ext.grid.column.Action-cfg-layout'>layout</a> specified.\n\n## Configuring the default layout type\n\nIf a certain Container class has a default layout (For example a <a href='#!/api/Ext.toolbar.Toolbar'>Ext.toolbar.Toolbar</a>\nwith a default `Box` layout), then to simply configure the default layout,\nuse an object, but without the `type` property:\n\n\n    xtype: 'toolbar',\n    layout: {\n        pack: 'center'\n    }\n",
                "type": "Ext.enums.Layout/Object",
                "src": {
                  "name": "4,570,39",
                  "since": "4,637,15",
                  "text": "4,571,8,2112",
                  "type": "4,570,14"
                }
              },
              {
                "$type": "property",
                "name": "liquidLayout",
                "text": "Components that achieve their internal layout results using solely CSS with no JS\nintervention must set this to true.  This allows the component to opt out of the\nlayout run when used inside certain container layouts such as <a href='#!/api/Ext.layout.container.Form'>Ext.layout.container.Form</a> and <a href='#!/api/Ext.layout.container.Auto'>Ext.layout.container.Auto</a>\nresulting in a performance gain. The following components currently use liquid\nlayout (`liquidLayout: true`):\n\n- All Form Fields (subclasses of <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a>)\n- <a href='#!/api/Ext.button.Button'>Ext.button.Button</a>\n\nIt is important to keep in mind that components using liquidLayout do not fire\nthe following events:\n\n- <a href='#!/api/Ext.grid.column.Action-event-resize'>event-resize</a>\n- <a href='#!/api/Ext.grid.column.Action-event-boxready'>event-boxready</a>\n\nIn addition liquidLayout components do not call the following template methods:\n\n- <a href='#!/api/Ext.grid.column.Action-method-afterComponentLayout'>afterComponentLayout</a>\n- <a href='#!/api/Ext.grid.column.Action-method-onBoxReady'>onBoxReady</a>\n- <a href='#!/api/Ext.grid.column.Action-method-onResize'>onResize</a>\n\nAny component that needs to fire these events or to have these methods called during\nits life cycle needs to set <a href='#!/api/Ext.grid.column.Action-cfg-liquidLayout'>liquidLayout</a> to `false`.  The following example\ndemonstrates how to enable the resize event for a\n<a href='#!/api/Ext.form.field.TextArea'>Ext.form.field.TextArea</a>:\n\n    @example\n    var win = Ext.create({\n            xtype: 'window',\n            title: 'Resize This Window!',\n            height: 100,\n            width: 200,\n            layout: 'anchor',\n            items: [{\n                xtype: 'textarea',\n                anchor: '0 0',\n                liquidLayout: false // allows the textarea to fire \"resize\"\n            }]\n        }),\n        textfield = win.items.getAt(0);\n\n    win.show();\n\n    textfield.on('resize', function(textfield, width, height) {\n        Ext.Msg.alert('Text Field Resized', 'width: ' + width + ', height: ' + height);\n    });\n\nUse caution when setting <a href='#!/api/Ext.grid.column.Action-cfg-liquidLayout'>liquidLayout</a> to `false` as it carries a performance penalty\nsince it means the layout system must perform expensive DOM reads to determine the\nComponent's size.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,1594,0",
                  "text": "6,1542,8,1868",
                  "type": "6,1541,14"
                }
              },
              {
                "$type": "property",
                "name": "listeners",
                "text": "\nA config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> example for attaching\nmultiple handlers at once.\n\n**DOM events from Ext JS <a href='#!/api/Ext.Component'>Ext.Component</a>**\n\nWhile _some_ Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href='#!/api/Ext.view.View'>Ext.view.View</a>s **<a href='#!/api/Ext.view.View-event-itemclick'>Ext.view.View#itemclick</a>** event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the `element` option to identify the Component property to add a\nDOM listener to:\n\n    new Ext.panel.Panel({\n        width: 400,\n        height: 200,\n        dockedItems: [{\n            xtype: 'toolbar'\n        }],\n        listeners: {\n            click: {\n                element: 'el', //bind to the underlying el property on the panel\n                fn: function(){ console.log('click el'); }\n            },\n            dblclick: {\n                element: 'body', //bind to the underlying body property on the panel\n                fn: function(){ console.log('dblclick body'); }\n            }\n        }\n    });\n",
                "type": "Object",
                "src": {
                  "name": "13,243,25",
                  "text": "13,244,11,1325",
                  "type": "13,243,17"
                }
              },
              {
                "$type": "property",
                "name": "liveDrag",
                "optional": true,
                "text": "True to drag the component itself.  Else a lightweight version of the component\nwill be shown (_using the component's ghost() method_).\n\n**Note:** This config is only relevant when used with dragging implemented via\n<a href='#!/api/Ext.util.ComponentDragger'>Ext.util.ComponentDragger</a>.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "14,37,24",
                  "text": "14,39,8,251",
                  "type": "14,37,14",
                  "value": "14,37,33"
                }
              },
              {
                "$type": "property",
                "name": "loader",
                "text": "A configuration object or an instance of a <a href='#!/api/Ext.ComponentLoader'>Ext.ComponentLoader</a> to load remote content\nfor this Component.\n\n    Ext.create('Ext.Component', {\n        loader: {\n            url: 'content.html',\n            autoLoad: true\n        },\n        renderTo: Ext.getBody()\n    });\n",
                "type": "Ext.ComponentLoader/Object",
                "src": {
                  "name": "6,874,42",
                  "text": "6,875,8,278",
                  "type": "6,874,14"
                }
              },
              {
                "$type": "property",
                "name": "lockable",
                "text": "If the grid is configured with <a href='#!/api/Ext.panel.Table-cfg-enableLocking'>Ext.panel.Table#enableLocking</a>, or has columns which are\nconfigured with a <a href='#!/api/Ext.grid.column.Action-cfg-locked'>locked</a> value, this option may be used to disable user-driven locking or unlocking\nof this column. This column will remain in the side into which its own <a href='#!/api/Ext.grid.column.Action-cfg-locked'>locked</a> configuration placed it.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,227,23",
                  "text": "5,228,8,330",
                  "type": "5,227,14"
                }
              },
              {
                "$type": "property",
                "name": "locked",
                "optional": true,
                "text": "True to lock this column in place.  Implicitly enables locking on the grid.\nSee also <a href='#!/api/Ext.grid.Panel-cfg-enableLocking'>Ext.grid.Panel#enableLocking</a>.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "5,247,24",
                  "text": "5,248,8,123",
                  "type": "5,247,14",
                  "value": "5,247,31"
                }
              },
              {
                "$type": "property",
                "name": "margin",
                "text": "Specifies the margin for this component. The margin can be a single numeric value to apply to all sides or it can\nbe a CSS style specification for each style, for example: '10 5 3 10' (top, right, bottom, left).\n",
                "type": "Number/String",
                "src": {
                  "name": "6,888,29",
                  "text": "6,889,8,212",
                  "type": "6,888,14"
                }
              },
              {
                "$type": "property",
                "name": "maskElement",
                "optional": true,
                "text": "Related to the <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>cfg-childEls</a> configuration which specifies named properties which correspond to component sub-elements.\n\nThe name of the element property in this component to mask when masked by a LoadMask.\n\nDefaults to <a href='#!/api/null'>null</a> to indicate that Components cannot by default contain a LoadMask, and that any LoadMask should be rendered into the document body.\n\nFor example, Panels use `\"el\"` to indicate that the whole panel should be masked. This could be configured to be\n`\"body\"` so that only the body is masked and toolbars and the header are still mouse-accessible.\n",
                "type": "String",
                "value": "null",
                "src": {
                  "name": "6,894,23",
                  "text": "6,895,8,577",
                  "type": "6,894,14",
                  "value": "6,894,35"
                }
              },
              {
                "$type": "property",
                "name": "maxHeight",
                "text": "The maximum value in pixels which this Component will set its height to.\n\n**Warning:** This will override any size management applied by layout managers.\n",
                "type": "Number",
                "src": {
                  "name": "6,359,26",
                  "text": "6,360,12,154",
                  "type": "6,359,18"
                }
              },
              {
                "$type": "property",
                "name": "maxWidth",
                "text": "The maximum value in pixels which this Component will set its width to.\n\n**Warning:** This will override any size management applied by layout managers.\n",
                "type": "Number",
                "src": {
                  "name": "6,367,26",
                  "text": "6,368,12,153",
                  "type": "6,367,18"
                }
              },
              {
                "$type": "property",
                "name": "menuDisabled",
                "text": "True to disable the column header menu containing sort/hide options.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,283,23",
                  "text": "5,284,8,69",
                  "type": "5,283,14"
                }
              },
              {
                "$type": "property",
                "name": "menuText",
                "optional": true,
                "text": "Text to display in this column's menu item if no <a href='#!/api/Ext.grid.column.Action-cfg-text'>text</a> was specified as a header.\n",
                "type": "String",
                "value": "<i>Actions</i>",
                "src": {
                  "name": "0,288,23",
                  "text": "0,289,8,90",
                  "type": "0,288,14",
                  "value": "0,288,32"
                }
              },
              {
                "$type": "property",
                "name": "minHeight",
                "text": "The minimum value in pixels which this Component will set its height to.\n\n**Warning:** This will override any size management applied by layout managers.\n",
                "type": "Number",
                "src": {
                  "name": "6,375,26",
                  "text": "6,376,12,154",
                  "type": "6,375,18"
                }
              },
              {
                "$type": "property",
                "name": "minWidth",
                "text": "The minimum value in pixels which this Component will set its width to.\n\n**Warning:** This will override any size management applied by layout managers.\n",
                "type": "Number",
                "src": {
                  "name": "6,383,26",
                  "text": "6,384,12,153",
                  "type": "6,383,18"
                }
              },
              {
                "$type": "property",
                "name": "modal",
                "optional": true,
                "text": "True to make the floated component modal and mask everything behind it when displayed, false to display it without\nrestricting access to other UI elements.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "3,17,24",
                  "text": "3,18,8,156",
                  "type": "3,17,14",
                  "value": "3,17,30"
                }
              },
              {
                "$type": "property",
                "name": "modelValidation",
                "text": "This config enables binding to your <a href='#!/api/Ext.data.Model-cfg-validators'>Ext.data.Model#validators</a>. This\nis only processed by form fields (e.g., <a href='#!/api/Ext.form.field.Text'>Ext.form.field.Text</a>) at present, but\nthis setting is inherited and so can be set on a parent container.\n\nWhen set to `true` by a component or not set by a component but inherited from\nan ancestor container, <a href='#!/api/Ext.data.Validation'>Ext.data.Validation</a> records are used to automatically\nbind validation results for any form field to which a `value` is bound.\n\nWhile this config can be set arbitrarily high in the component hierarchy, doing\nso can create a lot overhead if most of your form fields do not actually rely on\n`validators` in your data model.\n\nUsing this setting for a form that is bound to an <a href='#!/api/Ext.data.Model'>Ext.data.Model</a> might look\nlike this:\n\n     {\n         xtype: 'panel',\n         modelValidation: true,\n         items: [{\n             xtype: 'textfield',\n             bind: '{theUser.firstName}'\n         },{\n             xtype: 'textfield',\n             bind: '{theUser.lastName}'\n         },{\n             xtype: 'textfield',\n             bind: '{theUser.phoneNumber}'\n         },{\n             xtype: 'textfield',\n             bind: '{theUser.email}'\n         }]\n     }\n\nThe above is equivalent to the following manual binding of validation:\n\n     {\n         xtype: 'panel',\n         items: [{\n             xtype: 'textfield',\n             bind: {\n                 value:      '{theUser.firstName}'\n                 validation: '{theUser.validation.firstName}'\n             }\n         },{\n             xtype: 'textfield',\n             bind: {\n                 value:      '{theUser.lastName}'\n                 validation: '{theUser.validation.lastName}'\n             }\n         },{\n             xtype: 'textfield',\n             bind: {\n                 value:      '{theUser.phoneNumber}'\n                 validation: '{theUser.validation.phoneNumber}'\n             }\n         },{\n             xtype: 'textfield',\n             bind: {\n                 value:      '{theUser.email}'\n                 validation: '{theUser.validation.email}'\n             }\n         }]\n     }\n\nNotice that \"validation\" is a pseudo-association defined for all entities. See\n<a href='#!/api/Ext.data.Model-method-getValidation'>Ext.data.Model#getValidation</a> for further details.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,289,27",
                  "text": "6,290,12,2219",
                  "type": "6,289,18"
                }
              },
              {
                "$type": "property",
                "name": "overCls",
                "optional": true,
                "since": "2.3.0",
                "text": "An optional extra CSS class that will be added to this component's Element when the mouse moves over the Element,\nand removed when the mouse moves out. This can be useful for adding customized 'active' or 'hover' styles to the\ncomponent or any of its children using standard CSS rules.\n",
                "type": "String",
                "value": "''",
                "src": {
                  "name": "6,907,23",
                  "since": "6,912,15",
                  "text": "6,908,8,287",
                  "type": "6,907,14",
                  "value": "6,907,31"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-scrollable'>scrollable</a> instead\n",
                "deprecatedVersion": "5.1.0",
                "name": "overflowX",
                "text": "Possible values are:\n\n - `'auto'` to enable automatic horizontal scrollbar (Style overflow-x: 'auto').\n - `'scroll'` to always enable horizontal scrollbar (Style overflow-x: 'scroll').\n\nThe default is overflow-x: 'hidden'. This should not be combined with <a href='#!/api/Ext.grid.column.Action-cfg-autoScroll'>autoScroll</a>.\n",
                "type": "String",
                "src": {
                  "deprecatedMessage": "6,923,8",
                  "deprecatedVersion": "6,923,8",
                  "name": "6,916,22",
                  "text": "6,917,8,277",
                  "type": "6,916,14"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-scrollable'>scrollable</a> instead\n",
                "deprecatedVersion": "5.1.0",
                "name": "overflowY",
                "text": "Possible values are:\n\n - `'auto'` to enable automatic vertical scrollbar (Style overflow-y: 'auto').\n - `'scroll'` to always enable vertical scrollbar (Style overflow-y: 'scroll').\n\nThe default is overflow-y: 'hidden'. This should not be combined with <a href='#!/api/Ext.grid.column.Action-cfg-autoScroll'>autoScroll</a>.\n",
                "type": "String",
                "src": {
                  "deprecatedMessage": "6,934,8",
                  "deprecatedVersion": "6,934,8",
                  "name": "6,927,22",
                  "text": "6,928,8,273",
                  "type": "6,927,14"
                }
              },
              {
                "$type": "property",
                "name": "padding",
                "text": "Specifies the padding for this component. The padding can be a single numeric value to apply to all sides or it\ncan be a CSS style specification for each style, for example: '10 5 3 10' (top, right, bottom, left).\n",
                "type": "Number/String",
                "src": {
                  "name": "6,938,29",
                  "text": "6,939,8,214",
                  "type": "6,938,14"
                }
              },
              {
                "$type": "property",
                "name": "plugins",
                "since": "2.3.0",
                "text": "An array of plugins to be added to this component. Can also be just a single plugin instead of array.\n\nPlugins provide custom functionality for a component. The only requirement for\na valid plugin is that it contain an `init` method that accepts a reference of type Ext.Component. When a component\nis created, if any plugins are available, the component will call the init method on each plugin, passing a\nreference to itself. Each plugin can then call methods or respond to events on the component as needed to provide\nits functionality.\n\nPlugins can be added to component by either directly referencing the plugin instance:\n\n    plugins: [Ext.create('Ext.grid.plugin.CellEditing', {clicksToEdit: 1})],\n\nBy using config object with ptype:\n\n    plugins: {ptype: 'cellediting', clicksToEdit: 1},\n\nOr with just a ptype:\n\n    plugins: ['cellediting', 'gridviewdragdrop'],\n\nSee <a href='#!/api/Ext.enums.Plugin'>Ext.enums.Plugin</a> for list of all ptypes.\n",
                "type": "Ext.plugin.Abstract[]/Ext.plugin.Abstract/Object[]/Object/Ext.enums.Plugin[]/Ext.enums.Plugin",
                "src": {
                  "name": "6,944,109",
                  "since": "6,967,15",
                  "text": "6,945,8,924",
                  "type": "6,944,14"
                }
              },
              {
                "$type": "property",
                "name": "producesHTML",
                "text": "This flag indicates that the renderer produces HTML.\n\nIf this column is going to be updated rapidly, and the\n<a href='#!/api/Ext.grid.column.Column-cfg-renderer'>Ext.grid.column.Column#renderer</a> or <a href='#!/api/Ext.grid.column.Action-cfg-updater'>cfg-updater</a> only produces\ntext, then to avoid the expense of HTML parsing and element production during the\nupdate, this property may be configured as `false`.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,654,23",
                  "text": "5,655,8,321",
                  "type": "5,654,14"
                }
              },
              {
                "$type": "property",
                "name": "publishes",
                "since": "5.0.0",
                "text": "One or more names of config properties that this component should publish\nto its ViewModel. Generally speaking, only properties defined in a class config\nblock (including ancestor config blocks and mixins) are eligible for publishing\nto the viewModel. Some components override this and publish their most useful\nconfigs by default.\n\n**Note:** We'll discuss publishing properties **not** found in the config block below.\n\nValues determined to be invalid by component (often form fields and model validations)\nwill not be published to the ViewModel.\n\nThis config uses the <a href='#!/api/Ext.grid.column.Action-cfg-reference'>cfg-reference</a> to determine the name of the data\nobject to place in the `ViewModel`. If <a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> is not set then this config\nis ignored.\n\nBy using this config and <a href='#!/api/Ext.grid.column.Action-cfg-reference'>cfg-reference</a> you can bind configs between\ncomponents. For example:\n\n     ...\n         items: [{\n             xtype: 'textfield',\n             reference: 'somefield',  // component's name in the ViewModel\n             publishes: 'value' // value is not published by default\n         },{\n             ...\n         },{\n             xtype: 'displayfield',\n             bind: 'You have entered \"{somefield.value}\"'\n         }]\n     ...\n\nClasses must provide this config as an Object:\n\n     Ext.define('App.foo.Bar', {\n         publishes: {\n             foo: true,\n             bar: true\n         }\n     });\n\nThis is required for the config system to properly merge values from derived\nclasses.\n\nFor instances this value can be specified as a value as show above or an array\nor object as follows:\n\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: [\n             'value',\n             'rawValue',\n             'dirty'\n         ]\n     }\n\n     // This achieves the same result as the above array form.\n     {\n         xtype: 'textfield',\n         reference: 'somefield',\n         publishes: {\n             value: true,\n             rawValue: true,\n             dirty: true\n         }\n     }\n\nIn some cases, users may want to publish a property to the viewModel that is not found in a class\nconfig block. In these situations, you may utilize <a href='#!/api/Ext.grid.column.Action-method-publishState'>publishState</a> if the property has a\nsetter method.  Let's use <a href='#!/api/Ext.form.Labelable-method-setFieldLabel'>Ext.form.Labelable#setFieldLabel</a> as an example:\n\n      setFieldLabel: function(fieldLabel) {\n          this.callParent(arguments);\n          this.publishState('fieldLabel', fieldLabel);\n      }\n\nWith the above chunk of code, fieldLabel may now be published to the viewModel.\n",
                "type": "String/String[]/Object",
                "src": {
                  "name": "9,100,42",
                  "since": "9,179,19",
                  "text": "9,101,12,2498",
                  "type": "9,100,18"
                }
              },
              {
                "$type": "property",
                "name": "reference",
                "text": "Specifies a name for this component inside its component hierarchy. This name\nmust be unique within its <a href='#!/api/Ext.container.Container-cfg-referenceHolder'>Ext.container.Container#referenceHolder</a>\nor its <a href='#!/api/Ext.app.ViewController'>Ext.app.ViewController</a>. See the documentation in\n<a href='#!/api/Ext.container.Container'>Ext.container.Container</a> for more information about references.\n\n**Note**: Valid identifiers start with a letter or underscore and are followed\nby zero or more additional letters, underscores or digits. References are case\nsensitive.\n",
                "type": "String",
                "src": {
                  "name": "9,190,26",
                  "text": "9,191,12,477",
                  "type": "9,190,18"
                }
              },
              {
                "$type": "property",
                "name": "referenceHolder",
                "text": "If `true`, this container will be marked as being a point in the hierarchy where\nreferences to items with a specified <a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> config will be held. The container\nwill automatically become a referenceHolder if a <a href='#!/api/Ext.grid.column.Action-cfg-controller'>controller</a> is specified.\n\nSee the introductory docs for <a href='#!/api/Ext.container.Container'>Ext.container.Container</a> for more information\nabout references & reference holders.\n",
                "type": "Boolean",
                "src": {
                  "name": "15,20,27",
                  "text": "15,21,12,370",
                  "type": "15,20,18"
                }
              },
              {
                "$type": "property",
                "name": "region",
                "optional": true,
                "text": "Defines the region inside <a href='#!/api/Ext.layout.container.Border'>Ext.layout.container.Border</a>.\n\nPossible values:\n\n- north - Positions component at top.\n- south - Positions component at bottom.\n- east - Positions component at right.\n- west - Positions component at left.\n- center - Positions component at the remaining space.\n  There **must** be a component with `region: \"center\"` in every border layout.\n",
                "type": "\"north\"/\"south\"/\"east\"/\"west\"/\"center\"",
                "value": "undefined",
                "src": {
                  "name": "6,971,55",
                  "text": "6,972,8,387",
                  "type": "6,971,14",
                  "value": "6,971,62"
                }
              },
              {
                "$type": "property",
                "name": "renderData",
                "text": "\nThe data used by <a href='#!/api/Ext.grid.column.Action-cfg-renderTpl'>renderTpl</a> in addition to the following property values of the component:\n\n- id\n- ui\n- uiCls\n- baseCls\n- componentCls\n- frame\n\nSee <a href='#!/api/Ext.grid.column.Action-cfg-renderSelectors'>renderSelectors</a> and <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>cfg-childEls</a> for usage examples.\n",
                "type": "Object",
                "src": {
                  "name": "6,985,22",
                  "text": "6,986,8,228",
                  "type": "6,985,14"
                }
              },
              {
                "$type": "property",
                "controllable": true,
                "name": "renderer",
                "text": "A renderer is an 'interceptor' method which can be used to transform data (value,\nappearance, etc.) before it is rendered. Example:\n\n**NOTE:** In previous releases, a string was treated as a method on\n<a href='#!/api/Ext.util.Format'>Ext.util.Format</a> but that is now handled by the <a href='#!/api/Ext.grid.column.Action-cfg-formatter'>formatter</a> config.\n",
                "type": "Function/String",
                "items": [
                  {
                    "$type": "param",
                    "name": "value",
                    "text": "The data value for the current cell\n\n    renderer: function(value){\n        // evaluates `value` to append either `person' or `people`\n        return Ext.util.Format.plural(value, 'person', 'people');\n    }\n",
                    "type": "Object",
                    "src": {
                      "name": "5,296,24",
                      "text": "5,296,30,36:5,297,8,172",
                      "type": "5,296,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "metaData",
                    "text": "A collection of metadata about the current cell; can be\nused or modified by the renderer. Recognized properties are: <a href='#!/api/Ext.grid.column.Action-cfg-tdCls'>tdCls</a>, `tdAttr`,\nand `tdStyle`.\n\nTo add style attributes to the `&lt;td>` element, you must use the `tdStyle`\nproperty. Using a style attribute in the `tdAttr` property will override the\nstyles the column sets, such as the width which will break the rendering.\n\nYou can see an example of using the metaData parameter below.\n\n     Ext.create('Ext.data.Store', {\n          storeId: 'simpsonsStore',\n          fields: ['class', 'attr', 'style'],\n          data: {\n              'class': 'red-bg',\n              'attr': 'lightyellow',\n              'style': 'red'\n          }\n     });\n\n     Ext.create('Ext.grid.Panel', {\n          title: 'Simpsons',\n          store: Ext.data.StoreManager.lookup('simpsonsStore'),\n          columns: [{\n              text: 'Name',\n              dataIndex: 'class',\n              renderer: function (value, metaData) {\n                  metaData.tdCls = value;\n                  return value;\n              }\n          }, {\n              text: 'Email',\n              dataIndex: 'attr',\n              flex: 1,\n              renderer: function (value, metaData) {\n                  metaData.tdAttr = 'bgcolor=\"' + value + '\"';\n                  return value;\n              }\n          }, {\n              text: 'Phone',\n              dataIndex: 'style',\n              renderer: function (value, metaData) {\n                  metaData.tdStyle = 'color:' + value;\n                  return value;\n              }\n          }],\n          height: 200,\n          width: 400,\n          renderTo: Ext.getBody()\n      });\n",
                    "type": "Object",
                    "src": {
                      "name": "5,303,24",
                      "text": "5,303,33,56:5,304,8,1603",
                      "type": "5,303,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "record",
                    "text": "The record for the current row\n\n    renderer: function (value, metaData, record) {\n        // evaluate the record's `updated` field and if truthy return the value\n        // from the `newVal` field, else return value\n        var updated = record.get('updated');\n        return updated ? record.get('newVal') : value;\n    }\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "5,354,32",
                      "text": "5,354,39,31:5,355,8,293",
                      "type": "5,354,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "rowIndex",
                    "text": "The index of the current row\n\n    renderer: function (value, metaData, record, rowIndex) {\n        // style the cell differently for even / odd values\n        var odd = (rowIndex % 2 === 0);\n        metaData.tdStyle = 'color:' + (odd ? 'gray' : 'red');\n    }\n",
                    "type": "Number",
                    "src": {
                      "name": "5,363,24",
                      "text": "5,363,33,29:5,364,8,231",
                      "type": "5,363,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "colIndex",
                    "text": "The index of the current column\n\n    var myRenderer = function(value, metaData, record, rowIndex, colIndex) {\n        if (colIndex === 0) {\n            metaData.tdAttr = 'data-qtip=' + value;\n        }\n        // additional logic to apply to values in all columns\n        return value;\n    }\n\n    // using the same renderer on all columns you can process the value for\n    // each column with the same logic and only set a tooltip on the first column\n    renderer: myRenderer\n\n_See also <a href='#!/api/Ext.tip.QuickTipManager'>Ext.tip.QuickTipManager</a>_\n",
                    "type": "Number",
                    "src": {
                      "name": "5,371,24",
                      "text": "5,371,33,32:5,372,8,489",
                      "type": "5,371,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "store",
                    "text": "The data store\n\n    renderer: function (value, metaData, record, rowIndex, colIndex, store) {\n        // style the cell differently depending on how the value relates to the\n        // average of all values\n        var average = store.average('grades');\n        metaData.tdCls = (value < average) ? 'needsImprovement' : 'satisfactory';\n        return value;\n    }\n",
                    "type": "Ext.data.Store",
                    "src": {
                      "name": "5,387,32",
                      "text": "5,387,38,15:5,388,8,350",
                      "type": "5,387,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "view",
                    "text": "The data view\n\n    renderer: function (value, metaData, record, rowIndex, colIndex, store, view) {\n        // style the cell using the dataIndex of the column\n        var headerCt = this.getHeaderContainer(),\n            column = headerCt.getHeaderAtIndex(colIndex);\n\n        metaData.tdCls = 'app-' + column.dataIndex;\n        return value;\n    }\n",
                    "type": "Ext.view.View",
                    "src": {
                      "name": "5,397,31",
                      "text": "5,397,36,14:5,398,8,335",
                      "type": "5,397,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The HTML string to be rendered.\n",
                    "type": "String",
                    "src": {
                      "text": "5,409,8,32",
                      "type": "5,408,17"
                    }
                  }
                ],
                "src": {
                  "controllable": "5,410,8",
                  "name": "5,289,31",
                  "text": "5,290,8,278",
                  "type": "5,289,14"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>cfg-childEls</a> instead.\n",
                "deprecatedVersion": "5.0",
                "name": "renderSelectors",
                "text": "An object containing properties specifying CSS selectors which identify child elements\ncreated by the render process.\n\nAfter the Component's internal structure is rendered according to the <a href='#!/api/Ext.grid.column.Action-cfg-renderTpl'>renderTpl</a>, this object is iterated through,\nand the found Elements are added as properties to the Component using the `renderSelector` property name.\n\nFor example, a Component which renders a title and description into its element:\n\n     Ext.create('Ext.Component', {\n         renderTo: Ext.getBody(),\n         renderTpl: [\n             '<h1 class=\"title\">{title}</h1>',\n             '<p>{desc}</p>'\n         ],\n         renderData: {\n             title: \"Error\",\n             desc: \"Something went wrong\"\n         },\n         renderSelectors: {\n             titleEl: 'h1.title',\n             descEl: 'p'\n         },\n         listeners: {\n             afterrender: function(cmp){\n                 // After rendering the component will have a titleEl and descEl properties\n                 cmp.titleEl.setStyle({color: \"red\"});\n             }\n         }\n     });\n\nThe use of <a href='#!/api/Ext.grid.column.Action-cfg-renderSelectors'>renderSelectors</a> is deprecated (for performance reasons). The above\ncode should be refactored into something like this:\n\n     Ext.create('Ext.Component', {\n         renderTo: Ext.getBody(),\n         renderTpl: [\n             '<h1 class=\"title\" id=\"{id}-titleEl\" data-ref=\"titleEl\">{title}</h1>',\n             '<p id=\"{id}-descEl\" data-ref=\"descEl\">{desc}</p>'\n         ],\n         renderData: {\n             title: \"Error\",\n             desc: \"Something went wrong\"\n         },\n         childEls: [\n             'titleEl',\n             'descEl'\n         ]\n     });\n\nTo use <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>childEls</a> yet retain the use of selectors (which remains as expensive as\n<a href='#!/api/Ext.grid.column.Action-cfg-renderSelectors'>renderSelectors</a>):\n\n     Ext.create('Ext.Component', {\n         renderTo: Ext.getBody(),\n         renderTpl: [\n             '<h1 class=\"title\">{title}</h1>',\n             '<p>{desc}</p>'\n         ],\n         renderData: {\n             title: \"Error\",\n             desc: \"Something went wrong\"\n         },\n         childEls: {\n             titleEl: { selectNode: 'h1.title' },\n             descEl: { selectNode: 'p' }\n         }\n     });\n",
                "type": "Object",
                "src": {
                  "deprecatedMessage": "6,1069,8",
                  "deprecatedVersion": "6,1069,8",
                  "name": "6,1000,22",
                  "text": "6,1001,8,2159",
                  "type": "6,1000,14"
                }
              },
              {
                "$type": "property",
                "name": "renderTo",
                "since": "2.3.0",
                "text": "Specify the <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> of the element, a DOM element or an existing Element that this component will be rendered into.\n\n**Notes:**\n\nDo *not* use this option if the Component is to be a child item of a <a href='#!/api/Ext.container.Container'>Ext.container.Container</a>.\nIt is the responsibility of the <a href='#!/api/Ext.container.Container'>Ext.container.Container</a>s\n<a href='#!/api/Ext.container.Container-cfg-layout'>Ext.container.Container#layout</a> to render and manage its child items.\n\nWhen using this config, a call to `render()` is not required.\n\nSee also: <a href='#!/api/Ext.grid.column.Action-method-render'>method-render</a>.\n",
                "type": "String/HTMLElement/Ext.dom.Element",
                "src": {
                  "name": "6,1073,50",
                  "since": "6,1086,15",
                  "text": "6,1074,8,505",
                  "type": "6,1073,14"
                }
              },
              {
                "$type": "property",
                "access": "protected",
                "name": "renderTpl",
                "text": "An <a href='#!/api/Ext.XTemplate'>Ext.XTemplate</a> used to create the internal structure inside this Component's encapsulating\n<a href='#!/api/Ext.grid.column.Action-method-getEl'>getEl</a>.\n\nYou do not normally need to specify this. For the base classes <a href='#!/api/Ext.Component'>Ext.Component</a> and\n<a href='#!/api/Ext.container.Container'>Ext.container.Container</a>, this defaults to **<a href='#!/api/null'>null</a>** which means that they will be initially rendered\nwith no internal structure; they render their <a href='#!/api/Ext.grid.column.Action-method-getEl'>getEl</a> empty. The more specialized\nclasses with complex DOM structures provide their own template definitions.\n\nThis is intended to allow the developer to create application-specific utility Components with customized\ninternal structure.\n\nUpon rendering, any created child elements may be automatically imported into object properties using the\n<a href='#!/api/Ext.grid.column.Action-cfg-renderSelectors'>renderSelectors</a> and <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>cfg-childEls</a> options.\n",
                "type": "Ext.XTemplate/String/String[]",
                "src": {
                  "access": "6,1104,8",
                  "name": "6,1090,45",
                  "text": "6,1091,8,802",
                  "type": "6,1090,14"
                }
              },
              {
                "$type": "property",
                "name": "resizable",
                "text": "False to prevent the column from being resizable.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,271,23",
                  "text": "5,272,8,50",
                  "type": "5,271,14"
                }
              },
              {
                "$type": "property",
                "name": "resizeHandles",
                "text": "A valid <a href='#!/api/Ext.resizer.Resizer'>Ext.resizer.Resizer</a> handles config string. Only applies when resizable = true.\n",
                "type": "String",
                "src": {
                  "name": "6,1124,22",
                  "text": "6,1125,8,95",
                  "type": "6,1124,14"
                }
              },
              {
                "$type": "property",
                "name": "saveDelay",
                "text": "A buffer to be applied if many state events are fired within a short period.\n",
                "type": "Number",
                "src": {
                  "name": "16,88,22",
                  "text": "16,89,8,77",
                  "type": "16,88,14"
                }
              },
              {
                "$type": "property",
                "name": "scope",
                "text": "The scope (`this` reference) in which the <a href='#!/api/Ext.grid.column.Action-cfg-handler'>handler</a>,\n<a href='#!/api/Ext.grid.column.Action-cfg-getClass'>getClass</a>, <a href='#!/api/Ext.grid.column.Action-cfg-isDisabled'>cfg-isDisabled</a> and <a href='#!/api/Ext.grid.column.Action-cfg-getTip'>getTip</a> functions\nare executed.\nDefaults to this Column.\n",
                "type": "Object",
                "src": {
                  "name": "0,82,22",
                  "text": "0,83,8,180",
                  "type": "0,82,14"
                }
              },
              {
                "$type": "property",
                "name": "scrollable",
                "text": "Configuration options to make this Component scrollable. Acceptable values are:\n\n- `true` to enable auto scrolling.\n- `false` (or <a href='#!/api/null'>null</a>) to disable scrolling - this is the default.\n- `x` or `horizontal` to enable horizontal scrolling only\n- `y` or `vertical` to enable vertical scrolling only\n\nAlso accepts a configuration object for a <a href='#!/api/Ext.scroll.Scroller'>Ext.scroll.Scroller</a> if\nif advanced configuration is needed.\n\nThe getter for this config returns the <a href='#!/api/Ext.scroll.Scroller'>Ext.scroll.Scroller</a>\ninstance.  You can use the Scroller API to read or manipulate the scroll position:\n\n    // scrolls the component to 5 on the x axis and 10 on the y axis\n    component.getScrollable().scrollTo(5, 10);\n",
                "type": "Boolean/String/Object",
                "src": {
                  "name": "6,391,41",
                  "text": "6,392,12,684",
                  "type": "6,391,18"
                }
              },
              {
                "$type": "property",
                "name": "sealed",
                "optional": true,
                "text": "Specify as `true` to constrain column dragging so that a column cannot be dragged into or out of this column.\n\n**Note that this config is only valid for column headers which contain child column headers, eg:**\n    {\n        sealed: true\n        text: 'ExtJS',\n        columns: [{\n            text: '3.0.4',\n            dataIndex: 'ext304'\n        }, {\n            text: '4.1.0',\n            dataIndex: 'ext410'\n        }\n    }\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "10,73,24",
                  "text": "10,74,8,428",
                  "type": "10,73,14",
                  "value": "10,73,31"
                }
              },
              {
                "$type": "property",
                "name": "session",
                "optional": true,
                "text": "If provided this creates a new `Session` instance for this component. If this\nis a `Container`, this will then be inherited by all child components.\n\nTo create a new session you can specify `true`:\n\n     Ext.create({\n         xtype: 'viewport',\n         session: true,\n\n         items: [{\n             ...\n         }]\n     });\n\nAlternatively, a config object can be provided:\n\n     Ext.create({\n         xtype: 'viewport',\n         session: {\n             ...\n         },\n\n         items: [{\n             ...\n         }]\n     });\n",
                "type": "Boolean/Object/Ext.data.Session",
                "value": "null",
                "src": {
                  "name": "9,204,52",
                  "text": "9,205,12,531",
                  "type": "9,204,18",
                  "value": "9,204,60"
                }
              },
              {
                "$type": "property",
                "name": "shadow",
                "text": "Specifies whether the floating component should be given a shadow. Set to true to automatically create an\n<a href='#!/api/Ext.dom.Shadow'>Ext.Shadow</a>, or a string indicating the shadow's display <a href='#!/api/Ext.dom.Shadow-cfg-mode'>Ext.Shadow#mode</a>. Set to false to\ndisable the shadow.\n",
                "type": "String/Boolean",
                "src": {
                  "name": "3,23,30",
                  "text": "3,24,8,231",
                  "type": "3,23,14"
                }
              },
              {
                "$type": "property",
                "name": "shadowOffset",
                "text": "Number of pixels to offset the shadow.\n",
                "type": "Number",
                "src": {
                  "name": "3,61,22",
                  "text": "3,62,8,39",
                  "type": "3,61,14"
                }
              },
              {
                "$type": "property",
                "name": "shim",
                "text": "`true` to enable an iframe shim for this Component to keep\nwindowed objects from showing through.\n",
                "type": "Boolean",
                "src": {
                  "name": "3,66,23",
                  "text": "3,66,28,59:3,67,8,39",
                  "type": "3,66,14"
                }
              },
              {
                "$type": "property",
                "localDoc": "##Non-Panel Components\n\nThe shrinkWrap config is a class-level config and should be used when defining a\nsubclass.\nIt is not intended to be set as a config on instances of a given component.\n\nFor non-Panel components, shrinkWrap is a descriptive config only.  It should be\nset when defining your own custom class including the DOM elements used to\nconstruct the component.  The shrinkWrap property does not itself apply styling on\nthe component elements.  Rather, it should describe the CSS styling you've applied\nto your custom component (_refer to the numeric matrix above_).\n\nWhen a component is owned by a container the layout of that container will inspect\nthe component's shrinkWrap property during layout.  The layout then uses the\ncontent-wrapping policy described by shrinkWrap to correctly size and position the\ncontainer's child items.\n",
                "name": "shrinkWrap",
                "optional": true,
                "text": "\nThe possible values for shrinkWrap are:\n\n  - 0 (or `false`): Neither width nor height depend on content.\n  - 1: Width depends on content (shrink wraps), but height does not.\n  - 2: Height depends on content (shrink wraps), but width does not.\n  - 3 (or `true`): Both width and height depend on content (shrink wrap).\n\nIn CSS terms, shrink-wrap width is analogous to an inline-block element as opposed\nto a block-level element.\n",
                "type": "Boolean/Number",
                "value": "2",
                "src": {
                  "localDoc": "6,1142,18",
                  "name": "6,1130,31",
                  "text": "6,1131,8,429",
                  "type": "6,1130,14",
                  "value": "6,1130,42"
                }
              },
              {
                "$type": "property",
                "name": "sortable",
                "text": "False to disable sorting of this column. Whether local/remote sorting is used is specified in\n<a href='#!/api/Ext.data.Store-cfg-remoteSort'>Ext.data.Store#remoteSort</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,220,23",
                  "text": "5,221,8,131",
                  "type": "5,220,14"
                }
              },
              {
                "$type": "property",
                "name": "sorter",
                "text": "A Sorter, or sorter config object to apply when the standard user interface sort gesture is invoked.\nThis is usually clicking this column header, but there are also menu options to sort ascending or descending.\n\nNote that a sorter may also be specified as a function which accepts two records to compare.\n",
                "type": "String/Object/Ext.util.Sorter",
                "src": {
                  "name": "5,99,49",
                  "text": "5,100,12,305",
                  "type": "5,99,18"
                }
              },
              {
                "$type": "property",
                "inheritdoc": "Ext.state.Stateful#cfg-stateEvents",
                "localDoc": "By default the following stateEvents are added:\n\n - <a href='#!/api/Ext.grid.column.Action-event-resize'>event-resize</a>\n",
                "name": "stateEvents",
                "src": {
                  "inheritdoc": "6,1163,8",
                  "localDoc": "6,1164,18",
                  "name": "6,1162,13"
                }
              },
              {
                "$type": "property",
                "name": "stateful",
                "text": "A flag which causes the object to attempt to restore the state of\ninternal properties from a saved state on startup. The object must have\na <a href='#!/api/Ext.grid.column.Action-cfg-stateId'>stateId</a> for state to be managed.\n\nAuto-generated ids are not guaranteed to be stable across page loads and\ncannot be relied upon to save and restore the same state for a object.\n\nFor state saving to work, the state manager's provider must have been\nset to an implementation of <a href='#!/api/Ext.state.Provider'>Ext.state.Provider</a> which overrides the\n<a href='#!/api/Ext.state.Provider-method-set'>Ext.state.Provider#set</a> and <a href='#!/api/Ext.state.Provider-method-get'>Ext.state.Provider#get</a>\nmethods to save and recall name/value pairs. A built-in implementation,\n<a href='#!/api/Ext.state.CookieProvider'>Ext.state.CookieProvider</a> is available.\n\nTo set the state provider for the current page:\n\n   Ext.state.Manager.setProvider(new Ext.state.CookieProvider({\n       expires: new Date(new Date().getTime()+(1000*60*60*24*7)), //7 days from now\n   }));\n\nA stateful object attempts to save state when one of the events\nlisted in the <a href='#!/api/Ext.grid.column.Action-cfg-stateEvents'>stateEvents</a> configuration fires.\n\nTo save state, a stateful object first serializes its state by\ncalling *<a href='#!/api/Ext.grid.column.Action-method-getState'>getState</a>*.\n\nThe Component base class implements <a href='#!/api/Ext.grid.column.Action-method-getState'>getState</a> to save its width and height within the state\nonly if they were initially configured, and have changed from the configured value.\n\nThe Panel class saves its collapsed state in addition to that.\n\nThe Grid class saves its column state and store state (sorters and filters and grouper) in addition to its superclass state.\n\nIf there is more application state to be save, the developer must provide an implementation which\nfirst calls the superclass method to inherit the above behaviour, and then injects new properties\ninto the returned object.\n\nThe value yielded by getState is passed to <a href='#!/api/Ext.state.Manager-method-set'>Ext.state.Manager#set</a>\nwhich uses the configured <a href='#!/api/Ext.state.Provider'>Ext.state.Provider</a> to save the object\nkeyed by the <a href='#!/api/Ext.grid.column.Action-cfg-stateId'>stateId</a>.\n\nDuring construction, a stateful object attempts to *restore* its state by calling\n<a href='#!/api/Ext.state.Manager-method-get'>Ext.state.Manager#get</a> passing the <a href='#!/api/Ext.grid.column.Action-cfg-stateId'>stateId</a>\n\nThe resulting object is passed to <a href='#!/api/Ext.grid.column.Action-method-applyState'>applyState</a>*. The default implementation of\n<a href='#!/api/Ext.grid.column.Action-method-applyState'>applyState</a> simply copies properties into the object, but a developer may\noverride this to support restoration of more complex application state.\n\nYou can perform extra processing on state save and restore by attaching\nhandlers to the <a href='#!/api/Ext.grid.column.Action-event-beforestaterestore'>beforestaterestore</a>, <a href='#!/api/Ext.grid.column.Action-event-staterestore'>staterestore</a>,\n<a href='#!/api/Ext.grid.column.Action-event-beforestatesave'>beforestatesave</a> and <a href='#!/api/Ext.grid.column.Action-event-statesave'>statesave</a> events.\n",
                "type": "Boolean",
                "src": {
                  "name": "16,15,23",
                  "text": "16,16,8,2441",
                  "type": "16,15,14"
                }
              },
              {
                "$type": "property",
                "name": "stateId",
                "text": "An identifier which identifies this column uniquely within the owning grid's <a href='#!/api/Ext.grid.column.Action-cfg-stateful'>stateful</a>.\n\nThis does not have to be *globally* unique. A column's state is not saved standalone. It is encapsulated within\nthe owning grid's state.\n",
                "type": "String",
                "src": {
                  "name": "5,177,22",
                  "text": "5,178,8,240",
                  "type": "5,177,14"
                }
              },
              {
                "$type": "property",
                "name": "stopSelection",
                "optional": true,
                "text": "Prevent grid selection upon click.\nBeware that if you allow for the selection to happen then the selection model will steal focus from\nany possible floating window (like a message box) raised in the handler. This will prevent closing the\nwindow when pressing the Escape button since it will no longer contain a focused component.\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "0,102,24",
                  "text": "0,103,8,330",
                  "type": "0,102,14",
                  "value": "0,102,38"
                }
              },
              {
                "$type": "property",
                "name": "style",
                "since": "1.1.0",
                "text": "A custom style specification to be applied to this component's Element. Should be a valid argument to\n<a href='#!/api/Ext.dom.Element-method-applyStyles'>Ext.dom.Element#applyStyles</a>.\n\n    new Ext.panel.Panel({\n        title: 'Some Title',\n        renderTo: Ext.getBody(),\n        width: 400, height: 300,\n        layout: 'form',\n        items: [{\n            xtype: 'textarea',\n            style: {\n                width: '95%',\n                marginBottom: '10px'\n            }\n        },\n        new Ext.button.Button({\n            text: 'Send',\n            minWidth: '100',\n            style: {\n                marginBottom: '10px'\n            }\n        })\n        ]\n    });\n",
                "type": "String/Object",
                "src": {
                  "name": "6,1170,29",
                  "since": "6,1196,15",
                  "text": "6,1171,8,636",
                  "type": "6,1170,14"
                }
              },
              {
                "$type": "property",
                "controllable": true,
                "name": "summaryRenderer",
                "text": "A renderer to be used in conjunction with the <a href='#!/api/Ext.grid.feature.Summary'>Ext.grid.feature.Summary</a> or\n<a href='#!/api/Ext.grid.feature.GroupingSummary'>Ext.grid.feature.GroupingSummary</a> features. This renderer is used to\ndisplay a summary value for this column.\n",
                "type": "Function/String",
                "src": {
                  "controllable": "5,601,8",
                  "name": "5,597,31",
                  "text": "5,598,8,223",
                  "type": "5,597,14"
                }
              },
              {
                "$type": "property",
                "name": "suspendLayout",
                "text": "If true, suspend calls to updateLayout. Useful when batching multiple adds to a container\nand not passing them as multiple arguments or an array.\n",
                "type": "Boolean",
                "src": {
                  "name": "4,643,23",
                  "text": "4,644,8,146",
                  "type": "4,643,14"
                }
              },
              {
                "$type": "property",
                "name": "tabIndex",
                "optional": true,
                "text": "DOM tabIndex attribute for this Focusable's\nfocusEl.\n",
                "type": "Number",
                "src": {
                  "name": "11,33,23",
                  "text": "11,33,33,44:11,34,8,9",
                  "type": "11,33,14"
                }
              },
              {
                "$type": "property",
                "name": "tdCls",
                "text": "A CSS class names to apply to the table cells for this column.\n",
                "type": "String",
                "src": {
                  "name": "5,633,22",
                  "text": "5,634,8,63",
                  "type": "5,633,14"
                }
              },
              {
                "$type": "property",
                "name": "text",
                "text": "The header text to be used as innerHTML (html tags are accepted) to display in the Grid.\n**Note**: to have a clickable header with no text displayed you can use the default of `&#160;` aka `&nbsp;`.\n",
                "type": "String",
                "src": {
                  "name": "5,192,22",
                  "text": "5,193,8,199",
                  "type": "5,192,14"
                }
              },
              {
                "$type": "property",
                "name": "toFrontOnShow",
                "text": "True to automatically call <a href='#!/api/Ext.grid.column.Action-method-toFront'>toFront</a> when the <a href='#!/api/Ext.grid.column.Action-method-show'>method-show</a> method is called on an already visible,\nfloating component.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,1200,23",
                  "text": "6,1201,8,134",
                  "type": "6,1200,14"
                }
              },
              {
                "$type": "property",
                "name": "tooltip",
                "text": "A tooltip message to be displayed on hover. <a href='#!/api/Ext.tip.QuickTipManager-method-init'>Ext.tip.QuickTipManager#init</a> must\nhave been initialized.\n\nThe tooltip may also be determined on a row by row basis by configuring a <a href='#!/api/Ext.grid.column.Action-cfg-getTip'>getTip</a> method.\n",
                "type": "String",
                "src": {
                  "name": "0,89,22",
                  "text": "0,90,8,232",
                  "type": "0,89,14"
                }
              },
              {
                "$type": "property",
                "name": "tooltipType",
                "optional": true,
                "text": "The type of <a href='#!/api/Ext.grid.column.Action-cfg-tooltip'>tooltip</a> to use. Either 'qtip' for QuickTips or 'title' for title attribute.\n",
                "type": "String",
                "value": "\"qtip\"",
                "src": {
                  "name": "5,623,23",
                  "text": "5,624,8,97",
                  "type": "5,623,14",
                  "value": "5,623,35"
                }
              },
              {
                "$type": "property",
                "name": "tpl",
                "since": "3.4.0",
                "text": "An <a href='#!/api/Ext.Template'>Ext.Template</a>, <a href='#!/api/Ext.XTemplate'>Ext.XTemplate</a> or an array of strings to form an Ext.XTemplate. Used in\nconjunction with the <a href='#!/api/Ext.grid.column.Action-cfg-data'>data</a> and <a href='#!/api/Ext.grid.column.Action-cfg-tplWriteMode'>tplWriteMode</a> configurations.\n",
                "type": "Ext.XTemplate/Ext.Template/String/String[]",
                "src": {
                  "name": "6,1207,58",
                  "since": "6,1211,15",
                  "text": "6,1208,8,186",
                  "type": "6,1207,14"
                }
              },
              {
                "$type": "property",
                "name": "tplWriteMode",
                "since": "3.4.0",
                "text": "The Ext.(X)Template method to use when updating the content area of the Component.\nSee <a href='#!/api/Ext.XTemplate-method-overwrite'>Ext.XTemplate#overwrite</a> for information on default mode.\n",
                "type": "String",
                "src": {
                  "name": "6,1224,22",
                  "since": "6,1228,15",
                  "text": "6,1225,8,155",
                  "type": "6,1224,14"
                }
              },
              {
                "$type": "property",
                "name": "twoWayBindable",
                "text": "This object holds a map of `config` properties that will update their binding\nas they are modified. For example, `value` is a key added by form fields. The\nform of this config is the same as <a href='#!/api/Ext.grid.column.Action-cfg-publishes'>publishes</a>.\n\nThis config is defined so that updaters are not created and added for all\nbound properties since most cannot be modified by the end-user and hence are\nnot appropriate for two-way binding.\n",
                "type": "String/String[]/Object",
                "src": {
                  "name": "9,239,42",
                  "text": "9,240,12,402",
                  "type": "9,239,18"
                }
              },
              {
                "$type": "property",
                "name": "ui",
                "text": "A UI style for a component.\n",
                "type": "String",
                "src": {
                  "name": "6,1233,22",
                  "text": "6,1234,8,28",
                  "type": "6,1233,14"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "uiCls",
                "text": "An array of of `classNames` which are currently applied to this component.\n",
                "type": "String[]",
                "src": {
                  "access": "6,1241,8",
                  "name": "6,1239,24",
                  "text": "6,1240,8,75",
                  "type": "6,1239,14"
                }
              },
              {
                "$type": "property",
                "controllable": true,
                "name": "updater",
                "text": "An updater is a method which is used when records are updated, and an *existing* grid row needs updating.\nThe method is passed the cell element and may manipulate it in any way.\n\n**Note**: The updater is required to insert the <a href='#!/api/Ext.grid.column.Action-cfg-emptyCellText'>emptyCellText</a> if there\nis no value in the cell.\n\n    Ext.create('Ext.grid.Panel', {\n        title: 'Grades',\n        store: {\n            fields: ['originalScore', 'newScore'],\n            data: [{\n                originalScore: 70,\n                newScore: 70\n            }]\n        },\n        columns: [{\n            text: 'Score',\n            dataIndex: 'newScore',\n            editor: 'numberfield',\n            flex: 1,\n            updater: function (cell, value, record, view) {\n                var inner = Ext.get(cell).first(),\n                    originalScore = record.get('originalScore'),\n                    color = (value === originalScore) ? 'black' : (value > originalScore) ? 'green' : 'red';\n\n                // set the color based on the current value relative to the originalScore value\n                // * same   = black\n                // * higher = green\n                // * less   = red\n                inner.applyStyles({\n                    color: color\n                });\n                // pass the value to the cell's inner el\n                inner.setHtml(value);\n            }\n        }],\n        height: 200,\n        width: 400,\n        renderTo: document.body,\n        tbar: [{\n            xtype: 'numberfield',\n            fieldLabel: 'New Score',\n            value: 70,\n            listeners: {\n                change: function (field, newValue) {\n                    this.up('grid').getStore().first().set('newScore', newValue);\n                }\n            }\n        }]\n    });\n\nIf a string is passed it is assumed to be the name of a method defined by the\n<a href='#!/api/Ext.grid.column.Action-method-getController'>method-getController</a> or an ancestor component configured as <a href='#!/api/Ext.grid.column.Action-cfg-defaultListenerScope'>defaultListenerScope</a>.\n",
                "type": "Function/String",
                "items": [
                  {
                    "$type": "property",
                    "name": "cell",
                    "text": "The HTML cell element to update.\n",
                    "type": "HTMLElement",
                    "src": {
                      "name": "5,469,35",
                      "text": "5,469,40,33",
                      "type": "5,469,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "value",
                    "text": "The data value for the current cell\n",
                    "type": "Object",
                    "src": {
                      "name": "5,470,30",
                      "text": "5,470,36,36",
                      "type": "5,470,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "record",
                    "text": "The record for the current row\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "5,471,38",
                      "text": "5,471,45,31",
                      "type": "5,471,14"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "view",
                    "text": "The current view\n\n**Note**: The updater is required to insert the <a href='#!/api/Ext.grid.column.Action-cfg-emptyCellText'>emptyCellText</a> if there is no value in the cell.\n",
                    "type": "Ext.view.View",
                    "src": {
                      "name": "5,472,37",
                      "text": "5,472,42,17:5,473,8,107",
                      "type": "5,472,14"
                    }
                  }
                ],
                "src": {
                  "controllable": "5,476,8",
                  "name": "5,415,31",
                  "text": "5,416,8,1950",
                  "type": "5,415,14"
                }
              },
              {
                "$type": "property",
                "accessor": true,
                "name": "userCls",
                "text": "One or more CSS classes to add to the component's primary element. This config\nis intended solely for use by the component instantiator (the \"user\"), not by\nderived classes.\n\nFor example:\n\n     items: [{\n         xtype: 'button',\n         userCls: 'my-button'\n     ...\n     }]\n",
                "type": "String/String[]",
                "src": {
                  "accessor": "6,1258,8",
                  "name": "6,1246,31",
                  "text": "6,1247,8,277",
                  "type": "6,1246,14"
                }
              },
              {
                "$type": "property",
                "name": "variableRowHeight",
                "optional": true,
                "text": "True to indicate that data in this column may take on an unpredictable height, possibly differing from row to row.\n\nIf this is set, then View refreshes, and removal and addition of new rows will result in an ExtJS layout of the grid\nin order to adjust for possible addition/removal of scrollbars in the case of data changing height.\n\nThis config also tells the View's buffered renderer that row heights are unpredictable, and must be remeasured as the view is refreshed.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "5,261,24",
                  "text": "5,262,8,471",
                  "type": "5,261,14",
                  "value": "5,261,42"
                }
              },
              {
                "$type": "property",
                "name": "viewModel",
                "text": "The `ViewModel` is a data provider for this component and its children. The\ndata contained in the `ViewModel` is typically used by adding <a href='#!/api/Ext.grid.column.Action-cfg-bind'>bind</a> configs\nto the components that want present or edit this data.\n\nWhen set, the `ViewModel` is created and links to any inherited <a href='#!/api/Ext.grid.column.Action-cfg-viewModel'>viewModel</a>\ninstance from an ancestor container as the \"parent\". The `ViewModel` hierarchy,\nonce established, only supports creation or destruction of children. The\nparent of a `ViewModel` cannot be changed on the fly.\n\nIf this is a root-level `ViewModel`, the data model connection is made to this\ncomponent's associated <a href='#!/api/Ext.data.Session'>Ext.data.Session</a>. This is\ndetermined by calling `getInheritedSession`.\n",
                "type": "String/Object/Ext.app.ViewModel",
                "src": {
                  "name": "9,258,51",
                  "text": "9,259,12,690",
                  "type": "9,258,18"
                }
              },
              {
                "$type": "property",
                "name": "weight",
                "text": "HeaderContainer overrides the default weight of 0 for all docked items to 100.\nThis is so that it has more priority over things like toolbars.\n",
                "type": "Number",
                "src": {
                  "name": "10,56,22",
                  "text": "10,57,8,143",
                  "type": "10,56,14"
                }
              },
              {
                "$type": "property",
                "name": "width",
                "text": "The width of this component. A numeric value will be interpreted as the number of\npixels; a string value will be treated as a CSS value with units.\n",
                "type": "Number/String",
                "src": {
                  "name": "6,1336,29",
                  "text": "6,1337,8,148",
                  "type": "6,1336,14"
                }
              },
              {
                "$type": "property",
                "name": "xtype",
                "since": "2.3.0",
                "text": "**Note:** Only applies to <a href='#!/api/Ext.Component'>Ext.Component</a> derived classes when used as\na config in <a href='#!/api/Ext-method-define'>Ext#define</a>.\n\nThis property provides a shorter alternative to creating objects than using a full\nclass name. Using <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a> is the most common way to define component instances,\nespecially in a container. For example, the items in a form containing text fields\ncould be created explicitly like so:\n\n     items: [\n         Ext.create('Ext.form.field.Text', {\n             fieldLabel: 'Foo'\n         }),\n         Ext.create('Ext.form.field.Text', {\n             fieldLabel: 'Bar'\n         }),\n         Ext.create('Ext.form.field.Number', {\n             fieldLabel: 'Num'\n         })\n     ]\n\nBut by using <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a>, the above becomes:\n\n     items: [\n         {\n             xtype: 'textfield',\n             fieldLabel: 'Foo'\n         },\n         {\n             xtype: 'textfield',\n             fieldLabel: 'Bar'\n         },\n         {\n             xtype: 'numberfield',\n             fieldLabel: 'Num'\n         }\n     ]\n\nWhen the <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a> is common to many items, <a href='#!/api/Ext.container.Container-cfg-defaultType'>Ext.container.Container#defaultType</a>\nis another way to specify the <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a> for all items that don't have an explicit <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a>:\n\n     defaultType: 'textfield',\n     items: [\n         { fieldLabel: 'Foo' },\n         { fieldLabel: 'Bar' },\n         { fieldLabel: 'Num', xtype: 'numberfield' }\n     ]\n\nEach member of the `items` array is now just a \"configuration object\". These objects\nare used to create and configure component instances. A configuration object can be\nmanually used to instantiate a component using <a href='#!/api/Ext-method-widget'>Ext#widget</a>:\n\n     var text1 = Ext.create('Ext.form.field.Text', {\n         fieldLabel: 'Foo'\n     });\n\n     // or alternatively:\n\n     var text1 = Ext.widget({\n         xtype: 'textfield',\n         fieldLabel: 'Foo'\n     });\n\nThis conversion of configuration objects into instantiated components is done when\na container is created as part of its {Ext.container.AbstractContainer#initComponent}\nprocess. As part of the same process, the `items` array is converted from its raw\narray form into a <a href='#!/api/Ext.util.MixedCollection'>Ext.util.MixedCollection</a> instance.\n\nYou can define your own <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a> on a custom <a href='#!/api/Ext.Component'>Ext.Component</a> by specifying\nthe <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a> property in <a href='#!/api/Ext-method-define'>Ext#define</a>. For example:\n\n    Ext.define('MyApp.PressMeButton', {\n        extend: 'Ext.button.Button',\n        xtype: 'pressmebutton',\n        text: 'Press Me'\n    });\n\nCare should be taken when naming an <a href='#!/api/Ext.grid.column.Action-cfg-xtype'>xtype</a> in a custom component because there is\na single, shared scope for all xtypes. Third part components should consider using\na prefix to avoid collisions.\n\n    Ext.define('Foo.form.CoolButton', {\n        extend: 'Ext.button.Button',\n        xtype: 'ux-coolbutton',\n        text: 'Cool!'\n    });\n\nSee <a href='#!/api/Ext.enums.Widget'>Ext.enums.Widget</a> for list of all available xtypes.\n",
                "type": "Ext.enums.Widget",
                "src": {
                  "name": "6,1342,32",
                  "since": "6,1431,15",
                  "text": "6,1343,8,2822",
                  "type": "6,1342,14"
                }
              }
            ]
          },
          {
            "$type": "events",
            "items": [
              {
                "$type": "event",
                "name": "activate",
                "text": "Fires after a Component has been visually activated.\n\n**Note** This event is only fired if this Component is a child of a <a href='#!/api/Ext.container.Container'>Ext.container.Container</a>\nthat uses <a href='#!/api/Ext.layout.container.Card'>Ext.layout.container.Card</a> as it's layout or this Component is a floating Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1821,31",
                      "type": "6,1821,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1816,15",
                  "text": "6,1817,8,256"
                }
              },
              {
                "$type": "event",
                "name": "add",
                "since": "2.3.0",
                "text": "Fires after any <a href='#!/api/Ext.Component'>Ext.Component</a> is added or inserted into the container.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "4,698,41",
                      "type": "4,698,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component that was added\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,699,31",
                      "text": "4,699,41,29",
                      "type": "4,699,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "index",
                    "text": "The index at which the component was added to the container's items collection\n",
                    "type": "Number",
                    "src": {
                      "name": "4,700,24",
                      "text": "4,700,30,79",
                      "type": "4,700,16"
                    }
                  }
                ],
                "src": {
                  "name": "4,696,15",
                  "since": "4,701,15",
                  "text": "4,697,8,79"
                }
              },
              {
                "$type": "event",
                "name": "added",
                "since": "3.4.0",
                "text": "Fires after a Component had been added to a Container.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1846,31",
                      "type": "6,1846,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "container",
                    "text": "Parent Container\n",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "6,1847,41",
                      "text": "6,1847,51,17",
                      "type": "6,1847,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "pos",
                    "text": "position of Component\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1848,24",
                      "text": "6,1848,28,22",
                      "type": "6,1848,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1844,15",
                  "since": "6,1849,15",
                  "text": "6,1845,8,55"
                }
              },
              {
                "$type": "event",
                "name": "afterlayout",
                "since": "2.3.0",
                "text": "Fires when the components in this container are arranged by the associated layout manager.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "4,707,41",
                      "type": "4,707,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "layout",
                    "text": "The ContainerLayout implementation for this container\n",
                    "type": "Ext.layout.container.Container",
                    "src": {
                      "name": "4,708,48",
                      "text": "4,708,55,54",
                      "type": "4,708,16"
                    }
                  }
                ],
                "src": {
                  "name": "4,705,15",
                  "since": "4,709,15",
                  "text": "4,706,8,91"
                }
              },
              {
                "$type": "event",
                "name": "afterlayoutanimation",
                "since": "6.0.0",
                "text": "This event first after a component's layout has been updated by a layout that\nincluded animation (e.g., a <a href='#!/api/Ext.panel.Panel'>Ext.panel.Panel</a> in an\n<a href='#!/api/Ext.layout.container.Accordion'>Ext.layout.container.Accordion</a> layout).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1801,31",
                      "type": "6,1801,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1797,15",
                  "since": "6,1802,15",
                  "text": "6,1798,8,200"
                }
              },
              {
                "$type": "event",
                "name": "afterrender",
                "since": "3.4.0",
                "text": "Fires after the component rendering is finished.\n\nThe <a href='#!/api/Ext.grid.column.Action-event-afterrender'>afterrender</a> event is fired after this Component has been <a href='#!/api/Ext.grid.column.Action-property-rendered'>rendered</a>, been post-processed by any\n<a href='#!/api/Ext.grid.column.Action-method-afterRender'>afterRender</a> method defined for the Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1926,31",
                      "type": "6,1926,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1921,15",
                  "since": "6,1927,15",
                  "text": "6,1922,8,207"
                }
              },
              {
                "$type": "event",
                "name": "beforeactivate",
                "text": "Fires before a Component has been visually activated. Returning `false` from an event listener can prevent\nthe activate from occurring.\n\n**Note** This event is only fired if this Component is a child of a <a href='#!/api/Ext.container.Container'>Ext.container.Container</a>\nthat uses <a href='#!/api/Ext.layout.container.Card'>Ext.layout.container.Card</a> as it's layout.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1812,31",
                      "type": "6,1812,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1806,15",
                  "text": "6,1807,8,297"
                }
              },
              {
                "$type": "event",
                "name": "beforeadd",
                "since": "2.3.0",
                "text": "Fires before any <a href='#!/api/Ext.Component'>Ext.Component</a> is added or inserted into the container.\nA handler can return false to cancel the add.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "4,716,41",
                      "type": "4,716,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component being added\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,717,31",
                      "text": "4,717,41,26",
                      "type": "4,717,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "index",
                    "text": "The index at which the component will be added to the container's items collection\n",
                    "type": "Number",
                    "src": {
                      "name": "4,718,24",
                      "text": "4,718,30,83",
                      "type": "4,718,16"
                    }
                  }
                ],
                "src": {
                  "name": "4,713,15",
                  "since": "4,719,15",
                  "text": "4,714,8,126"
                }
              },
              {
                "$type": "event",
                "name": "beforedeactivate",
                "text": "Fires before a Component has been visually deactivated. Returning `false` from an event listener can\nprevent the deactivate from occurring.\n\n**Note** This event is only fired if this Component is a child of a <a href='#!/api/Ext.container.Container'>Ext.container.Container</a>\nthat uses <a href='#!/api/Ext.layout.container.Card'>Ext.layout.container.Card</a> as it's layout.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1831,31",
                      "type": "6,1831,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1825,15",
                  "text": "6,1826,8,301"
                }
              },
              {
                "$type": "event",
                "name": "beforedestroy",
                "since": "1.1.0",
                "text": "Fires before the component is <a href='#!/api/Ext.grid.column.Action-method-destroy'>method-destroy</a>ed. Return `false` from an event handler to stop the\n<a href='#!/api/Ext.grid.column.Action-method-destroy'>method-destroy</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1945,31",
                      "type": "6,1945,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1942,15",
                  "since": "6,1946,15",
                  "text": "6,1943,8,131"
                }
              },
              {
                "$type": "event",
                "name": "beforehide",
                "since": "1.1.0",
                "text": "Fires before the component is hidden when calling the <a href='#!/api/Ext.Component-method-hide'>Ext.Component#method-hide</a> method. Return `false` from an event\nhandler to stop the hide.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1885,31",
                      "type": "6,1885,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1882,15",
                  "since": "6,1886,15",
                  "text": "6,1883,8,156"
                }
              },
              {
                "$type": "event",
                "name": "beforeremove",
                "since": "2.3.0",
                "text": "Fires before any <a href='#!/api/Ext.Component'>Ext.Component</a> is removed from the container.  A handler can return\nfalse to cancel the remove.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "4,726,41",
                      "type": "4,726,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component being removed\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,727,31",
                      "text": "4,727,41,28",
                      "type": "4,727,16"
                    }
                  }
                ],
                "src": {
                  "name": "4,723,15",
                  "since": "4,728,15",
                  "text": "4,724,8,120"
                }
              },
              {
                "$type": "event",
                "name": "beforerender",
                "since": "1.1.0",
                "text": "Fires before the component is <a href='#!/api/Ext.grid.column.Action-property-rendered'>rendered</a>. Return `false` from an event handler to stop the\n<a href='#!/api/Ext.grid.column.Action-method-render'>method-render</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1909,31",
                      "type": "6,1909,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1906,15",
                  "since": "6,1910,15",
                  "text": "6,1907,8,122"
                }
              },
              {
                "$type": "event",
                "name": "beforeshow",
                "since": "1.1.0",
                "text": "Fires before the component is shown when calling the <a href='#!/api/Ext.Component-method-show'>Ext.Component#method-show</a> method. Return `false` from an event\nhandler to stop the show.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1870,31",
                      "type": "6,1870,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1867,15",
                  "since": "6,1871,15",
                  "text": "6,1868,8,155"
                }
              },
              {
                "$type": "event",
                "name": "beforestaterestore",
                "text": "Fires before the state of the object is restored. Return false from an event handler to stop the restore.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.state.Stateful",
                    "src": {
                      "name": "16,96,36",
                      "type": "16,96,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The hash of state values returned from the StateProvider. If this\nevent is not vetoed, then the state object is passed to *<a href='#!/api/Ext.grid.column.Action-method-applyState'>applyState</a>*. By default,\nthat simply copies property values into this object. The method maybe overriden to\nprovide custom state restoration.\n",
                    "type": "Object",
                    "src": {
                      "name": "16,97,24",
                      "text": "16,97,30,66:16,98,8,201",
                      "type": "16,97,16"
                    }
                  }
                ],
                "src": {
                  "name": "16,94,15",
                  "text": "16,95,8,106"
                }
              },
              {
                "$type": "event",
                "name": "beforestatesave",
                "text": "Fires before the state of the object is saved to the configured state provider. Return false to stop the save.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.state.Stateful",
                    "src": {
                      "name": "16,115,36",
                      "type": "16,115,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The hash of state values. This is determined by calling\n*`getState()`* on the object. This method must be provided by the\ndeveloper to return whatever representation of state is required, by default, Ext.state.Stateful\nhas a null implementation.\n",
                    "type": "Object",
                    "src": {
                      "name": "16,116,24",
                      "text": "16,116,30,56:16,117,8,190",
                      "type": "16,116,16"
                    }
                  }
                ],
                "src": {
                  "name": "16,113,15",
                  "text": "16,114,8,111"
                }
              },
              {
                "$type": "event",
                "name": "blur",
                "text": "Fires when this Component loses focus.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "11,53,31",
                      "type": "11,53,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The blur event.\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,54,33",
                      "text": "11,54,39,16",
                      "type": "11,54,16"
                    }
                  }
                ],
                "src": {
                  "name": "11,51,15",
                  "text": "11,52,8,39"
                }
              },
              {
                "$type": "event",
                "name": "boxready",
                "text": "Fires *one time* - after the component has been laid out for the first time at its initial size.\n\nThis event does not fire on components that use <a href='#!/api/Ext.grid.column.Action-cfg-liquidLayout'>cfg-liquidLayout</a>, such as\n<a href='#!/api/Ext.button.Button'>Ext.button.Button</a> and <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1936,31",
                      "type": "6,1936,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "width",
                    "text": "The initial width.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1937,24",
                      "text": "6,1937,30,19",
                      "type": "6,1937,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "height",
                    "text": "The initial height.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1938,24",
                      "text": "6,1938,31,20",
                      "type": "6,1938,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1931,15",
                  "text": "6,1932,8,260"
                }
              },
              {
                "$type": "event",
                "name": "childmove",
                "text": "Fires after any <a href='#!/api/Ext.Component'>Ext.Component</a> has changed its ordinal position within the container.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "4,742,41",
                      "type": "4,742,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component that was moved\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,743,31",
                      "text": "4,743,41,29",
                      "type": "4,743,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "prevIndex",
                    "text": "The previous ordinal position of the Component\n",
                    "type": "Number",
                    "src": {
                      "name": "4,744,24",
                      "text": "4,744,34,47",
                      "type": "4,744,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "newIndex",
                    "text": "The new ordinal position of the Component\n",
                    "type": "Number",
                    "src": {
                      "name": "4,745,24",
                      "text": "4,745,33,42",
                      "type": "4,745,16"
                    }
                  }
                ],
                "src": {
                  "name": "4,740,15",
                  "text": "4,741,8,93"
                }
              },
              {
                "$type": "event",
                "name": "columnhide",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,186,43",
                      "text": "10,186,46,67",
                      "type": "10,186,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,187,40",
                      "text": "10,187,47,65",
                      "type": "10,187,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,185,15"
                }
              },
              {
                "$type": "event",
                "name": "columnmove",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,178,43",
                      "text": "10,178,46,67",
                      "type": "10,178,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,179,40",
                      "text": "10,179,47,65",
                      "type": "10,179,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fromIdx",
                    "type": "Number",
                    "src": {
                      "name": "10,180,24",
                      "type": "10,180,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "toIdx",
                    "type": "Number",
                    "src": {
                      "name": "10,181,24",
                      "type": "10,181,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,177,15"
                }
              },
              {
                "$type": "event",
                "name": "columnresize",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,147,43",
                      "text": "10,147,46,67",
                      "type": "10,147,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,148,40",
                      "text": "10,148,47,65",
                      "type": "10,148,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "width",
                    "type": "Number",
                    "src": {
                      "name": "10,149,24",
                      "type": "10,149,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,146,15"
                }
              },
              {
                "$type": "event",
                "name": "columnschanged",
                "text": "Fired after the columns change in any way, when a column has been hidden or shown, or when a column\nis added to or removed from this header container.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,200,43",
                      "text": "10,200,46,67",
                      "type": "10,200,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,197,15",
                  "text": "10,198,8,151"
                }
              },
              {
                "$type": "event",
                "name": "columnshow",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,192,43",
                      "text": "10,192,46,67",
                      "type": "10,192,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,193,40",
                      "text": "10,193,47,65",
                      "type": "10,193,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,191,15"
                }
              },
              {
                "$type": "event",
                "name": "deactivate",
                "text": "Fires after a Component has been visually deactivated.\n\n**Note** This event is only fired if this Component is a child of a <a href='#!/api/Ext.container.Container'>Ext.container.Container</a>\nthat uses <a href='#!/api/Ext.layout.container.Card'>Ext.layout.container.Card</a> as it's layout or this Component is a floating Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1840,31",
                      "type": "6,1840,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1835,15",
                  "text": "6,1836,8,258"
                }
              },
              {
                "$type": "event",
                "name": "destroy",
                "since": "1.1.0",
                "text": "Fires after the component is <a href='#!/api/Ext.grid.column.Action-method-destroy'>method-destroy</a>ed.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1952,31",
                      "type": "6,1952,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1950,15",
                  "since": "6,1953,15",
                  "text": "6,1951,8,56"
                }
              },
              {
                "$type": "event",
                "name": "disable",
                "since": "1.1.0",
                "text": "Fires after the component is disabled.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1855,31",
                      "type": "6,1855,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1853,15",
                  "since": "6,1856,15",
                  "text": "6,1854,8,39"
                }
              },
              {
                "$type": "event",
                "name": "enable",
                "since": "1.1.0",
                "text": "Fires after the component is enabled.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1862,31",
                      "type": "6,1862,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1860,15",
                  "since": "6,1863,15",
                  "text": "6,1861,8,38"
                }
              },
              {
                "$type": "event",
                "name": "focus",
                "text": "Fires when this Component receives focus.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "11,46,31",
                      "type": "11,46,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The focus event.\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,47,33",
                      "text": "11,47,39,17",
                      "type": "11,47,16"
                    }
                  }
                ],
                "src": {
                  "name": "11,44,15",
                  "text": "11,45,8,42"
                }
              },
              {
                "$type": "event",
                "name": "focusenter",
                "text": "Fires when focus enters this Component's hierarchy.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "11,60,31",
                      "type": "11,60,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The focusenter event.\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,61,33",
                      "text": "11,61,39,22",
                      "type": "11,61,16"
                    }
                  }
                ],
                "src": {
                  "name": "11,58,15",
                  "text": "11,59,8,52"
                }
              },
              {
                "$type": "event",
                "name": "focusleave",
                "text": "Fires when focus leaves this Component's hierarchy.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "11,67,31",
                      "type": "11,67,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The focusleave event.\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,68,33",
                      "text": "11,68,39,22",
                      "type": "11,68,16"
                    }
                  }
                ],
                "src": {
                  "name": "11,65,15",
                  "text": "11,66,8,52"
                }
              },
              {
                "$type": "event",
                "name": "headerclick",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,154,43",
                      "text": "10,154,46,67",
                      "type": "10,154,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,155,40",
                      "text": "10,155,47,65",
                      "type": "10,155,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "e",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "10,156,33",
                      "type": "10,156,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "t",
                    "type": "HTMLElement",
                    "src": {
                      "name": "10,157,29",
                      "type": "10,157,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,153,15"
                }
              },
              {
                "$type": "event",
                "name": "headercontextmenu",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,162,43",
                      "text": "10,162,46,67",
                      "type": "10,162,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,163,40",
                      "text": "10,163,47,65",
                      "type": "10,163,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "e",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "10,164,33",
                      "type": "10,164,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "t",
                    "type": "HTMLElement",
                    "src": {
                      "name": "10,165,29",
                      "type": "10,165,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,161,15"
                }
              },
              {
                "$type": "event",
                "name": "headertriggerclick",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,170,43",
                      "text": "10,170,46,67",
                      "type": "10,170,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,171,40",
                      "text": "10,171,47,65",
                      "type": "10,171,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "e",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "10,172,33",
                      "type": "10,172,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "t",
                    "type": "HTMLElement",
                    "src": {
                      "name": "10,173,29",
                      "type": "10,173,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,169,15"
                }
              },
              {
                "$type": "event",
                "name": "hide",
                "since": "1.1.0",
                "text": "Fires after the component is hidden. Fires after the component is hidden when calling the <a href='#!/api/Ext.Component-method-hide'>Ext.Component#method-hide</a>\nmethod.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1893,31",
                      "type": "6,1893,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1890,15",
                  "since": "6,1894,15",
                  "text": "6,1891,8,137"
                }
              },
              {
                "$type": "event",
                "name": "menucreate",
                "text": "Fired immediately after the column header menu is created.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "This instance\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,213,43",
                      "text": "10,213,46,14",
                      "type": "10,213,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "menu",
                    "text": "The Menu that was created\n",
                    "type": "Ext.menu.Menu",
                    "src": {
                      "name": "10,214,31",
                      "text": "10,214,36,26",
                      "type": "10,214,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,211,15",
                  "text": "10,212,8,59"
                }
              },
              {
                "$type": "event",
                "name": "move",
                "text": "Fires after the component is moved.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1973,31",
                      "type": "6,1973,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The new x position.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1974,24",
                      "text": "6,1974,26,20",
                      "type": "6,1974,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "text": "The new y position.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1975,24",
                      "text": "6,1975,26,20",
                      "type": "6,1975,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1971,15",
                  "text": "6,1972,8,36"
                }
              },
              {
                "$type": "event",
                "name": "remove",
                "since": "2.3.0",
                "text": "Fires after any <a href='#!/api/Ext.Component'>Ext.Component</a> is removed from the container.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "4,734,41",
                      "type": "4,734,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component that was removed\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,735,31",
                      "text": "4,735,41,31",
                      "type": "4,735,16"
                    }
                  }
                ],
                "src": {
                  "name": "4,732,15",
                  "since": "4,736,15",
                  "text": "4,733,8,69"
                }
              },
              {
                "$type": "event",
                "name": "removed",
                "since": "3.4.0",
                "text": "Fires when a component is removed from an Ext.container.Container\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1900,31",
                      "type": "6,1900,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "ownerCt",
                    "text": "Container which holds the component\n",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "6,1901,41",
                      "text": "6,1901,49,36",
                      "type": "6,1901,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1898,15",
                  "since": "6,1902,15",
                  "text": "6,1899,8,66"
                }
              },
              {
                "$type": "event",
                "name": "render",
                "since": "1.1.0",
                "text": "Fires after the component markup is <a href='#!/api/Ext.grid.column.Action-property-rendered'>rendered</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1916,31",
                      "type": "6,1916,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1914,15",
                  "since": "6,1917,15",
                  "text": "6,1915,8,55"
                }
              },
              {
                "$type": "event",
                "name": "resize",
                "text": "Fires after the component is resized. Note that this does *not* fire when the component is first laid out at its initial\nsize. To hook that point in the life cycle, use the <a href='#!/api/Ext.grid.column.Action-event-boxready'>boxready</a> event.\n\nThis event does not fire on components that use <a href='#!/api/Ext.grid.column.Action-cfg-liquidLayout'>cfg-liquidLayout</a>, such as\n<a href='#!/api/Ext.button.Button'>Ext.button.Button</a> and <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1963,31",
                      "type": "6,1963,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "width",
                    "text": "The new width that was set.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1964,24",
                      "text": "6,1964,30,28",
                      "type": "6,1964,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "height",
                    "text": "The new height that was set.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1965,24",
                      "text": "6,1965,31,29",
                      "type": "6,1965,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldWidth",
                    "text": "The previous width.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1966,24",
                      "text": "6,1966,33,20",
                      "type": "6,1966,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldHeight",
                    "text": "The previous height.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,1967,24",
                      "text": "6,1967,34,21",
                      "type": "6,1967,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1957,15",
                  "text": "6,1958,8,361"
                }
              },
              {
                "$type": "event",
                "name": "show",
                "since": "1.1.0",
                "text": "Fires after the component is shown when calling the <a href='#!/api/Ext.Component-method-show'>Ext.Component#method-show</a> method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,1877,31",
                      "type": "6,1877,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1875,15",
                  "since": "6,1878,15",
                  "text": "6,1876,8,99"
                }
              },
              {
                "$type": "event",
                "name": "sortchange",
                "items": [
                  {
                    "$type": "param",
                    "name": "ct",
                    "text": "The grid's header Container which encapsulates all column headers.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,205,43",
                      "text": "10,205,46,67",
                      "type": "10,205,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "column",
                    "text": "The Column header Component which provides the column definition\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,206,40",
                      "text": "10,206,47,65",
                      "type": "10,206,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "direction",
                    "type": "String",
                    "src": {
                      "name": "10,207,24",
                      "type": "10,207,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,204,15"
                }
              },
              {
                "$type": "event",
                "name": "staterestore",
                "text": "Fires after the state of the object is restored.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.state.Stateful",
                    "src": {
                      "name": "16,106,36",
                      "type": "16,106,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The hash of state values returned from the StateProvider. This is passed\nto *<a href='#!/api/Ext.grid.column.Action-method-applyState'>applyState</a>*. By default, that simply copies property values into this\nobject. The method maybe overridden to provide custom state restoration.\n",
                    "type": "Object",
                    "src": {
                      "name": "16,107,24",
                      "text": "16,107,30,73:16,108,8,149",
                      "type": "16,107,16"
                    }
                  }
                ],
                "src": {
                  "name": "16,104,15",
                  "text": "16,105,8,49"
                }
              },
              {
                "$type": "event",
                "name": "statesave",
                "text": "Fires after the state of the object is saved to the configured state provider.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.state.Stateful",
                    "src": {
                      "name": "16,125,36",
                      "type": "16,125,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The hash of state values. This is determined by calling\n*`getState()`* on the object. This method must be provided by the\ndeveloper to return whatever representation of state is required, by default, Ext.state.Stateful\nhas a null implementation.\n",
                    "type": "Object",
                    "src": {
                      "name": "16,126,24",
                      "text": "16,126,30,56:16,127,8,190",
                      "type": "16,126,16"
                    }
                  }
                ],
                "src": {
                  "name": "16,123,15",
                  "text": "16,124,8,79"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "_addDeclaredListeners",
                "text": "Adds declarative listeners as nested arrays of listener objects.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "listeners",
                    "type": "Array",
                    "src": {
                      "name": "13,413,27",
                      "type": "13,413,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if any listeners were added\n",
                    "type": "Boolean",
                    "src": {
                      "text": "13,414,30,35",
                      "type": "13,414,21"
                    }
                  }
                ],
                "src": {
                  "access": "13,412,12",
                  "name": "13,416,0",
                  "text": "13,411,12,65"
                }
              },
              {
                "$type": "method",
                "name": "add",
                "since": "2.3.0",
                "text": "Adds <a href='#!/api/Ext.Component'>Ext.Component</a>(s) to this Container.\n\n## Description:\n\n- Fires the <a href='#!/api/Ext.grid.column.Action-event-beforeadd'>beforeadd</a> event before adding.\n- The Container's <a href='#!/api/Ext.grid.column.Action-cfg-defaults'>defaults</a> will be applied\n  accordingly (see <a href='#!/api/Ext.grid.column.Action-cfg-defaults'>defaults</a> for details).\n- Fires the <a href='#!/api/Ext.grid.column.Action-event-add'>event-add</a> event after the component has been added.\n\n## Notes:\n\nIf the Container is __already rendered__ when `add`\nis called, it will render the newly added Component into its content area.\n\n**If** the Container was configured with a size-managing <a href='#!/api/Ext.grid.column.Action-cfg-layout'>layout</a> manager,\nthe Container will recalculate its internal layout at this time too.\n\nNote that the default layout manager simply renders child Components sequentially\ninto the content area and thereafter performs no sizing.\n\nIf adding multiple new child Components, pass them as an array to the `add` method,\nso that only one layout recalculation is performed.\n\n    tb = new Ext.toolbar.Toolbar({\n        renderTo: document.body\n    });  // toolbar is rendered\n    // add multiple items.\n    // default type for Toolbar is 'button')\n    tb.add([{text:'Button 1'}, {text:'Button 2'}]);\n\nTo inject components between existing ones, use the <a href='#!/api/Ext.grid.column.Action-method-insert'>insert</a> method.\n\n## Warning:\n\nComponents directly managed by the BorderLayout layout manager may not be removed\nor added.  See the Notes for <a href='#!/api/Ext.layout.container.Border'>Ext.layout.container.Border</a> for\nmore details.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "Either one or more Components to add or an Array of Components to add.\nSee <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> for additional information.\n",
                    "type": "Ext.Component[]/Object[]/Ext.Component.../Object...",
                    "src": {
                      "name": "4,797,69",
                      "text": "4,798,8,125",
                      "type": "4,797,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The Components that were added.\n",
                    "type": "Ext.Component[]/Ext.Component",
                    "src": {
                      "text": "4,801,48,32",
                      "type": "4,801,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,805,0",
                  "since": "4,803,15",
                  "text": "4,759,8,1393"
                }
              },
              {
                "$type": "method",
                "name": "addAfterListener",
                "text": "Alias for <a href='#!/api/Ext.grid.column.Action-method-onAfter'>onAfter</a>.\n",
                "src": {
                  "name": "13,1236,0",
                  "text": "13,1234,12,28"
                }
              },
              {
                "$type": "method",
                "name": "addBeforeListener",
                "text": "Alias for <a href='#!/api/Ext.grid.column.Action-method-onBefore'>onBefore</a>.\n",
                "src": {
                  "name": "13,1230,0",
                  "text": "13,1228,12,29"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "addBindableUpdater",
                "since": "5.0.0",
                "text": "Ensures that the given property (if it is a Config System config) has a proper\n\"updater\" method on this instance to sync changes to the config.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "property",
                    "text": "The name of the config property.\n",
                    "type": "String",
                    "src": {
                      "name": "9,504,28",
                      "text": "9,504,37,33",
                      "type": "9,504,20"
                    }
                  }
                ],
                "src": {
                  "access": "9,505,12",
                  "name": "9,508,0",
                  "since": "9,506,19",
                  "text": "9,502,12,144"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "addChildEl",
                "since": "6.0.0",
                "text": "Add a childEl specific to this instance. This must be called before render.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "childEl",
                    "src": {
                      "name": "17,231,19"
                    }
                  }
                ],
                "src": {
                  "access": "17,232,12",
                  "name": "17,235,0",
                  "since": "17,233,19",
                  "text": "17,230,12,76"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-addCls'>addCls</a> instead.\n",
                "deprecatedVersion": "4.1",
                "inheritdoc": "Ext.Component#addCls",
                "name": "addClass",
                "since": "2.3.0",
                "src": {
                  "deprecatedMessage": "6,6607,20",
                  "deprecatedVersion": "6,6607,20",
                  "inheritdoc": "6,6606,20",
                  "name": "6,6605,28",
                  "since": "6,6608,27"
                }
              },
              {
                "$type": "method",
                "name": "addCls",
                "text": "Adds a CSS class to the top level element representing this component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cls",
                    "text": "The CSS class name to add.\n",
                    "type": "String/String[]",
                    "src": {
                      "name": "6,2161,33",
                      "text": "6,2161,37,27",
                      "type": "6,2161,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Returns the Component to allow method chaining.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,2162,32,48",
                      "type": "6,2162,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,2164,0",
                  "text": "6,2160,8,71"
                }
              },
              {
                "$type": "method",
                "name": "addClsWithUI",
                "text": "Adds a <a href='#!/api/Ext.grid.column.Action-cfg-cls'>cls</a> to the <a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a> array, which will also call <a href='#!/api/Ext.grid.column.Action-method-addUIClsToElement'>addUIClsToElement</a> and adds to all elements of this\ncomponent.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "classes",
                    "text": "A string or an array of strings to add to the <a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a>.\n",
                    "type": "String/String[]",
                    "src": {
                      "name": "6,2175,33",
                      "text": "6,2175,41,55",
                      "type": "6,2175,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "skip",
                    "optional": true,
                    "text": "`true` to skip adding it to the class and do it later (via the return).\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,2176,26",
                      "text": "6,2176,32,72",
                      "type": "6,2176,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,2178,0",
                  "text": "6,2173,8,127"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "addDelegatedListener",
                "text": "Adds a listeners with the \"delegate\" event option.  Users should not invoke this\nmethod directly.  Use the \"delegate\" event option of\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> instead.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "src": {
                      "name": "18,19,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "src": {
                      "name": "18,19,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "src": {
                      "name": "18,19,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "src": {
                      "name": "18,19,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "order",
                    "src": {
                      "name": "18,19,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "caller",
                    "src": {
                      "name": "18,19,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "manager",
                    "src": {
                      "name": "18,19,0"
                    }
                  }
                ],
                "src": {
                  "access": "18,14,12",
                  "name": "18,19,0",
                  "text": "18,15,12,195"
                }
              },
              {
                "$type": "method",
                "name": "addListener",
                "text": "The <a href='#!/api/Ext.grid.column.Action-method-on'>on</a> method is shorthand for\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a>.\n\nAppends an event handler to this object.  For example:\n\n    myGridPanel.on(\"itemclick\", this.onItemClick, this);\n\nThe method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:\n\n    myGridPanel.on({\n        cellclick: this.onCellClick,\n        select: this.onSelect,\n        viewready: this.onViewReady,\n        scope: this // Important. Ensure \"this\" is correct during handler execution\n    });\n\nOne can also specify options for each event handler separately:\n\n    myGridPanel.on({\n        cellclick: {fn: this.onCellClick, scope: this, single: true},\n        viewready: {fn: panel.onViewReady, scope: panel}\n    });\n\n*Names* of methods in a specified scope may also be used:\n\n    myGridPanel.on({\n        cellclick: {fn: 'onCellClick', scope: this, single: true},\n        viewready: {fn: 'onViewReady', scope: panel}\n    });\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to listen for.\nMay also be an object who's property names are event names.\n",
                    "type": "String/Object",
                    "src": {
                      "name": "13,835,35",
                      "text": "13,835,45,37:13,836,12,61",
                      "type": "13,835,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "optional": true,
                    "text": "The method the event invokes or the *name* of\nthe method within the specified <a href='#!/api/Ext.grid.column.Action-cfg-scope'>scope</a>.  Will be called with arguments\ngiven to <a href='#!/api/Ext.util.Observable-method-fireEvent'>Ext.util.Observable#fireEvent</a> plus the `options` parameter described\nbelow.\n",
                    "type": "Function/String",
                    "src": {
                      "name": "13,838,38",
                      "text": "13,838,42,46:13,839,12,166",
                      "type": "13,838,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope (`this` reference) in which the handler function is\nexecuted. **If omitted, defaults to the object which fired the event.**\n",
                    "type": "Object",
                    "src": {
                      "name": "13,843,29",
                      "text": "13,843,36,62:13,844,12,73",
                      "type": "13,843,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "An object containing handler configuration.\n\n**Note:** The options object will also be passed as the last argument to every\nevent handler.\n\nThis object may contain any of the following properties:\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "scope",
                        "text": "  The scope (`this` reference) in which the handler function is executed. **If omitted,\n  defaults to the object which fired the event.**\n",
                        "type": "Object",
                        "src": {
                          "name": "13,853,36",
                          "text": "13,854,12,139",
                          "type": "13,853,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "delay",
                        "text": "  The number of milliseconds to delay the invocation of the handler after the event\n  fires.\n",
                        "type": "Number",
                        "src": {
                          "name": "13,857,36",
                          "text": "13,858,12,94",
                          "type": "13,857,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "single",
                        "text": "  True to add a handler to handle just the next firing of the event, and then remove\n  itself.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "13,861,37",
                          "text": "13,862,12,96",
                          "type": "13,861,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "buffer",
                        "text": "  Causes the handler to be scheduled to run in an <a href='#!/api/Ext.util.DelayedTask'>Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is _not_ invoked, but the new handler is scheduled in its place.\n",
                        "type": "Number",
                        "src": {
                          "name": "13,865,36",
                          "text": "13,866,12,262",
                          "type": "13,865,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "onFrame",
                        "text": "  Causes the handler to be scheduled to run at the next\n  <a href='#!/api/Ext.Function-method-requestAnimationFrame'>Ext.Function#requestAnimationFrame</a>. If the\n  event fires again before that time, the handler is not rescheduled - the handler\n  will only be called once when the next animation frame is fired, with the last set\n  of arguments passed.\n",
                        "type": "Number",
                        "src": {
                          "name": "13,870,36",
                          "text": "13,871,12,323",
                          "type": "13,870,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "target",
                        "text": "  Only call the handler if the event was fired on the target Observable, _not_ if the\n  event was bubbled up from a child Observable.\n",
                        "type": "Ext.util.Observable",
                        "src": {
                          "name": "13,877,49",
                          "text": "13,878,12,135",
                          "type": "13,877,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "element",
                        "text": "  **This option is only valid for listeners bound to <a href='#!/api/Ext.Component'>Ext.Component</a>.**\n  The name of a Component property which references an <a href='#!/api/Ext.dom.Element'>Ext.dom.Element</a>\n  to add a listener to.\n\n  This option is useful during Component construction to add DOM event listeners to\n  elements of <a href='#!/api/Ext.Component'>Ext.Component</a> which will exist only after the\n  Component is rendered.\n\n  For example, to add a click listener to a Panel's body:\n\n      var panel = new Ext.panel.Panel({\n          title: 'The title',\n          listeners: {\n              click: this.handlePanelClick,\n              element: 'body'\n          }\n      });\n\nIn order to remove listeners attached using the element, you'll need to reference\nthe element itself as seen below.\n\n     panel.body.un(...)\n",
                        "type": "String",
                        "src": {
                          "name": "13,881,36",
                          "text": "13,882,12,781",
                          "type": "13,881,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "delegate",
                        "optional": true,
                        "text": "  A simple selector to filter the event target or look for a descendant of the target.\n\n  The \"delegate\" option is only available on Ext.dom.Element instances (or\n  when attaching a listener to a Ext.dom.Element via a Component using the\n  element option).\n\n  See the *delegate* example below.\n",
                        "type": "String",
                        "src": {
                          "name": "13,905,37",
                          "text": "13,906,12,295",
                          "type": "13,905,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "stopPropagation",
                        "optional": true,
                        "text": "  **This option is only valid for listeners bound to <a href='#!/api/Ext.dom.Element'>Ext.dom.Element</a>.**\n  `true` to call <a href='#!/api/Ext.event.Event-method-stopPropagation'>Ext.event.Event#stopPropagation</a> on the event object\n  before firing the handler.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "13,914,38",
                          "text": "13,915,12,212",
                          "type": "13,914,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "preventDefault",
                        "optional": true,
                        "text": "  **This option is only valid for listeners bound to <a href='#!/api/Ext.dom.Element'>Ext.dom.Element</a>.**\n  `true` to call <a href='#!/api/Ext.event.Event-method-preventDefault'>Ext.event.Event#preventDefault</a> on the event object\n  before firing the handler.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "13,919,38",
                          "text": "13,920,12,210",
                          "type": "13,919,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "stopEvent",
                        "optional": true,
                        "text": "  **This option is only valid for listeners bound to <a href='#!/api/Ext.dom.Element'>Ext.dom.Element</a>.**\n  `true` to call <a href='#!/api/Ext.event.Event-method-stopEvent'>Ext.event.Event#stopEvent</a> on the event object\n  before firing the handler.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "13,924,38",
                          "text": "13,925,12,200",
                          "type": "13,924,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "args",
                        "optional": true,
                        "text": "  Optional arguments to pass to the handler function. Any additional arguments\n  passed to <a href='#!/api/Ext.util.Observable-method-fireEvent'>Ext.util.Observable#fireEvent</a> will be appended\n  to these arguments.\n",
                        "type": "Array",
                        "src": {
                          "name": "13,929,36",
                          "text": "13,930,12,179",
                          "type": "13,929,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "destroyable",
                        "optional": true,
                        "text": "  When specified as `true`, the function returns a `destroyable` object. An object\n  which implements the `destroy` method which removes all listeners added in this call.\n  This syntax can be a helpful shortcut to using <a href='#!/api/Ext.grid.column.Action-method-un'>un</a>; particularly when\n  removing multiple listeners.  *NOTE* - not compatible when using the _element_\n  option.  See <a href='#!/api/Ext.grid.column.Action-method-un'>un</a> for the proper syntax for removing listeners added using the\n  _element_ config.\n",
                        "type": "Boolean",
                        "value": "false",
                        "src": {
                          "name": "13,934,38",
                          "text": "13,935,12,441",
                          "type": "13,934,20",
                          "value": "13,934,50"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "priority",
                        "optional": true,
                        "text": "  An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handlers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.\n  A priority must be an integer to be valid.  Fractional values are reserved for\n  internal framework use.\n",
                        "type": "Number",
                        "src": {
                          "name": "13,942,37",
                          "text": "13,943,12,737",
                          "type": "13,942,20"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "order",
                        "optional": true,
                        "text": "  A legacy option that is provided for backward compatibility.\n  It is recommended to use the `priority` option instead.  Available options are:\n\n  - `'before'`: equal to a priority of `100`\n  - `'current'`: equal to a priority of `0` or default priority\n  - `'after'`: equal to a priority of `-100`\n",
                        "type": "String",
                        "value": "'current'",
                        "src": {
                          "name": "13,954,37",
                          "text": "13,955,12,301",
                          "type": "13,954,20",
                          "value": "13,954,43"
                        }
                      }
                    ],
                    "src": {
                      "name": "13,846,29",
                      "text": "13,846,38,44:13,847,12,154",
                      "type": "13,846,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "order",
                    "optional": true,
                    "text": "  A shortcut for the `order` event option.  Provided for backward compatibility.\n  Please use the `priority` event option instead.\n\n**Combining Options**\n\nUsing the options argument, it is possible to combine different types of listeners:\n\nA delayed, one-time listener.\n\n    myPanel.on('hide', this.handleClick, this, {\n        single: true,\n        delay: 100\n    });\n\n**Attaching multiple handlers in 1 call**\n\nThe method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple handlers and handler configs.\n\n    grid.on({\n        itemclick: 'onItemClick',\n        itemcontextmenu: grid.onItemContextmenu,\n        destroy: {\n            fn: function () {\n                // function called within the 'altCmp' scope instead of grid\n            },\n            scope: altCmp // unique scope for the destroy handler\n        },\n        scope: grid       // default scope - provided for example clarity\n    });\n\n**Delegate**\n\nThis is a configuration option that you can pass along when registering a handler for\nan event to assist with event delegation. By setting this configuration option\nto a simple selector, the target element will be filtered to look for a\ndescendant of the target. For example:\n\n    var panel = Ext.create({\n        xtype: 'panel',\n        renderTo: document.body,\n        title: 'Delegate Handler Example',\n        frame: true,\n        height: 220,\n        width: 220,\n        html: '<h1 class=\"myTitle\">BODY TITLE</h1>Body content'\n    });\n\n    // The click handler will only be called when the click occurs on the\n    // delegate: h1.myTitle (\"h1\" tag with class \"myTitle\")\n    panel.on({\n        click: function (e) {\n            console.log(e.getTarget().innerHTML);\n        },\n        element: 'body',\n        delegate: 'h1.myTitle'\n     });\n",
                    "type": "String",
                    "value": "'current'",
                    "src": {
                      "name": "13,962,29",
                      "text": "13,963,12,1831",
                      "type": "13,962,20",
                      "value": "13,962,35"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "**Only when the `destroyable` option is specified. **\n\n A `Destroyable` object. An object which implements the `destroy` method which removes\n all listeners added in this call. For example:\n\n    this.btnListeners =  = myButton.on({\n        destroyable: true\n        mouseover:   function() { console.log('mouseover'); },\n        mouseout:    function() { console.log('mouseout'); },\n        click:       function() { console.log('click'); }\n    });\n\nAnd when those listeners need to be removed:\n\n    Ext.destroy(this.btnListeners);\n\nor\n\n    this.btnListeners.destroy();\n",
                    "type": "Object",
                    "src": {
                      "text": "13,1021,29,54:13,1022,12,516",
                      "type": "13,1021,21"
                    }
                  }
                ],
                "src": {
                  "name": "13,1041,0",
                  "text": "13,804,12,1008"
                }
              },
              {
                "$type": "method",
                "name": "addManagedListener",
                "text": "The addManagedListener method is used when some object (call it \"A\") is listening\nto an event on another observable object (\"B\") and you want to remove that listener\nfrom \"B\" when \"A\" is destroyed. This is not an issue when \"B\" is destroyed because\nall of its listeners will be removed at that time.\n\nExample:\n\n    Ext.define('Foo', {\n        extend: 'Ext.Component',\n\n        initComponent: function () {\n            this.addManagedListener(MyApp.SomeGlobalSharedMenu, 'show', this.doSomething);\n            this.callParent();\n        }\n    });\n\nAs you can see, when an instance of Foo is destroyed, it ensures that the 'show'\nlistener on the menu (`MyApp.SomeGlobalSharedMenu`) is also removed.\n\nAs of version 5.1 it is no longer necessary to use this method in most cases because\nlisteners are automatically managed if the scope object provided to\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> is an Observable instance.\nHowever, if the observable instance and scope are not the same object you\nstill need to use <a href='#!/api/Ext.grid.column.Action-method-mon'>mon</a> or <a href='#!/api/Ext.grid.column.Action-method-addManagedListener'>addManagedListener</a> if you want the listener to be\nmanaged.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "text": "The item to which to add a listener/listeners.\n",
                    "type": "Ext.util.Observable/Ext.dom.Element",
                    "src": {
                      "name": "13,456,56",
                      "text": "13,456,61,47",
                      "type": "13,456,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "ename",
                    "text": "The event name, or an object containing event name properties.\n",
                    "type": "Object/String",
                    "src": {
                      "name": "13,457,34",
                      "text": "13,457,40,63",
                      "type": "13,457,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "(optional) If the `ename` parameter was an event\nname, this is the handler function or the name of a method on the specified\n<a href='#!/api/Ext.grid.column.Action-cfg-scope'>scope</a>.\n",
                    "type": "Function/String",
                    "src": {
                      "name": "13,458,36",
                      "text": "13,458,39,49:13,459,11,85",
                      "type": "13,458,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "(optional) If the `ename` parameter was an event name, this is the scope (`this` reference)\nin which the handler function is executed.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,461,27",
                      "text": "13,461,33,92:13,462,11,43",
                      "type": "13,461,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "text": "(optional) If the `ename` parameter was an event name, this is the\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> options.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,463,27",
                      "text": "13,463,35,67:13,464,11,61",
                      "type": "13,463,19"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "**Only when the `destroyable` option is specified. **\n\n A `Destroyable` object. An object which implements the `destroy` method which removes all listeners added in this call. For example:\n\n    this.btnListeners = myButton.mon({\n        destroyable: true\n        mouseover:   function() { console.log('mouseover'); },\n        mouseout:    function() { console.log('mouseout'); },\n        click:       function() { console.log('click'); }\n    });\n\nAnd when those listeners need to be removed:\n\n    Ext.destroy(this.btnListeners);\n\nor\n\n    this.btnListeners.destroy();\n",
                    "type": "Object",
                    "src": {
                      "text": "13,465,28,54:13,466,11,513",
                      "type": "13,465,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,484,0",
                  "text": "13,430,11,1093"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "addPlugin",
                "text": "Adds a plugin. May be called at any time in the component's life cycle.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "plugin",
                    "src": {
                      "name": "6,2267,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,2264,8",
                  "name": "6,2267,0",
                  "text": "6,2265,8,72"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "addPropertyToState",
                "text": "Save a property to the given state object if it is not its default or configured\nvalue.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The state object.\n",
                    "type": "Object",
                    "src": {
                      "name": "6,2286,24",
                      "text": "6,2286,30,18",
                      "type": "6,2286,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "propName",
                    "text": "The name of the property on this object to save.\n",
                    "type": "String",
                    "src": {
                      "name": "6,2287,24",
                      "text": "6,2287,33,49",
                      "type": "6,2287,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "value",
                    "optional": true,
                    "text": "The value of the state property (defaults to `this[propName]`).\n",
                    "type": "String",
                    "src": {
                      "name": "6,2288,25",
                      "text": "6,2288,32,64",
                      "type": "6,2288,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The state object or a new object if state was <a href='#!/api/null'>null</a> and the property\nwas saved.\n",
                    "type": "Object",
                    "src": {
                      "text": "6,2289,25,70:6,2290,8,11",
                      "type": "6,2289,17"
                    }
                  }
                ],
                "src": {
                  "access": "6,2291,8",
                  "name": "6,2293,0",
                  "text": "6,2283,8,89"
                }
              },
              {
                "$type": "method",
                "name": "addStateEvents",
                "text": "Add events that will trigger the state to be saved. If the first argument is an\narray, each element of that array is the name of a state event. Otherwise, each\nargument passed to this method is the name of a state event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "events",
                    "text": "The event name or an array of event names.\n",
                    "type": "String/String[]",
                    "src": {
                      "name": "16,150,33",
                      "text": "16,150,40,43",
                      "type": "16,150,16"
                    }
                  }
                ],
                "src": {
                  "name": "16,152,0",
                  "text": "16,146,8,222"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "addUIClsToElement",
                "text": "Method which adds a specified UI + <a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a> to the components element. Can be overridden\nto add the UI to more than just the component's element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "uiCls",
                    "text": "The UI class to add to the element.\n",
                    "type": "String",
                    "src": {
                      "name": "6,2317,24",
                      "text": "6,2317,30,36",
                      "type": "6,2317,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,2318,8",
                  "name": "6,2320,0",
                  "text": "6,2315,8,145"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "addUIToElement",
                "text": "Method which adds a specified UI to the components element.\n",
                "src": {
                  "access": "6,5801,12",
                  "name": "6,5803,0",
                  "text": "6,5800,12,60"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "adjustForConstraints",
                "items": [
                  {
                    "$type": "param",
                    "name": "xy",
                    "src": {
                      "name": "19,175,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "parent",
                    "src": {
                      "name": "19,175,0"
                    }
                  }
                ],
                "src": {
                  "access": "19,173,8",
                  "name": "19,175,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "adjustPosition",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "src": {
                      "name": "6,2379,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "src": {
                      "name": "6,2379,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,2377,8",
                  "name": "6,2379,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "afterClassMixedIn",
                "text": "Called after the mixin is applied. We need to see if <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>childEls</a> were used by\nthe `targetClass` and apply them to the config.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "targetClass",
                    "type": "Ext.Class",
                    "src": {
                      "name": "17,253,31",
                      "type": "17,253,20"
                    }
                  }
                ],
                "src": {
                  "access": "17,254,12",
                  "name": "17,256,0",
                  "text": "17,251,12,125"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "afterComponentLayout",
                "template": true,
                "text": "Called by the layout system after the Component has been laid out.\n\nThis method is not called on components that use <a href='#!/api/Ext.grid.column.Action-cfg-liquidLayout'>liquidLayout</a>, such as\n<a href='#!/api/Ext.button.Button'>Ext.button.Button</a> and <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "width",
                    "text": "The width that was set\n",
                    "type": "Number",
                    "src": {
                      "name": "6,2219,24",
                      "text": "6,2219,30,23",
                      "type": "6,2219,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "height",
                    "text": "The height that was set\n",
                    "type": "Number",
                    "src": {
                      "name": "6,2220,24",
                      "text": "6,2220,31,24",
                      "type": "6,2220,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldWidth",
                    "text": "The old width, or <a href='#!/api/undefined'>undefined</a> if this was the initial layout.\n",
                    "type": "Number/undefined",
                    "src": {
                      "name": "6,2221,34",
                      "text": "6,2221,43,62",
                      "type": "6,2221,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldHeight",
                    "text": "The old height, or <a href='#!/api/undefined'>undefined</a> if this was the initial layout.\n",
                    "type": "Number/undefined",
                    "src": {
                      "name": "6,2222,34",
                      "text": "6,2222,44,63",
                      "type": "6,2222,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,2225,8",
                  "name": "6,2227,0",
                  "template": "6,2224,8",
                  "text": "6,2214,8,228"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "afterHide",
                "template": true,
                "text": "Invoked after the Component has been hidden.\n\nGets passed the same `callback` and <a href='#!/api/Ext.grid.column.Action-cfg-scope'>scope</a> parameters that #onHide received.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "type": "Function",
                    "src": {
                      "name": "6,2401,27",
                      "type": "6,2401,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "type": "Object",
                    "src": {
                      "name": "6,2402,25",
                      "type": "6,2402,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,2404,8",
                  "name": "6,2406,0",
                  "template": "6,2403,8",
                  "text": "6,2397,8,125"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "afterLayout",
                "template": true,
                "text": "Invoked after the Container has laid out (and rendered if necessary)\nits child Components.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "layout",
                    "type": "Ext.layout.container.Container",
                    "src": {
                      "name": "4,921,48",
                      "type": "4,921,16"
                    }
                  }
                ],
                "src": {
                  "access": "4,924,8",
                  "name": "4,926,0",
                  "template": "4,923,8",
                  "text": "4,918,8,92"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "afterRender",
                "template": true,
                "text": "Allows additional behavior after rendering is complete. At this stage, the\n<a href='#!/api/Ext.Component'>Ext.Component</a> <a href='#!/api/Ext.Component-method-getEl'>Ext.Component#getEl</a> will have\nbeen styled according to the configuration, will have had any configured CSS\nclass names added, and will be in the configured visibility and configured enable\nstate.\n\n**Note:** If the Component has a <a href='#!/api/Ext.Component-cfg-controller'>Ext.Component#controller</a>\nand the controller has an <a href='#!/api/Ext.app.ViewController-method-afterRender'>Ext.app.ViewController#afterRender</a>\nmethod it will be called passing the Component as the single param.\n",
                "src": {
                  "access": "20,279,8",
                  "name": "20,281,0",
                  "template": "20,278,8",
                  "text": "20,268,8,553"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "afterSetPosition",
                "template": true,
                "text": "Template method called after a Component has been positioned.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "type": "Number",
                    "src": {
                      "name": "6,2430,24",
                      "type": "6,2430,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "type": "Number",
                    "src": {
                      "name": "6,2431,24",
                      "type": "6,2431,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,2434,8",
                  "name": "6,2436,0",
                  "template": "6,2433,8",
                  "text": "6,2428,8,63"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "afterShow",
                "template": true,
                "text": "Invoked after the Component is shown (after #onShow is called).\n\nGets passed the same parameters as #show.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "animateTarget",
                    "optional": true,
                    "type": "String/Ext.dom.Element",
                    "src": {
                      "name": "6,2449,41",
                      "type": "6,2449,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "type": "Function",
                    "src": {
                      "name": "6,2450,27",
                      "type": "6,2450,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "type": "Object",
                    "src": {
                      "name": "6,2451,25",
                      "type": "6,2451,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,2453,8",
                  "name": "6,2455,0",
                  "template": "6,2452,8",
                  "text": "6,2445,8,108"
                }
              },
              {
                "$type": "method",
                "name": "alignTo",
                "text": "Aligns the element with another element relative to the specified anchor points. If\nthe other element is the document it aligns it to the viewport. The position\nparameter is optional, and can be specified in any one of the following formats:\n\n- **Blank**: Defaults to aligning the element's top-left corner to the target's\n  bottom-left corner (\"tl-bl\").\n- **One anchor (deprecated)**: The passed anchor position is used as the target\n  element's anchor point.  The element being aligned will position its top-left\n  corner (tl) to that point. *This method has been deprecated in favor of the newer\n  two anchor syntax below*.\n- **Two anchors**: If two values from the table below are passed separated by a dash,\n  the first value is used as the element's anchor point, and the second value is\n  used as the target's anchor point.\n\nIn addition to the anchor points, the position parameter also supports the \"?\"\ncharacter. If \"?\" is passed at the end of the position string, the element will\nattempt to align as specified, but the position will be adjusted to constrain to\nthe viewport if necessary. Note that the element being aligned might be swapped to\nalign to a different position than that specified in order to enforce the viewport\nconstraints. Following are all of the supported anchor positions:\n\n<pre>\nValue  Description\n-----  -----------------------------\ntl     The top left corner (default)\nt      The center of the top edge\ntr     The top right corner\nl      The center of the left edge\nc      In the center of the element\nr      The center of the right edge\nbl     The bottom left corner\nb      The center of the bottom edge\nbr     The bottom right corner\n</pre>\n\nExample Usage:\n\n    // align el to other-el using the default positioning\n    // (\"tl-bl\", non-constrained)\n    el.alignTo(\"other-el\");\n\n    // align the top left corner of el with the top right corner of other-el\n    // (constrained to viewport)\n    el.alignTo(\"other-el\", \"tr?\");\n\n    // align the bottom right corner of el with the center left edge of other-el\n    el.alignTo(\"other-el\", \"br-l?\");\n\n    // align the center of el with the bottom left corner of other-el and\n    // adjust the x position by -6 pixels (and the y position by 0)\n    el.alignTo(\"other-el\", \"c-bl\", [-6, 0]);\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "element",
                    "text": "The Positionable,\nHTMLElement, or id of the element to align to.\n",
                    "type": "Ext.util.Positionable/HTMLElement/String",
                    "src": {
                      "name": "19,237,58",
                      "text": "19,237,66,18:19,238,8,47",
                      "type": "19,237,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "position",
                    "optional": true,
                    "text": "The position to align to\n",
                    "type": "String",
                    "value": "\"tl-bl?\"",
                    "src": {
                      "name": "19,239,25",
                      "text": "19,239,44,25",
                      "type": "19,239,16",
                      "value": "19,239,34"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "offsets",
                    "optional": true,
                    "text": "Offset the positioning by [x, y]\nElement animation config object\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,240,27",
                      "text": "19,240,36,33:19,241,8,32",
                      "type": "19,240,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,242,40,5",
                      "type": "19,242,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,244,0",
                  "text": "19,185,8,2269"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "anim",
                "text": "Process the passed fx configuration.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "src": {
                      "name": "21,288,0"
                    }
                  }
                ],
                "src": {
                  "access": "21,285,8",
                  "name": "21,288,0",
                  "text": "21,286,8,37"
                }
              },
              {
                "$type": "method",
                "name": "animate",
                "text": "Performs custom animation on this object.\n\nThis method is applicable to both the <a href='#!/api/Ext.Component'>Ext.Component</a> class and the <a href='#!/api/Ext.draw.sprite.Sprite'>Ext.draw.sprite.Sprite</a>\nclass. It performs animated transitions of certain properties of this object over a specified timeline.\n\n### Animating a <a href='#!/api/Ext.Component'>Ext.Component</a>\n\nWhen animating a Component, the following properties may be specified in `from`, `to`, and `keyframe` objects:\n\n  - `x` - The Component's page X position in pixels.\n\n  - `y` - The Component's page Y position in pixels\n\n  - `left` - The Component's `left` value in pixels.\n\n  - `top` - The Component's `top` value in pixels.\n\n  - <a href='#!/api/Ext.grid.column.Action-cfg-width'>width</a> - The Component's <a href='#!/api/Ext.grid.column.Action-cfg-width'>width</a> value in pixels.\n\n  - <a href='#!/api/Ext.grid.column.Action-cfg-height'>height</a> - The Component's <a href='#!/api/Ext.grid.column.Action-cfg-height'>height</a> value in pixels.\n\nThe following property may be set on the animation config root:\n\n  - `dynamic` - Specify as true to update the Component's layout (if it is a Container) at every frame of the animation.\n    *Use sparingly as laying out on every intermediate size change is an expensive operation.*\n\nFor example, to animate a Window to a new size, ensuring that its internal layout and any shadow is correct:\n\n    myWindow = Ext.create('Ext.window.Window', {\n        title: 'Test Component animation',\n        width: 500,\n        height: 300,\n        layout: {\n            type: 'hbox',\n            align: 'stretch'\n        },\n        items: [{\n            title: 'Left: 33%',\n            margin: '5 0 5 5',\n            flex: 1\n        }, {\n            title: 'Left: 66%',\n            margin: '5 5 5 5',\n            flex: 2\n        }]\n    });\n    myWindow.show();\n    myWindow.header.el.on('click', function() {\n        myWindow.animate({\n            to: {\n                width: (myWindow.getWidth() == 500) ? 700 : 500,\n                height: (myWindow.getHeight() == 300) ? 400 : 300\n            }\n        });\n    });\n\nFor performance reasons, by default, the internal layout is only updated when the Window reaches its final `\"to\"`\nsize. If dynamic updating of the Window's child Components is required, then configure the animation with\n`dynamic: true` and the two child items will maintain their proportions during the animation.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "text": "Configuration for <a href='#!/api/Ext.fx.Anim'>Ext.fx.Anim</a>.\nNote that the <a href='#!/api/Ext.fx.Anim-cfg-to'>Ext.fx.Anim#to</a> config is required.\n",
                    "type": "Object",
                    "src": {
                      "name": "21,271,24",
                      "text": "21,271,31,39:21,272,8,60",
                      "type": "21,271,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Object",
                    "src": {
                      "text": "21,273,25,5",
                      "type": "21,273,17"
                    }
                  }
                ],
                "src": {
                  "name": "21,275,0",
                  "text": "21,211,8,2178"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "applyBind",
                "since": "5.0.0",
                "items": [
                  {
                    "$type": "param",
                    "name": "binds",
                    "type": "String/Object",
                    "src": {
                      "name": "9,523,35",
                      "type": "9,523,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "currentBindings",
                    "type": "Object",
                    "src": {
                      "name": "9,524,28",
                      "type": "9,524,20"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "9,525,21"
                    }
                  }
                ],
                "src": {
                  "access": "9,526,12",
                  "name": "9,529,0",
                  "since": "9,527,19"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "applyDefaults",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "src": {
                      "name": "4,1816,0"
                    }
                  }
                ],
                "src": {
                  "access": "4,1814,12",
                  "name": "4,1816,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "applyRenderSelectors",
                "text": "Sets references to elements inside the component. This applies <a href='#!/api/Ext.Component-cfg-renderSelectors'>Ext.Component#cfg-renderSelectors</a>\nas well as <a href='#!/api/Ext.Component-cfg-childEls'>Ext.Component#cfg-childEls</a>.\n",
                "src": {
                  "access": "20,865,12",
                  "name": "20,867,0",
                  "text": "20,863,12,177"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "applySession",
                "since": "5.0.0",
                "text": "Transforms a Session config to a proper instance.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "session",
                    "type": "Object",
                    "src": {
                      "name": "9,626,28",
                      "type": "9,626,20"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.data.Session",
                    "src": {
                      "type": "9,627,21"
                    }
                  }
                ],
                "src": {
                  "access": "9,628,12",
                  "name": "9,631,0",
                  "since": "9,629,19",
                  "text": "9,625,12,50"
                }
              },
              {
                "$type": "method",
                "name": "applyState",
                "text": "Applies the state to the object. This should be overridden in subclasses to do\nmore complex state operations. By default it applies the state properties onto\nthe current object.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The state\n",
                    "type": "Object",
                    "src": {
                      "name": "16,258,24",
                      "text": "16,258,30,10",
                      "type": "16,258,16"
                    }
                  }
                ],
                "src": {
                  "name": "16,260,0",
                  "text": "16,255,8,178"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "applyViewModel",
                "since": "5.0.0",
                "text": "Transforms a ViewModel config to a proper instance.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "viewModel",
                    "type": "String/Object/Ext.app.ViewModel",
                    "src": {
                      "name": "9,654,53",
                      "type": "9,654,20"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.app.ViewModel",
                    "src": {
                      "type": "9,655,21"
                    }
                  }
                ],
                "src": {
                  "access": "9,656,12",
                  "name": "9,659,0",
                  "since": "9,657,19",
                  "text": "9,653,12,52"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "attachChildEls",
                "text": "Sets references to elements inside the component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "src": {
                      "name": "17,274,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "owner",
                    "src": {
                      "name": "17,274,0"
                    }
                  }
                ],
                "src": {
                  "access": "17,272,12",
                  "name": "17,274,0",
                  "text": "17,271,12,50"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "attachReference",
                "text": "Sets up a component reference.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component to reference.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "15,92,35",
                      "text": "15,92,45,28",
                      "type": "15,92,20"
                    }
                  }
                ],
                "src": {
                  "access": "15,93,12",
                  "name": "15,95,0",
                  "text": "15,91,12,31"
                }
              },
              {
                "$type": "method",
                "name": "autoSize",
                "text": "Sizes this Column to fit the max content width.\n*Note that group columns shrink-wrap around the size of leaf columns. Auto sizing\na group column auto-sizes descendant leaf columns.*\n",
                "src": {
                  "name": "5,1286,0",
                  "text": "5,1282,8,182"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "beforeBlur",
                "text": "Template method to do any pre-blur processing.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "text": "The event object\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,310,33",
                      "text": "11,310,35,17",
                      "type": "11,310,16"
                    }
                  }
                ],
                "src": {
                  "access": "11,309,8",
                  "name": "11,312,0",
                  "text": "11,308,8,47"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "beforeComponentLayout",
                "template": true,
                "text": "Occurs before <a href='#!/api/Ext.grid.column.Action-cfg-componentLayout'>componentLayout</a> is run. Returning `false` from this method will prevent the <a href='#!/api/Ext.grid.column.Action-cfg-componentLayout'>componentLayout</a> from\nbeing executed.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "adjWidth",
                    "text": "The box-adjusted width that was set.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,2699,24",
                      "text": "6,2699,33,37",
                      "type": "6,2699,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "adjHeight",
                    "text": "The box-adjusted height that was set.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,2700,24",
                      "text": "6,2700,34,38",
                      "type": "6,2700,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,2703,8",
                  "name": "6,2705,0",
                  "template": "6,2702,8",
                  "text": "6,2696,8,132"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "beforeDestroy",
                "template": true,
                "text": "Invoked before the Component is destroyed.\n",
                "src": {
                  "access": "6,2714,8",
                  "name": "6,2716,0",
                  "template": "6,2713,8",
                  "text": "6,2710,8,44"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "beforeFocus",
                "text": "Template method to do any pre-focus processing.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "text": "The event object\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,361,33",
                      "text": "11,361,35,17",
                      "type": "11,361,16"
                    }
                  }
                ],
                "src": {
                  "access": "11,360,8",
                  "name": "11,363,0",
                  "text": "11,359,8,48"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "beforeLayout",
                "template": true,
                "text": "Occurs before componentLayout is run. In previous releases, this method could\nreturn `false` to prevent its layout but that is not supported in Ext JS 4.1 or\nhigher. This method is simply a notification of the impending layout to give the\ncomponent a chance to adjust the DOM. Ideally, DOM reads should be avoided at this\ntime to reduce expensive document reflows.\n",
                "src": {
                  "access": "6,2726,8",
                  "name": "6,2728,0",
                  "template": "6,2725,8",
                  "text": "6,2719,8,366"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "beforeRender",
                "template": true,
                "text": "Allows additional behavior before rendering.\n\n**Note:** If the Component has a <a href='#!/api/Ext.Component-cfg-controller'>Ext.Component#controller</a>\nand the controller has a <a href='#!/api/Ext.app.ViewController-method-beforeRender'>Ext.app.ViewController#beforeRender</a>\nmethod it will be called passing the Component as the single param.\n",
                "src": {
                  "access": "20,398,8",
                  "name": "20,400,0",
                  "template": "20,397,8",
                  "text": "20,391,8,278"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "beforeSetPosition",
                "text": "Template method called before a Component is positioned.\n\nEnsures that the position is adjusted so that the Component is constrained if so configured.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "src": {
                      "name": "6,2740,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "src": {
                      "name": "6,2740,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "src": {
                      "name": "6,2740,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,2735,8",
                  "name": "6,2740,0",
                  "text": "6,2736,8,151"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "beforeShow",
                "template": true,
                "text": "Invoked before the Component is shown.\n",
                "src": {
                  "access": "6,2798,8",
                  "name": "6,2800,0",
                  "template": "6,2797,8",
                  "text": "6,2794,8,40"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "blur",
                "src": {
                  "access": "11,789,12",
                  "name": "11,791,0"
                }
              },
              {
                "$type": "method",
                "name": "bubble",
                "text": "Bubbles up the component/container hierarchy, calling the specified function with each component. The scope\n(*this*) of function call will be the scope provided or the current component. The arguments to the function will\nbe the args provided or the current component. If the function returns false at any point, the bubble is stopped.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The function to call\n",
                    "type": "Function",
                    "src": {
                      "name": "6,2807,26",
                      "text": "6,2807,29,21",
                      "type": "6,2807,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope of the function. Defaults to current node.\n",
                    "type": "Object",
                    "src": {
                      "name": "6,2808,25",
                      "text": "6,2808,32,53",
                      "type": "6,2808,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "optional": true,
                    "text": "The args to call the function with. Defaults to passing the current component.\n",
                    "type": "Array",
                    "src": {
                      "name": "6,2809,24",
                      "text": "6,2809,30,79",
                      "type": "6,2809,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,2810,32,5",
                      "type": "6,2810,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,2812,0",
                  "text": "6,2803,8,337"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "cacheRefEls",
                "text": "Ensures that all elements with \"data-ref\" attributes get loaded into the cache.\nThis really helps on IE8 where `getElementById` is a search not a lookup. By\npopulating our cache with one search of the DOM we then have random access to\nthe elements as we do our <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>childEls</a> wire up.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "src": {
                      "name": "20,898,0"
                    }
                  }
                ],
                "src": {
                  "access": "20,896,12",
                  "name": "20,898,0",
                  "text": "20,892,12,281"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "calculateAnchorXY",
                "text": "Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "anchor",
                    "optional": true,
                    "text": "The specified anchor position.\nSee <a href='#!/api/Ext.grid.column.Action-method-alignTo'>alignTo</a> for details on supported anchor positions.\n",
                    "type": "String",
                    "value": "'tl'",
                    "src": {
                      "name": "19,255,25",
                      "text": "19,255,38,31:19,256,8,64",
                      "type": "19,255,16",
                      "value": "19,255,32"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "extraX",
                    "optional": true,
                    "text": "value to be added to the x coordinate\n",
                    "type": "Number",
                    "src": {
                      "name": "19,257,25",
                      "text": "19,257,33,38",
                      "type": "19,257,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "extraY",
                    "optional": true,
                    "text": "value to be added to the y coordinate\n",
                    "type": "Number",
                    "src": {
                      "name": "19,258,25",
                      "text": "19,258,33,38",
                      "type": "19,258,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "size",
                    "optional": true,
                    "text": "An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)\n",
                    "type": "Object",
                    "src": {
                      "name": "19,259,25",
                      "text": "19,259,31,60:19,260,8,99",
                      "type": "19,259,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "[x, y] An array containing the element's x and y coordinates\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,262,27,61",
                      "type": "19,262,17"
                    }
                  }
                ],
                "src": {
                  "access": "19,263,8",
                  "name": "19,265,0",
                  "text": "19,253,8,109"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "calculateConstrainedPosition",
                "text": "Calculates the new [x,y] position to move this Positionable into a constrain region.\n\nBy default, this Positionable is constrained to be within the container it was added to, or the element it was\nrendered to.\n\nPriority is given to constraining the top and left within the constraint.\n\nAn alternative constraint may be passed.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "constrainTo",
                    "optional": true,
                    "text": "The Element or <a href='#!/api/Ext.util.Region'>Ext.util.Region</a>\ninto which this Component is to be constrained. Defaults to the element into which this Positionable\nwas rendered, or this Component's {@link Ext.Component#constrainTo.\n",
                    "type": "String/HTMLElement/Ext.dom.Element/Ext.util.Region",
                    "src": {
                      "name": "19,533,69",
                      "text": "19,533,82,46:19,534,8,169",
                      "type": "19,533,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "proposedPosition",
                    "optional": true,
                    "text": "A proposed `[X, Y]` position to test for validity\nand to coerce into constraints instead of using this Positionable's current position.\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,536,27",
                      "text": "19,536,45,50:19,537,8,86",
                      "type": "19,536,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "local",
                    "optional": true,
                    "text": "The proposedPosition is local *(relative to floatParent if a floating Component)*\n",
                    "type": "Boolean",
                    "src": {
                      "name": "19,538,26",
                      "text": "19,538,33,82",
                      "type": "19,538,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "proposedSize",
                    "optional": true,
                    "text": "A proposed `[width, height]` size to use when calculating\nconstraints instead of using this Positionable's current size.\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,539,27",
                      "text": "19,539,41,58:19,540,8,63",
                      "type": "19,539,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "**If** the element *needs* to be translated, the new `[X, Y]` position within\nconstraints if possible, giving priority to keeping the top and left edge in the constrain region.\nOtherwise, `false`.\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,541,27,78:19,542,8,119",
                      "type": "19,541,17"
                    }
                  }
                ],
                "src": {
                  "access": "19,544,8",
                  "name": "19,546,0",
                  "text": "19,525,8,327"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "cancelFocus",
                "text": "Cancel any deferred focus on this component\n",
                "src": {
                  "access": "11,296,8",
                  "name": "11,298,0",
                  "text": "11,295,8,44"
                }
              },
              {
                "$type": "method",
                "name": "cascade",
                "since": "2.3.0",
                "text": "Cascades down the component/container heirarchy from this component (passed in\nthe first call), calling the specified function with each component. The scope\n(this reference) of the function call will be the scope provided or the current\ncomponent. The arguments to the function will be the args provided or the current\ncomponent. If the function returns false at any point, the cascade is stopped on\nthat branch.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The function to call\n",
                    "type": "Function",
                    "src": {
                      "name": "4,1008,26",
                      "text": "4,1008,29,21",
                      "type": "4,1008,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope of the function (defaults to current component)\n",
                    "type": "Object",
                    "src": {
                      "name": "4,1009,25",
                      "text": "4,1009,32,58",
                      "type": "4,1009,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "optional": true,
                    "text": "The args to call the function with. The current component\nalways passed as the last argument.\n",
                    "type": "Array",
                    "src": {
                      "name": "4,1010,24",
                      "text": "4,1010,30,58:4,1011,8,36",
                      "type": "4,1010,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.container.Container",
                    "src": {
                      "text": "4,1012,32,5",
                      "type": "4,1012,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1015,0",
                  "since": "4,1013,15",
                  "text": "4,1002,8,414"
                }
              },
              {
                "$type": "method",
                "name": "center",
                "text": "Center this Component in its container.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "3,564,32,5",
                      "type": "3,564,17"
                    }
                  }
                ],
                "src": {
                  "name": "3,566,0",
                  "text": "3,563,8,40"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "changeConstraint",
                "items": [
                  {
                    "$type": "param",
                    "name": "newValue",
                    "src": {
                      "name": "6,5830,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldValue",
                    "src": {
                      "name": "6,5830,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "constrainMethod",
                    "src": {
                      "name": "6,5830,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "styleName",
                    "src": {
                      "name": "6,5830,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "sizeName",
                    "src": {
                      "name": "6,5830,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,5828,12",
                  "name": "6,5830,0"
                }
              },
              {
                "$type": "method",
                "name": "child",
                "text": "Retrieves the first direct child of this container which matches the passed selector or component.\nThe passed in selector must comply with an Ext.ComponentQuery selector, or it can be an actual Ext.Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "An Ext.ComponentQuery selector. If no selector is\nspecified, the first child will be returned.\n",
                    "type": "String/Ext.Component",
                    "src": {
                      "name": "22,62,39",
                      "text": "22,62,49,50:22,63,8,45",
                      "type": "22,62,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The matching child Ext.Component (or <a href='#!/api/null'>null</a> if no match was found).\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "22,64,32,68",
                      "type": "22,64,17"
                    }
                  }
                ],
                "src": {
                  "name": "22,66,0",
                  "text": "22,60,8,209"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "clearClip",
                "text": "Clears any clipping applied to this component by <a href='#!/api/Ext.grid.column.Action-method-clipTo'>method-clipTo</a>.\n",
                "src": {
                  "access": "6,5953,12",
                  "name": "6,5955,0",
                  "text": "6,5952,12,73"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "clearDelegatedListeners",
                "text": "Clears all listeners that were attached using the \"delegate\" event option.\nUsers should not invoke this method directly.  It is called automatically as\npart of normal <a href='#!/api/Ext.util.Observable-method-clearListeners'>Ext.util.Observable#clearListeners</a>\nprocessing.\n",
                "src": {
                  "access": "18,61,12",
                  "name": "18,67,0",
                  "text": "18,62,12,237"
                }
              },
              {
                "$type": "method",
                "name": "clearListeners",
                "text": "Removes all listeners for this object including the managed listeners\n",
                "src": {
                  "name": "13,1255,0",
                  "text": "13,1253,11,70"
                }
              },
              {
                "$type": "method",
                "name": "clearManagedListeners",
                "text": "Removes all managed listeners for this object.\n",
                "src": {
                  "name": "13,1291,0",
                  "text": "13,1289,11,47"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "clearReference",
                "text": "Clear a component reference.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component to remove.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "15,116,35",
                      "text": "15,116,45,25",
                      "type": "15,116,20"
                    }
                  }
                ],
                "src": {
                  "access": "15,117,12",
                  "name": "15,119,0",
                  "text": "15,115,12,29"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "clearReferences",
                "text": "Invalidates the references collection. Typically called when\nremoving a container from this container, since it's difficult\nto know what references got removed.\n",
                "src": {
                  "access": "15,163,12",
                  "name": "15,165,0",
                  "text": "15,159,12,162"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "clipTo",
                "text": "Clips this Component's element to fit within the passed element's or component's view area\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "clippingEl",
                    "text": "The Component or element or Region which should\nclip this element even if this element is outside the bounds of that region.\n",
                    "type": "Ext.Component/Ext.dom.Element/Ext.util.Region",
                    "src": {
                      "name": "6,5854,63",
                      "text": "6,5854,74,48:6,5855,12,77",
                      "type": "6,5854,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "sides",
                    "text": "The sides to clip 1=top, 2=right, 4=bottom, 8=left.\n\nThis is to support components being clipped to their logical owner, such as a button menu when the\nform with the button in is scrolled. If the button moves with scrolling, the \"child\" menu stack should\nbe clipped at the edge of the scrolling element.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,5856,28",
                      "text": "6,5856,34,52:6,5857,12,252",
                      "type": "6,5856,20"
                    }
                  }
                ],
                "src": {
                  "access": "6,5861,12",
                  "name": "6,5863,0",
                  "text": "6,5853,12,91"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "clipToScroller",
                "text": "Clips this floating element to the scrolling element in line with how\nits topmost anchoring element is clipped.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "scroller",
                    "src": {
                      "name": "3,704,0"
                    }
                  }
                ],
                "src": {
                  "access": "3,702,12",
                  "name": "3,704,0",
                  "text": "3,700,12,112"
                }
              },
              {
                "$type": "method",
                "name": "cloneConfig",
                "text": "Clone the current component using the original config values passed into this instance by default.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "overrides",
                    "text": "A new config containing any properties to override in the cloned version.\nAn id property can be passed on this object, otherwise one will be generated to avoid duplicates.\n",
                    "type": "Object",
                    "src": {
                      "name": "6,2831,24",
                      "text": "6,2831,34,74:6,2832,8,98",
                      "type": "6,2831,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "clone The cloned copy of this component\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,2833,32,40",
                      "type": "6,2833,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,2835,0",
                  "text": "6,2830,8,99"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "constrainBox",
                "items": [
                  {
                    "$type": "param",
                    "name": "box",
                    "src": {
                      "name": "19,863,0"
                    }
                  }
                ],
                "src": {
                  "access": "19,861,8",
                  "name": "19,863,0"
                }
              },
              {
                "$type": "method",
                "name": "constructor",
                "text": "Creates new Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "text": "The configuration options may be specified as either:\n\n- **an element** : it is set as the internal element and its id used as the component id\n- **a string** : it is assumed to be the id of an existing element and is used as the component id\n- **anything else** : it is assumed to be a standard config object and is applied to the component\n",
                    "type": "Ext.dom.Element/String/Object",
                    "src": {
                      "name": "6,1985,47",
                      "text": "6,1985,54,54:6,1986,8,288",
                      "type": "6,1985,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,1991,0",
                  "text": "6,1984,8,23"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "constructPlugin",
                "items": [
                  {
                    "$type": "param",
                    "name": "ptype",
                    "text": "string or config object containing a ptype property.\n\nConstructs a plugin according to the passed config object/ptype string.\n\nEnsures that the constructed plugin always has a `cmp` reference back to this component.\nThe setting up of this is done in PluginManager. The PluginManager ensures that a reference to this\ncomponent is passed to the constructor. It also ensures that the plugin's `setCmp` method (if any) is called.\n",
                    "type": "String/Object",
                    "src": {
                      "name": "6,5973,35",
                      "text": "6,5973,41,53:6,5974,12,373",
                      "type": "6,5973,20"
                    }
                  }
                ],
                "src": {
                  "access": "6,5980,12",
                  "name": "6,5982,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "constructPlugins",
                "text": "Returns an array of fully constructed plugin instances. This converts any configs into their\nappropriate instances.\n\nIt does not mutate the plugins array. It creates a new array.\n",
                "src": {
                  "access": "6,6001,12",
                  "name": "6,6003,0",
                  "text": "6,5997,12,179"
                }
              },
              {
                "$type": "method",
                "name": "contains",
                "text": "Determines whether the passed Component is either an immediate child of this Container,\nor whether it is a descendant.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "comp",
                    "text": "The Component to test.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1042,31",
                      "text": "4,1042,36,23",
                      "type": "4,1042,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "deep",
                    "optional": true,
                    "text": "Pass `true` to test for the Component being a descendant at any level.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "4,1043,26",
                      "text": "4,1043,38,71",
                      "type": "4,1043,16",
                      "value": "4,1043,31"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if the passed Component is contained at the specified level.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "4,1044,26,68",
                      "type": "4,1044,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1046,0",
                  "text": "4,1039,8,120"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "createRelayer",
                "text": "Creates an event handling function which re-fires the event from this object as the passed event name.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "newName",
                    "text": "The name under which to re-fire the passed parameters.\n",
                    "type": "String",
                    "src": {
                      "name": "13,1524,27",
                      "text": "13,1524,35,55",
                      "type": "13,1524,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "beginEnd",
                    "text": "(optional) The caller can specify on which indices to slice.\n",
                    "type": "Array",
                    "src": {
                      "name": "13,1525,26",
                      "text": "13,1525,35,61",
                      "type": "13,1525,19"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Function",
                    "src": {
                      "type": "13,1526,20"
                    }
                  }
                ],
                "src": {
                  "access": "13,1522,11",
                  "name": "13,1528,0",
                  "text": "13,1523,11,103"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "defaultRenderer",
                "template": true,
                "text": "When defined this will take precedence over the\n<a href='#!/api/Ext.grid.column.Column-cfg-renderer'>Ext.grid.column.Column#renderer</a> config.\nThis is meant to be defined in subclasses that wish to supply their own renderer.\n",
                "src": {
                  "access": "5,490,8",
                  "name": "5,486,16",
                  "template": "5,491,8",
                  "text": "5,487,8,187"
                }
              },
              {
                "$type": "method",
                "name": "destroy",
                "since": "1.1.0",
                "text": "Destroys the Component. This method must not be overridden.\nTo add extra functionality to destruction time in a subclass, implement the\ntemplate method <a href='#!/api/Ext.grid.column.Action-method-beforeDestroy'>beforeDestroy</a> or <a href='#!/api/Ext.grid.column.Action-method-onDestroy'>onDestroy</a>. And do not forget to\n`callParent()` in your implementation.\n",
                "src": {
                  "name": "6,2856,0",
                  "since": "6,2854,15",
                  "text": "6,2850,8,258"
                }
              },
              {
                "$type": "method",
                "name": "disable",
                "text": "Disables all child input fields and buttons.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "silent",
                    "src": {
                      "name": "4,1065,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fromParent",
                    "src": {
                      "name": "4,1065,0"
                    }
                  }
                ],
                "src": {
                  "name": "4,1065,0",
                  "text": "4,1063,8,45"
                }
              },
              {
                "$type": "method",
                "name": "disableAction",
                "text": "Disables this ActionColumn's action at the specified index.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "type": "Number/Ext.grid.column.Action",
                    "src": {
                      "name": "0,411,47",
                      "type": "0,411,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "silent",
                    "optional": true,
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "0,412,26",
                      "type": "0,412,16",
                      "value": "0,412,33"
                    }
                  }
                ],
                "src": {
                  "name": "0,414,0",
                  "text": "0,410,8,60"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "doApplyRenderTpl",
                "text": "Called from the selected frame generation template to insert this Component's inner structure inside the framing structure.\n\nWhen framing is used, a selected frame generation template is used as the primary template of the #getElConfig instead\nof the configured <a href='#!/api/Ext.Component-cfg-renderTpl'>Ext.Component#renderTpl</a>. The renderTpl is invoked by this method which is injected into the framing template.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "out",
                    "src": {
                      "name": "20,464,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "values",
                    "src": {
                      "name": "20,464,0"
                    }
                  }
                ],
                "src": {
                  "access": "20,458,8",
                  "name": "20,464,0",
                  "text": "20,459,8,390"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "doAutoRender",
                "text": "Handles autoRender.\nFloating Components may have an ownerCt. If they are asking to be constrained, constrain them within that\nownerCt, and have their z-index managed locally. Floating Components are always rendered to document.body\n",
                "src": {
                  "access": "20,920,12",
                  "name": "20,922,0",
                  "text": "20,917,12,232"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-updateLayout'>updateLayout</a> instead.\n",
                "deprecatedVersion": "4.1",
                "name": "doComponentLayout",
                "text": "This method needs to be called whenever you change something on this component that\nrequires the Component's layout to be recalculated.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,6616,44,5",
                      "type": "6,6616,29"
                    }
                  }
                ],
                "src": {
                  "deprecatedMessage": "6,6617,20",
                  "deprecatedVersion": "6,6617,20",
                  "name": "6,6613,28",
                  "text": "6,6614,20,136"
                }
              },
              {
                "$type": "method",
                "name": "doConstrain",
                "text": "Moves this floating Component into a constrain region.\n\nBy default, this Component is constrained to be within the container it was added to, or the element it was\nrendered to.\n\nAn alternative constraint may be passed.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "constrainTo",
                    "optional": true,
                    "text": "The Element or <a href='#!/api/Ext.util.Region'>Ext.util.Region</a>\ninto which this Component is to be constrained. Defaults to the element into which this floating Component\nwas rendered.\n",
                    "type": "String/HTMLElement/Ext.dom.Element/Ext.util.Region",
                    "src": {
                      "name": "3,447,69",
                      "text": "3,447,82,46:3,448,8,121",
                      "type": "3,447,16"
                    }
                  }
                ],
                "src": {
                  "name": "3,451,0",
                  "text": "3,441,8,219"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "doFireDelegatedEvent",
                "text": "Fires a delegated event.  Users should not invoke this method directly.  It\nis called automatically by the framework as needed (see the \"delegate\" event\noption of <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> for more\ndetails.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "src": {
                      "name": "18,90,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "src": {
                      "name": "18,90,0"
                    }
                  }
                ],
                "src": {
                  "access": "18,84,12",
                  "name": "18,90,0",
                  "text": "18,85,12,233"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "doFireEvent",
                "text": "Continue to fire event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "type": "String",
                    "src": {
                      "name": "13,761,27",
                      "type": "13,761,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "type": "Array",
                    "src": {
                      "name": "13,762,26",
                      "type": "13,762,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "bubbles",
                    "type": "Boolean",
                    "src": {
                      "name": "13,763,28",
                      "type": "13,763,19"
                    }
                  }
                ],
                "src": {
                  "access": "13,759,11",
                  "name": "13,765,0",
                  "text": "13,758,11,24"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "doRemove",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "src": {
                      "name": "4,1866,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "doDestroy",
                    "src": {
                      "name": "4,1866,0"
                    }
                  }
                ],
                "src": {
                  "access": "4,1864,12",
                  "name": "4,1866,0"
                }
              },
              {
                "$type": "method",
                "name": "down",
                "text": "Retrieves the first descendant of this container which matches the passed selector.\nThe passed in selector must comply with an Ext.ComponentQuery selector, or it can be an actual Ext.Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "An Ext.ComponentQuery selector or Ext.Component. If no selector is\nspecified, the first child will be returned.\n",
                    "type": "String/Ext.Component",
                    "src": {
                      "name": "22,88,39",
                      "text": "22,88,49,67:22,89,8,45",
                      "type": "22,88,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The matching descendant Ext.Component (or <a href='#!/api/null'>null</a> if no match was found).\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "22,90,32,73",
                      "type": "22,90,17"
                    }
                  }
                ],
                "src": {
                  "name": "22,92,0",
                  "text": "22,86,8,194"
                }
              },
              {
                "$type": "method",
                "name": "enable",
                "text": "Enables all child input fields and buttons.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "silent",
                    "src": {
                      "name": "4,1086,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fromParent",
                    "src": {
                      "name": "4,1086,0"
                    }
                  }
                ],
                "src": {
                  "name": "4,1086,0",
                  "text": "4,1084,8,44"
                }
              },
              {
                "$type": "method",
                "name": "enableAction",
                "text": "Enables this ActionColumn's action at the specified index.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "type": "Number/Ext.grid.column.Action",
                    "src": {
                      "name": "0,391,47",
                      "type": "0,391,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "silent",
                    "optional": true,
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "0,392,26",
                      "type": "0,392,16",
                      "value": "0,392,33"
                    }
                  }
                ],
                "src": {
                  "name": "0,394,0",
                  "text": "0,390,8,59"
                }
              },
              {
                "$type": "method",
                "name": "enableBubble",
                "text": "Enables events fired by this Observable to bubble up an owner hierarchy by calling `this.getBubbleTarget()` if\npresent. There is no implementation in the Observable base class.\n\nThis is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href='#!/api/Ext.Component-method-getBubbleTarget'>Ext.Component#getBubbleTarget</a>. The default implementation in Ext.Component returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.\n\nExample:\n\n    Ext.define('Ext.overrides.form.field.Base', {\n        override: 'Ext.form.field.Base',\n\n        //  Add functionality to Field's initComponent to enable the change event to bubble\n        initComponent: function () {\n            this.callParent();\n            this.enableBubble('change');\n        }\n    });\n\n    var myForm = Ext.create('Ext.form.Panel', {\n        title: 'User Details',\n        items: [{\n            ...\n        }],\n        listeners: {\n            change: function() {\n                // Title goes red if form has been modified.\n                myForm.header.setStyle('color', 'red');\n            }\n        }\n    });\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventNames",
                    "text": "The event name to bubble, or an Array of event names.\n",
                    "type": "String/String[]",
                    "src": {
                      "name": "13,1569,36",
                      "text": "13,1569,47,54",
                      "type": "13,1569,19"
                    }
                  }
                ],
                "src": {
                  "name": "13,1571,0",
                  "text": "13,1536,11,1138"
                }
              },
              {
                "$type": "method",
                "name": "ensureAttachedToBody",
                "text": "Ensures that this component is attached to `document.body`. If the component was\nrendered to <a href='#!/api/Ext-method-getDetachedBody'>Ext#getDetachedBody</a>, then it will be appended to `document.body`.\nAny configured position is also restored.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "runLayout",
                    "optional": true,
                    "text": "True to run the component's layout.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "20,837,26",
                      "text": "20,837,43,36",
                      "type": "20,837,16",
                      "value": "20,837,36"
                    }
                  }
                ],
                "src": {
                  "name": "20,839,0",
                  "text": "20,834,8,209"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "findFocusTarget",
                "text": "Finds an alternate Component to focus if this Component is disabled while focused, or\nfocused while disabled, or otherwise unable to focus.\n\nIn both cases, focus must not be lost to document.body, but must move to an intuitively\nconnectible Component, either a sibling, or uncle or nephew.\n\nThis is both for the convenience of keyboard users, and also for when focus is tracked\nwithin a Component tree such as for ComboBoxes and their dropdowns.\n\nFor example, a ComboBox with a PagingToolbar in is BoundList. If the \"Next Page\"\nbutton is hit, the LoadMask shows and focuses, the next page is the last page, so\nthe \"Next Page\" button is disabled. When the LoadMask hides, it attempt to focus the\nlast focused Component which is the disabled \"Next Page\" button. In this situation,\nfocus should move to a sibling within the PagingToolbar.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "A closely related focusable Component to which focus can move.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "11,633,36,63",
                      "type": "11,633,21"
                    }
                  }
                ],
                "src": {
                  "access": "11,634,12",
                  "name": "11,636,0",
                  "text": "11,618,12,837"
                }
              },
              {
                "$type": "method",
                "name": "findParentBy",
                "text": "Find a container above this component at any level by a custom function. If the passed function returns true, the\ncontainer will be returned.\n\nSee also the <a href='#!/api/Ext.Component-method-up'>Ext.Component#up</a> method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The custom function to call with the arguments (container, this component).\n",
                    "type": "Function",
                    "src": {
                      "name": "6,3058,26",
                      "text": "6,3058,29,76",
                      "type": "6,3058,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The first Container for which the custom function returns true\n",
                    "type": "Ext.container.Container",
                    "src": {
                      "text": "6,3059,42,63",
                      "type": "6,3059,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3061,0",
                  "text": "6,3053,8,193"
                }
              },
              {
                "$type": "method",
                "name": "findParentByType",
                "text": "Find a container above this component at any level by xtype or class\n\nSee also the <a href='#!/api/Ext.Component-method-up'>Ext.Component#up</a> method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "xtype",
                    "text": "The xtype string for a component, or the class of the component directly\n",
                    "type": "String/Ext.Class",
                    "src": {
                      "name": "6,3076,34",
                      "text": "6,3076,40,73",
                      "type": "6,3076,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The first Container which matches the given xtype or class\n",
                    "type": "Ext.container.Container",
                    "src": {
                      "text": "6,3077,42,59",
                      "type": "6,3077,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3079,0",
                  "text": "6,3072,8,120"
                }
              },
              {
                "$type": "method",
                "name": "findPlugin",
                "text": "Retrieves plugin from this component's collection by its `ptype`.\n\n    var grid = Ext.create('Ext.grid.Panel', {\n        store: {\n            fields: ['name'],\n            data: [{\n                name: 'Scott Pilgrim'\n            }]\n        },\n        columns: [{\n            header: 'Name',\n            dataIndex: 'name',\n            editor: 'textfield',\n            flex: 1\n        }],\n        selType: 'cellmodel',\n        plugins: {\n            ptype: 'cellediting',\n            clicksToEdit: 1,\n            pluginId: 'myplugin'\n        },\n        height: 200,\n        width: 400,\n        renderTo: Ext.getBody()\n    });\n\n    grid.findPlugin('cellediting');  // the cellediting plugin\n\n**Note:** See also <a href='#!/api/Ext.grid.column.Action-method-getPlugin'>getPlugin</a>\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "ptype",
                    "text": "The Plugin's `ptype` as specified by the class's\n<a href='#!/api/Ext.Class-cfg-alias'>Ext.Class#cfg-alias</a> configuration.\n",
                    "type": "String",
                    "src": {
                      "name": "6,3119,24",
                      "text": "6,3119,30,49:6,3120,8,49",
                      "type": "6,3119,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "plugin instance or <a href='#!/api/undefined'>undefined</a> if not found\n",
                    "type": "Ext.plugin.Abstract",
                    "src": {
                      "text": "6,3121,38,44",
                      "type": "6,3121,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3123,0",
                  "text": "6,3089,8,730"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "finishRender",
                "text": "This method visits the rendered component tree in a \"top-down\" order. That is, this\ncode runs on a parent component before running on a child. This method calls the\n<a href='#!/api/Ext.grid.column.Action-method-onRender'>onRender</a> method of each component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "containerIdx",
                    "text": "The index into the Container items of this Component.\n",
                    "type": "Number",
                    "src": {
                      "name": "20,1008,28",
                      "text": "20,1008,41,54",
                      "type": "20,1008,20"
                    }
                  }
                ],
                "src": {
                  "access": "20,1010,12",
                  "name": "20,1012,0",
                  "text": "20,1005,12,209"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-fireEventAction'>fireEventAction</a> instead.\n",
                "deprecatedVersion": "5.5",
                "name": "fireAction",
                "text": "Fires the specified event with the passed parameters and executes a function (action).\nBy default, the action function will be executed after any \"before\" event handlers\n(as specified using the `order` option of\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a>), but before any other\nhandlers are fired.  This gives the \"before\" handlers an opportunity to\ncancel the event by returning `false`, and prevent the action function from\nbeing called.\n\nThe action can also be configured to run after normal handlers, but before any \"after\"\nhandlers (as specified using the `order` event option) by passing `'after'`\nas the `order` parameter.  This configuration gives any event handlers except\nfor \"after\" handlers the opportunity to cancel the event and prevent the action\nfunction from being called.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to fire.\n",
                    "type": "String",
                    "src": {
                      "name": "13,640,28",
                      "text": "13,640,38,31",
                      "type": "13,640,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "text": "Arguments to pass to handlers and to the action function.\n",
                    "type": "Array",
                    "src": {
                      "name": "13,641,27",
                      "text": "13,641,32,58",
                      "type": "13,641,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The action function.\n",
                    "type": "Function",
                    "src": {
                      "name": "13,642,30",
                      "text": "13,642,33,21",
                      "type": "13,642,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope (`this` reference) in which the handler function is\nexecuted. **If omitted, defaults to the object which fired the event.**\n",
                    "type": "Object",
                    "src": {
                      "name": "13,643,29",
                      "text": "13,643,36,62:13,644,12,72",
                      "type": "13,643,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "Event options for the action function.  Accepts any\nof the options of <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a>\n",
                    "type": "Object",
                    "src": {
                      "name": "13,645,29",
                      "text": "13,645,38,52:13,646,12,72",
                      "type": "13,645,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "order",
                    "optional": true,
                    "text": "The order to call the action function relative\ntoo the event handlers (`'before'` or `'after'`).  Note that this option is\nsimply used to sort the action function relative to the event handlers by \"priority\".\nAn order of `'before'` is equivalent to a priority of `99.5`, while an order of\n`'after'` is equivalent to a priority of `-99.5`.  See the `priority` option\nof <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> for more details.\n",
                    "type": "String",
                    "value": "'before'",
                    "src": {
                      "name": "13,647,29",
                      "text": "13,647,45,47:13,648,12,394",
                      "type": "13,647,20",
                      "value": "13,647,35"
                    }
                  }
                ],
                "src": {
                  "deprecatedMessage": "13,653,12",
                  "deprecatedVersion": "13,653,12",
                  "name": "13,655,0",
                  "text": "13,626,12,802"
                }
              },
              {
                "$type": "method",
                "name": "fireEvent",
                "text": "Fires the specified event with the passed parameters (minus the event name, plus the `options` object passed\nto <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a>).\n\nAn event may be set to bubble up an Observable parent hierarchy (See <a href='#!/api/Ext.Component-method-getBubbleTarget'>Ext.Component#getBubbleTarget</a>) by\ncalling <a href='#!/api/Ext.grid.column.Action-method-enableBubble'>enableBubble</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to fire.\n",
                    "type": "String",
                    "src": {
                      "name": "13,568,27",
                      "text": "13,568,37,31",
                      "type": "13,568,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "text": "Variable number of parameters are passed to handlers.\n",
                    "type": "Object...",
                    "src": {
                      "name": "13,569,30",
                      "text": "13,569,35,54",
                      "type": "13,569,19"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "returns false if any of the handlers return false otherwise it returns true.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "13,570,29,77",
                      "type": "13,570,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,572,0",
                  "text": "13,562,11,310"
                }
              },
              {
                "$type": "method",
                "name": "fireEventArgs",
                "text": "Fires the specified event with the passed parameter list.\n\nAn event may be set to bubble up an Observable parent hierarchy (See <a href='#!/api/Ext.Component-method-getBubbleTarget'>Ext.Component#getBubbleTarget</a>) by\ncalling <a href='#!/api/Ext.grid.column.Action-method-enableBubble'>enableBubble</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to fire.\n",
                    "type": "String",
                    "src": {
                      "name": "13,605,27",
                      "text": "13,605,37,31",
                      "type": "13,605,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "text": "An array of parameters which are passed to handlers.\n",
                    "type": "Object[]",
                    "src": {
                      "name": "13,606,29",
                      "text": "13,606,34,53",
                      "type": "13,606,19"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "returns false if any of the handlers return false otherwise it returns true.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "13,607,29,77",
                      "type": "13,607,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,609,0",
                  "text": "13,600,11,202"
                }
              },
              {
                "$type": "method",
                "name": "fireEventedAction",
                "text": "Fires the specified event with the passed parameters and executes a function (action).\nEvented Actions will automatically dispatch a 'before' event passing. This event will\nbe given a special controller that allows for pausing/resuming of the event flow.\n\nBy pausing the controller the updater and events will not run until resumed. Pausing,\nhowever, will not stop the processing of any other before events.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to fire.\n",
                    "type": "String",
                    "src": {
                      "name": "13,721,28",
                      "text": "13,721,38,31",
                      "type": "13,721,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "args",
                    "text": "Arguments to pass to handlers and to the action function.\n",
                    "type": "Array",
                    "src": {
                      "name": "13,722,27",
                      "text": "13,722,32,58",
                      "type": "13,722,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The action function.\n",
                    "type": "Function/String",
                    "src": {
                      "name": "13,723,37",
                      "text": "13,723,40,21",
                      "type": "13,723,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope (`this` reference) in which the handler function is\nexecuted. **If omitted, defaults to the object which fired the event.**\n",
                    "type": "Object",
                    "src": {
                      "name": "13,724,29",
                      "text": "13,724,36,62:13,725,12,72",
                      "type": "13,724,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fnArgs",
                    "optional": true,
                    "text": "Optional arguments for the action `fn`. If not\ngiven, the normal `args` will be used to call `fn`. If `false` is passed, the\n`args` are used but if the first argument is this instance it will be removed\nfrom the args passed to the action function.\n",
                    "type": "Array/Boolean",
                    "src": {
                      "name": "13,726,36",
                      "text": "13,726,44,47:13,727,12,201",
                      "type": "13,726,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,731,0",
                  "text": "13,714,12,409"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "fireHierarchyEvent",
                "since": "4.2.0",
                "text": "This method fires an event on <a href='#!/api/Ext.GlobalEvents'>Ext.GlobalEvents</a> allowing interested parties to know\nof certain critical events for this component. This is done globally because the\n(few) listeners can immediately receive the event rather than bubbling the event\nonly to reach the top and have no listeners.\n\nThe main usage for these events is to do with floating components. For example, the\nload mask is a floating component. The component it is masking may be inside several\ncontainers. As such, they need to know when component is hidden, either directly, or\nvia a parent container being hidden. To do this they subscribe to these events and\nfilter out the appropriate container.\n\nThis functionality is contained in Component (as opposed to Container) because a\nComponent can be the ownerCt for a floating component (loadmask), and the loadmask\nneeds to know when its owner is shown/hidden so that its hidden state can be\nsynchronized.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The event name.\n",
                    "type": "String",
                    "src": {
                      "name": "6,6110,28",
                      "text": "6,6110,38,16",
                      "type": "6,6110,20"
                    }
                  }
                ],
                "src": {
                  "access": "6,6112,12",
                  "name": "6,6114,0",
                  "since": "6,6111,19",
                  "text": "6,6094,12,925"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "fitContainer",
                "items": [
                  {
                    "$type": "param",
                    "name": "animate",
                    "src": {
                      "name": "3,598,0"
                    }
                  }
                ],
                "src": {
                  "access": "3,596,8",
                  "name": "3,598,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "fixReference",
                "text": "Sets up a reference on our current reference holder.\n",
                "src": {
                  "access": "23,335,12",
                  "name": "23,337,0",
                  "text": "23,333,12,54"
                }
              },
              {
                "$type": "method",
                "name": "focus",
                "text": "Try to focus this component.\n\nIf this component is disabled, a close relation will be targeted for focus instead\nto keep focus localized for keyboard users.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selectText",
                    "optional": true,
                    "text": "If applicable, `true` to also select all the text in this component, or an array consisting of start and end (defaults to start) position of selection.\n",
                    "type": "Mixed",
                    "src": {
                      "name": "11,202,24",
                      "text": "11,202,36,152",
                      "type": "11,202,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "delay",
                    "optional": true,
                    "text": "Delay the focus this number of milliseconds (true for 10 milliseconds).\n",
                    "type": "Boolean/Number",
                    "src": {
                      "name": "11,203,33",
                      "text": "11,203,40,72",
                      "type": "11,203,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "text": "Only needed if the `delay` parameter is used. A function to call upon focus.\n",
                    "type": "Function",
                    "src": {
                      "name": "11,204,27",
                      "text": "11,204,37,77",
                      "type": "11,204,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "Only needed if the `delay` parameter is used. The scope (`this` reference) in which to execute the callback.\n",
                    "type": "Function",
                    "src": {
                      "name": "11,205,27",
                      "text": "11,205,34,109",
                      "type": "11,205,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The focused Component. Usually `this` Component. Some Containers may\ndelegate focus to a descendant Component (<a href='#!/api/Ext.window.Window'>Ext.window.Window</a>s can do this through their\n<a href='#!/api/Ext.window.Window-cfg-defaultFocus'>Ext.window.Window#defaultFocus</a> config option. If this component is disabled, a closely\nrelated component will be focused and that will be returned.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "11,206,32,69:11,207,8,271",
                      "type": "11,206,17"
                    }
                  }
                ],
                "src": {
                  "name": "11,211,0",
                  "text": "11,198,8,157"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-updateLayout'>updateLayout</a> instead.\n",
                "deprecatedVersion": "4.1",
                "inheritdoc": "Ext.Component#updateLayout",
                "name": "forceComponentLayout",
                "src": {
                  "deprecatedMessage": "6,6635,20",
                  "deprecatedVersion": "6,6635,20",
                  "inheritdoc": "6,6634,20",
                  "name": "6,6633,28"
                }
              },
              {
                "$type": "method",
                "name": "getActiveAnimation",
                "text": "Returns the current animation if this object has any effects actively running or queued, else returns false.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Anim if element has active effects, else false\n",
                    "type": "Ext.fx.Anim/Boolean",
                    "src": {
                      "text": "21,370,38,47",
                      "type": "21,370,17"
                    }
                  }
                ],
                "src": {
                  "name": "21,372,0",
                  "text": "21,369,8,109"
                }
              },
              {
                "$type": "method",
                "name": "getAlignToXY",
                "text": "Gets the x,y coordinates to align this element with another element. See\n<a href='#!/api/Ext.grid.column.Action-method-alignTo'>alignTo</a> for more info on the supported position values.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "element",
                    "text": "The Positionable,\nHTMLElement, or id of the element to align to.\n",
                    "type": "Ext.util.Positionable/HTMLElement/String",
                    "src": {
                      "name": "19,319,58",
                      "text": "19,319,66,18:19,320,8,47",
                      "type": "19,319,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "position",
                    "optional": true,
                    "text": "The position to align to\n",
                    "type": "String",
                    "value": "\"tl-bl?\"",
                    "src": {
                      "name": "19,321,25",
                      "text": "19,321,44,25",
                      "type": "19,321,16",
                      "value": "19,321,34"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "offsets",
                    "optional": true,
                    "text": "Offset the positioning by [x, y]\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,322,27",
                      "text": "19,322,36,33",
                      "type": "19,322,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "[x, y]\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,323,27,7",
                      "type": "19,323,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,325,0",
                  "text": "19,317,8,138"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getAnchorToXY",
                "text": "Gets the x,y coordinates of an element specified by the anchor position on the\nelement.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The element\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "name": "19,25,33",
                      "text": "19,25,36,12",
                      "type": "19,25,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "anchor",
                    "optional": true,
                    "text": "The specified anchor position.\nSee <a href='#!/api/Ext.grid.column.Action-method-alignTo'>alignTo</a> for details on supported anchor positions.\n",
                    "type": "String",
                    "value": "'tl'",
                    "src": {
                      "name": "19,26,25",
                      "text": "19,26,38,31:19,27,8,64",
                      "type": "19,26,16",
                      "value": "19,26,32"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "local",
                    "optional": true,
                    "text": "True to get the local (element top/left-relative) anchor\nposition instead of page coordinates\n",
                    "type": "Boolean",
                    "src": {
                      "name": "19,28,26",
                      "text": "19,28,33,57:19,29,8,37",
                      "type": "19,28,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "size",
                    "optional": true,
                    "text": "An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)\n",
                    "type": "Object",
                    "src": {
                      "name": "19,30,25",
                      "text": "19,30,31,60:19,31,8,99",
                      "type": "19,30,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "[x, y] An array containing the element's x and y coordinates\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,33,27,61",
                      "type": "19,33,17"
                    }
                  }
                ],
                "src": {
                  "access": "19,34,8",
                  "name": "19,36,0",
                  "text": "19,23,8,88"
                }
              },
              {
                "$type": "method",
                "name": "getAnchorXY",
                "text": "Gets the x,y coordinates specified by the anchor position on the element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "anchor",
                    "optional": true,
                    "text": "The specified anchor position.\nSee <a href='#!/api/Ext.grid.column.Action-method-alignTo'>alignTo</a> for details on supported anchor positions.\n",
                    "type": "String",
                    "value": "'tl'",
                    "src": {
                      "name": "19,448,25",
                      "text": "19,448,38,31:19,449,8,64",
                      "type": "19,448,16",
                      "value": "19,448,32"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "local",
                    "optional": true,
                    "text": "True to get the local (element top/left-relative) anchor\nposition instead of page coordinates\n",
                    "type": "Boolean",
                    "src": {
                      "name": "19,450,26",
                      "text": "19,450,33,57:19,451,8,37",
                      "type": "19,450,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "size",
                    "optional": true,
                    "text": "An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)\n",
                    "type": "Object",
                    "src": {
                      "name": "19,452,25",
                      "text": "19,452,31,60:19,453,8,99",
                      "type": "19,452,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "[x, y] An array containing the element's x and y coordinates\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,455,27,61",
                      "type": "19,455,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,457,0",
                  "text": "19,447,8,74"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getAnimationProps",
                "text": "Get animation properties\n",
                "src": {
                  "access": "21,308,8",
                  "name": "21,311,0",
                  "text": "21,309,8,25"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getAriaLabelEl",
                "text": "Find component(s) that label or describe this component,\nand return the id(s) of their ariaEl elements.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "reference",
                    "optional": true,
                    "text": "Component reference,\nor array of component references, or a function that should return\nthe proper attribute string. The function will be called in the\ncontext of the labelled component.\n",
                    "type": "Function/String/String[]",
                    "src": {
                      "name": "8,72,47",
                      "text": "8,72,58,21:8,73,12,167",
                      "type": "8,72,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Element id string, or null\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "text": "8,77,34,27",
                      "type": "8,77,21"
                    }
                  }
                ],
                "src": {
                  "access": "8,78,12",
                  "name": "8,80,0",
                  "text": "8,69,12,105"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getAutoId",
                "src": {
                  "access": "6,6127,12",
                  "name": "6,6129,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getBorderPadding",
                "text": "Returns the size of the element's borders and padding.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "an object with the following numeric properties\n- beforeX\n- afterX\n- beforeY\n- afterY\n",
                    "type": "Object",
                    "src": {
                      "text": "19,42,25,48:19,43,8,38",
                      "type": "19,42,17"
                    }
                  }
                ],
                "src": {
                  "access": "19,47,8",
                  "name": "19,49,0",
                  "text": "19,41,8,55"
                }
              },
              {
                "$type": "method",
                "name": "getBox",
                "text": "Return an object defining the area of this Element which can be passed to\n<a href='#!/api/Ext.grid.column.Action-method-setBox'>setBox</a> to set another Element's size/location to match this element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "contentBox",
                    "optional": true,
                    "text": "If true a box for the content of the element is\nreturned.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "19,474,26",
                      "text": "19,474,38,48:19,475,8,10",
                      "type": "19,474,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "local",
                    "optional": true,
                    "text": "If true the element's left and top relative to its\n`offsetParent` are returned instead of page x/y.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "19,476,26",
                      "text": "19,476,33,51:19,477,8,49",
                      "type": "19,476,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "An object in the format\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "x",
                        "text": "The element's X position.\n",
                        "type": "Number",
                        "src": {
                          "name": "19,479,32",
                          "text": "19,479,34,26",
                          "type": "19,479,17"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "y",
                        "text": "The element's Y position.\n",
                        "type": "Number",
                        "src": {
                          "name": "19,480,32",
                          "text": "19,480,34,26",
                          "type": "19,480,17"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "width",
                        "text": "The element's width.\n",
                        "type": "Number",
                        "src": {
                          "name": "19,481,32",
                          "text": "19,481,38,21",
                          "type": "19,481,17"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "height",
                        "text": "The element's height.\n",
                        "type": "Number",
                        "src": {
                          "name": "19,482,32",
                          "text": "19,482,39,22",
                          "type": "19,482,17"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "bottom",
                        "text": "The element's lower bound.\n",
                        "type": "Number",
                        "src": {
                          "name": "19,483,32",
                          "text": "19,483,39,27",
                          "type": "19,483,17"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "right",
                        "text": "The element's rightmost bound.\n\nThe returned object may also be addressed as an Array where index 0 contains the X\nposition and index 1 contains the Y position. The result may also be used for\n<a href='#!/api/Ext.grid.column.Action-method-setXY'>setXY</a>\n",
                        "type": "Number",
                        "src": {
                          "name": "19,484,32",
                          "text": "19,484,38,31:19,485,8,177",
                          "type": "19,484,17"
                        }
                      }
                    ],
                    "src": {
                      "text": "19,478,25,24",
                      "type": "19,478,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,490,0",
                  "text": "19,471,8,153"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getBubbleParent",
                "text": "Gets the bubbling parent for an Observable\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The bubble parent. null is returned if no bubble target exists\n",
                    "type": "Ext.util.Observable",
                    "src": {
                      "text": "13,793,41,63",
                      "type": "13,793,20"
                    }
                  }
                ],
                "src": {
                  "access": "13,792,11",
                  "name": "13,795,0",
                  "text": "13,791,11,43"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getBubbleTarget",
                "text": "Implements an upward event bubbling policy. By default a Component bubbles events up to its <a href='#!/api/Ext.grid.column.Action-method-getRefOwner'>getRefOwner</a>.\n\nComponent subclasses may implement a different bubbling strategy by overriding this method.\n",
                "src": {
                  "access": "6,3143,8",
                  "name": "6,3148,0",
                  "text": "6,3144,8,223"
                }
              },
              {
                "$type": "method",
                "name": "getChildByElement",
                "text": "Return the immediate child Component in which the passed element is located.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The element to test (or ID of element).\n",
                    "type": "Ext.dom.Element/HTMLElement/String",
                    "src": {
                      "name": "4,1107,52",
                      "text": "4,1107,55,40",
                      "type": "4,1107,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "deep",
                    "text": "If `true`, returns the deepest descendant Component which contains the passed element.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "4,1108,25",
                      "text": "4,1108,30,87",
                      "type": "4,1108,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The child item which contains the passed element.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1109,32,50",
                      "type": "4,1109,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1111,0",
                  "text": "4,1106,8,77"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getChildItemsToDisable",
                "text": "Gets a list of child components to enable/disable when the container is\nenabled/disabled\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Items to be enabled/disabled\n",
                    "type": "Ext.Component[]",
                    "src": {
                      "text": "4,1926,38,29",
                      "type": "4,1926,21"
                    }
                  }
                ],
                "src": {
                  "access": "4,1925,12",
                  "name": "4,1928,0",
                  "text": "4,1923,12,89"
                }
              },
              {
                "$type": "method",
                "name": "getClientRegion",
                "text": "Returns a region object that defines the client area of this element.\n\nThat is, the area *within* any scrollbars.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "A Region containing \"top, left, bottom, right\" properties.\n",
                    "type": "Ext.util.Region",
                    "src": {
                      "text": "19,732,34,59",
                      "type": "19,732,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,734,0",
                  "text": "19,729,8,114"
                }
              },
              {
                "$type": "method",
                "name": "getColumnCount",
                "text": "Returns the number of <b>grid columns</b> descended from this HeaderContainer.\nGroup Columns are HeaderContainers. All grid columns are returned, including hidden ones.\n",
                "src": {
                  "name": "10,1284,0",
                  "text": "10,1281,8,169"
                }
              },
              {
                "$type": "method",
                "name": "getColumnMenu",
                "text": "Returns an array of menu CheckItems corresponding to all immediate children\nof the passed Container which have been configured as hideable.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "headerContainer",
                    "src": {
                      "name": "10,1245,0"
                    }
                  }
                ],
                "src": {
                  "name": "10,1245,0",
                  "text": "10,1242,8,140"
                }
              },
              {
                "$type": "method",
                "name": "getComponent",
                "since": "2.3.0",
                "text": "Examines this container's <a href='#!/api/Ext.grid.column.Action-property-items'>property-items</a> **property** and gets a direct child\ncomponent of this container.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "comp",
                    "text": "This parameter may be any of the following:\n\n- a **String** : representing the <a href='#!/api/Ext.Component-cfg-itemId'>Ext.Component#itemId</a>\n  or <a href='#!/api/Ext.Component-cfg-id'>Ext.Component#id</a> of the child component.\n- a **Number** : representing the position of the child component\n  within the <a href='#!/api/Ext.grid.column.Action-property-items'>property-items</a> **property**\n\nFor additional information see <a href='#!/api/Ext.util.MixedCollection-method-get'>Ext.util.MixedCollection#get</a>.\n",
                    "type": "String/Number",
                    "src": {
                      "name": "4,1133,31",
                      "text": "4,1133,36,44:4,1134,8,315",
                      "type": "4,1133,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The component (if found).\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1142,32,26",
                      "type": "4,1142,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1146,0",
                  "since": "4,1144,15",
                  "text": "4,1130,8,117"
                }
              },
              {
                "$type": "method",
                "name": "getConstrainRegion",
                "text": "Returns the content region of this element for purposes of constraining or clipping floating\nchildren.  That is the region within the borders and scrollbars, but not within the padding.\n",
                "src": {
                  "name": "19,596,0",
                  "text": "19,593,8,186"
                }
              },
              {
                "$type": "method",
                "name": "getConstrainVector",
                "text": "Returns the `[X, Y]` vector by which this Positionable's element must be translated to make a best\nattempt to constrain within the passed constraint. Returns `false` if the element\ndoes not need to be moved.\n\nPriority is given to constraining the top and left within the constraint.\n\nThe constraint may either be an existing element into which the element is to be\nconstrained, or a <a href='#!/api/Ext.util.Region'>Ext.util.Region</a> into which this element is to be\nconstrained.\n\nBy default, any extra shadow around the element is **not** included in the constrain calculations - the edges\nof the element are used as the element bounds. To constrain the shadow within the constrain region, set the\n`constrainShadow` property on this element to `true`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "constrainTo",
                    "optional": true,
                    "text": "The\nPositionable, HTMLElement, element id, or Region into which the element is to be\nconstrained.\n",
                    "type": "Ext.util.Positionable/HTMLElement/String/Ext.util.Region",
                    "src": {
                      "name": "19,637,75",
                      "text": "19,637,88,4:19,638,8,94",
                      "type": "19,637,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "proposedPosition",
                    "optional": true,
                    "text": "A proposed `[X, Y]` position to test for validity\nand to produce a vector for instead of using the element's current position\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,640,27",
                      "text": "19,640,45,50:19,641,8,76",
                      "type": "19,640,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "proposedSize",
                    "optional": true,
                    "text": "A proposed `[width, height]` size to constrain\ninstead of using the element's current size\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,642,27",
                      "text": "19,642,41,47:19,643,8,44",
                      "type": "19,642,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "**If** the element *needs* to be translated, an `[X, Y]`\nvector by which this element must be translated. Otherwise, `false`.\n",
                    "type": "Number[]/Boolean",
                    "src": {
                      "text": "19,644,35,57:19,645,8,69",
                      "type": "19,644,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,647,0",
                  "text": "19,623,8,734"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getContentTarget",
                "src": {
                  "access": "4,1933,12",
                  "name": "4,1935,0"
                }
              },
              {
                "$type": "method",
                "name": "getController",
                "text": "Returns the <a href='#!/api/Ext.app.ViewController'>Ext.app.ViewController</a> instance associated with this\ncomponent via the <a href='#!/api/Ext.grid.column.Action-cfg-controller'>controller</a> config or <a href='#!/api/Ext.grid.column.Action-setController'>setController</a> method.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Returns this component's ViewController or\nnull if one was not configured\n",
                    "type": "Ext.app.ViewController",
                    "src": {
                      "text": "9,79,45,43:9,80,12,31",
                      "type": "9,79,21"
                    }
                  }
                ],
                "src": {
                  "name": "9,76,20",
                  "text": "9,77,12,152"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getDefaultContentTarget",
                "src": {
                  "access": "4,1940,12",
                  "name": "4,1942,0"
                }
              },
              {
                "$type": "method",
                "name": "getDefaultFocus",
                "text": "Finds the configured default focus item. See <a href='#!/api/Ext.grid.column.Action-cfg-defaultFocus'>defaultFocus</a>.\n",
                "src": {
                  "name": "4,1253,0",
                  "text": "4,1251,8,68"
                }
              },
              {
                "$type": "method",
                "name": "getEditor",
                "text": "Retrieves the editing field for editing associated with this header.  If the\nfield has not been instantiated it will be created.\n\n**Note:** This method will only have an implementation if an Editing plugin has\nbeen enabled on the grid (<a href='#!/api/Ext.grid.plugin.CellEditing'>Ext.grid.plugin.CellEditing</a> /\n<a href='#!/api/Ext.grid.plugin.RowEditing'>Ext.grid.plugin.RowEditing</a>).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "record",
                    "optional": true,
                    "text": "The <a href='#!/api/Ext.data.Model'>Ext.data.Model</a> instance being edited.\n",
                    "type": "Object",
                    "src": {
                      "name": "5,1775,25",
                      "text": "5,1775,33,56",
                      "type": "5,1775,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "defaultField",
                    "optional": true,
                    "text": "An xtype or config object for a\n<a href='#!/api/Ext.form.field.Field'>Ext.form.field.Field</a> to be created as the default editor if it does\nnot already exist\n",
                    "type": "Object/String",
                    "src": {
                      "name": "5,1776,32",
                      "text": "5,1776,46,32:5,1777,8,100",
                      "type": "5,1776,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The editor field associated with\nthis column.  Returns false if there is no field associated with the\n<a href='#!/api/Ext.grid.column.Column'>Ext.grid.column.Column</a>.\n",
                    "type": "Ext.form.field.Field/Boolean",
                    "src": {
                      "text": "5,1779,47,33:5,1780,8,108",
                      "type": "5,1779,17"
                    }
                  }
                ],
                "src": {
                  "name": "5,1767,16",
                  "text": "5,1768,8,335"
                }
              },
              {
                "$type": "method",
                "name": "getEl",
                "since": "1.1.0",
                "text": "Retrieves the top level element representing this component.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Ext.dom.Element",
                    "src": {
                      "type": "6,3163,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3166,0",
                  "since": "6,3164,15",
                  "text": "6,3162,8,61"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getFocusClsEl",
                "text": "Returns the focus styling holder element associated with this Focusable.\nBy default it is the same element as <a href='#!/api/Ext.grid.column.Action-method-getFocusEl'>getFocusEl</a>.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The focus styling element.\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "text": "11,93,30,27",
                      "type": "11,93,17"
                    }
                  }
                ],
                "src": {
                  "access": "11,94,8",
                  "name": "11,96,0",
                  "text": "11,90,8,143"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getFocusEl",
                "text": "Returns the focus holder element associated with this Container.\nBy default, this is the Container's target element; however if <a href='#!/api/Ext.grid.column.Action-cfg-defaultFocus'>defaultFocus</a>\nis defined, the child component referenced by that property will be found\nand returned instead.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "the focus holding element.\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "text": "4,1169,34,27",
                      "type": "4,1169,17"
                    }
                  }
                ],
                "src": {
                  "access": "4,1163,8",
                  "name": "4,1171,0",
                  "text": "4,1164,8,247"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getFocusTask",
                "src": {
                  "access": "11,696,12",
                  "name": "11,698,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getFrameInfo",
                "text": "On render, reads an encoded style attribute, \"filter\" from the style of this Component's element.\nThis information is memoized based upon the CSS class name of this Component's element.\nBecause child Components are rendered as textual HTML as part of the topmost Container, a dummy div is inserted\ninto the document to receive the document element's CSS class name, and therefore style attributes.\n",
                "src": {
                  "access": "20,1172,12",
                  "name": "20,1178,0",
                  "text": "20,1173,12,398"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getFrameTpl",
                "items": [
                  {
                    "$type": "param",
                    "name": "table",
                    "src": {
                      "name": "20,1315,0"
                    }
                  }
                ],
                "src": {
                  "access": "20,1313,12",
                  "name": "20,1315,0"
                }
              },
              {
                "$type": "method",
                "name": "getGridColumns",
                "text": "Returns an array of all columns which exist in the grid's View, visible or not.\nThis goes down to the leaf column header level, and does not return **grouped**\nheaders which contain sub headers.\n\nIt includes hidden headers even though they are not rendered. This is for\ncollection of menu items for the column hide/show menu.\n\nHeaders which have a hidden ancestor have a `hiddenAncestor: true` property\ninjected so that descendants are known to be hidden without interrogating that\nheader's ownerCt axis for a hidden ancestor.\n\nSee also <a href='#!/api/Ext.grid.header.Container-method-getVisibleGridColumns'>Ext.grid.header.Container#getVisibleGridColumns</a>\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "columns An array of columns.  Returns an\nempty array if no columns are found.\n",
                    "type": "Ext.grid.column.Column[]",
                    "src": {
                      "text": "10,1366,43,41:10,1367,8,37",
                      "type": "10,1366,17"
                    }
                  }
                ],
                "src": {
                  "name": "10,1353,16",
                  "text": "10,1354,8,593"
                }
              },
              {
                "$type": "method",
                "name": "getHeaderAtIndex",
                "text": "Get a leaf level header by index regardless of what the nesting\nstructure is.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "text": "The column index for which to retrieve the column.\n",
                    "type": "Number",
                    "src": {
                      "name": "10,1468,24",
                      "text": "10,1468,30,51",
                      "type": "10,1468,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,1470,0",
                  "text": "10,1465,8,79"
                }
              },
              {
                "$type": "method",
                "name": "getHeaderIndex",
                "text": "Returns the index of a leaf level header regardless of what the nesting\nstructure is.\n\nIf a group header is passed, the index of the first leaf level header within it is returned.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "header",
                    "text": "The header to find the index of\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "10,1451,40",
                      "text": "10,1451,47,32",
                      "type": "10,1451,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The index of the specified column header\n",
                    "type": "Number",
                    "src": {
                      "text": "10,1452,25,41",
                      "type": "10,1452,17"
                    }
                  }
                ],
                "src": {
                  "name": "10,1454,0",
                  "text": "10,1446,8,181"
                }
              },
              {
                "$type": "method",
                "name": "getHeight",
                "text": "Gets the current height of the component's underlying element.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number",
                    "src": {
                      "type": "6,3172,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3174,0",
                  "text": "6,3171,8,63"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getHideableColumns",
                "text": "For use by column headers in determining whether there are any hideable columns when deciding whether or not\nthe header menu should be disabled.\n",
                "src": {
                  "access": "10,1431,8",
                  "name": "10,1435,0",
                  "text": "10,1432,8,145"
                }
              },
              {
                "$type": "method",
                "name": "getId",
                "text": "Retrieves the <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> of this component. Will auto-generate an <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> if one has not already been set.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "6,3210,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3212,0",
                  "text": "6,3209,8,98"
                }
              },
              {
                "$type": "method",
                "name": "getIndex",
                "text": "Returns the index of this column only if this column is a base level Column. If it\nis a group column, it returns `false`.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number",
                    "src": {
                      "type": "5,1105,17"
                    }
                  }
                ],
                "src": {
                  "name": "5,1107,0",
                  "text": "5,1103,8,122"
                }
              },
              {
                "$type": "method",
                "name": "getInherited",
                "since": "5.0.0",
                "text": "This method returns an object containing the inherited properties for this instance.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "inner",
                    "optional": true,
                    "text": "Pass `true` to return `inheritedStateInner` instead\nof the normal `inheritedState` object. This is only needed internally and should\nnot be passed by user code.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "23,88,26",
                      "text": "23,88,39,52:23,89,8,110",
                      "type": "23,88,16",
                      "value": "23,88,32"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The `inheritedState` object containing inherited properties.\n",
                    "type": "Object",
                    "src": {
                      "text": "23,92,25,61",
                      "type": "23,92,17"
                    }
                  }
                ],
                "src": {
                  "name": "23,95,0",
                  "since": "23,93,15",
                  "text": "23,86,8,86"
                }
              },
              {
                "$type": "method",
                "name": "getInheritedConfig",
                "since": "5.0.0",
                "text": "This method returns the value of a config property that may be inherited from some\nancestor.\n\nIn some cases, a config may be explicitly set on a component with the intent of\n*only* being presented to its children while that component should act upon the\ninherited value (see <a href='#!/api/Ext.grid.column.Action-cfg-referenceHolder'>referenceHolder</a> for example). In these cases the `skipThis`\nparameter should be specified as `true`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "property",
                    "text": "The name of the config property to return.\n",
                    "type": "String",
                    "src": {
                      "name": "23,152,24",
                      "text": "23,152,33,43",
                      "type": "23,152,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "skipThis",
                    "optional": true,
                    "text": "Pass `true` if the property should be ignored if\nfound on this instance. In other words, `true` means the property must be inherited\nand not explicitly set on this instance.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "23,153,26",
                      "text": "23,153,42,49:23,154,8,125",
                      "type": "23,153,16",
                      "value": "23,153,35"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The value of the requested `property`.\n",
                    "type": "Mixed",
                    "src": {
                      "text": "23,156,24,39",
                      "type": "23,156,17"
                    }
                  }
                ],
                "src": {
                  "name": "23,159,0",
                  "since": "23,157,15",
                  "text": "23,144,8,379"
                }
              },
              {
                "$type": "method",
                "name": "getInsertPosition",
                "text": "This function takes the position argument passed to onRender and returns a\nDOM element that you can use in the insertBefore.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "position",
                    "text": "Index, element id or element you want\nto put this component before.\n",
                    "type": "String/Number/Ext.dom.Element/HTMLElement",
                    "src": {
                      "name": "20,564,59",
                      "text": "20,564,68,38:20,565,8,30",
                      "type": "20,564,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "DOM element that you can use in the insertBefore\n",
                    "type": "HTMLElement",
                    "src": {
                      "text": "20,566,30,49",
                      "type": "20,566,17"
                    }
                  }
                ],
                "src": {
                  "name": "20,568,0",
                  "text": "20,562,8,125"
                }
              },
              {
                "$type": "method",
                "name": "getItemId",
                "text": "Returns the value of <a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a> assigned to this component, or when that\nis not set, returns the value of <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a>.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "6,3233,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3235,0",
                  "text": "6,3231,8,124"
                }
              },
              {
                "$type": "method",
                "name": "getLayout",
                "text": "Returns the <a href='#!/api/Ext.layout.container.Container'>Ext.layout.container.Container</a> instance currently associated with this Container.\nIf a layout has not been instantiated yet, that is done first\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The layout\n",
                    "type": "Ext.layout.container.Container",
                    "src": {
                      "text": "4,1192,49,11",
                      "type": "4,1192,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1194,0",
                  "text": "4,1190,8,171"
                }
              },
              {
                "$type": "method",
                "name": "getLoader",
                "text": "Gets the <a href='#!/api/Ext.ComponentLoader'>Ext.ComponentLoader</a> for this Component.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The loader instance, null if it doesn't exist.\n",
                    "type": "Ext.ComponentLoader",
                    "src": {
                      "text": "6,3241,38,47",
                      "type": "6,3241,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3243,0",
                  "text": "6,3240,8,57"
                }
              },
              {
                "$type": "method",
                "name": "getLocalX",
                "text": "Returns the x coordinate of this element reletive to its `offsetParent`.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The local x coordinate\n",
                    "type": "Number",
                    "src": {
                      "text": "19,55,25,23",
                      "type": "19,55,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,57,0",
                  "text": "19,54,8,73"
                }
              },
              {
                "$type": "method",
                "name": "getLocalXY",
                "text": "Returns the x and y coordinates of this element relative to its `offsetParent`.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The local XY position of the element\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,63,27,37",
                      "type": "19,63,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,65,0",
                  "text": "19,62,8,80"
                }
              },
              {
                "$type": "method",
                "name": "getLocalY",
                "text": "Returns the y coordinate of this element reletive to its `offsetParent`.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The local y coordinate\n",
                    "type": "Number",
                    "src": {
                      "text": "19,71,25,23",
                      "type": "19,71,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,73,0",
                  "text": "19,70,8,73"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getMaskTarget",
                "text": "Returns the element which is masked by the <a href='#!/api/Ext.grid.column.Action-method-mask'>mask</a> method, or into which the <a href='#!/api/Ext.grid.column.Action-method-setLoading'>setLoading</a> is rendered into.\n\nThe default implementation uses the <a href='#!/api/Ext.grid.column.Action-cfg-maskElement'>maskElement</a> configuration to access the Component's child element by name. By default, <a href='#!/api/Ext.grid.column.Action-cfg-maskElement'>maskElement</a>\nis <a href='#!/api/null'>null</a> which means that <a href='#!/api/null'>null</a> is returned from this method indicating that the mask needs to be rendered into the document because\ncomponent structure should not be contaminated by mask elements.\n\nSome subclasses may override this method if they have knowledge about external structures where a mask could usefully be rendered.\n\nFor example a <a href='#!/api/Ext.view.Table'>Ext.view.Table</a> will request that its owning <a href='#!/api/Ext.panel.Table'>Ext.panel.Table</a> be masked. The\nGridPanel will have its own implementation of <a href='#!/api/Ext.grid.column.Action-method-getMaskTarget'>getMaskTarget</a> which will return the element dictated by its own <a href='#!/api/Ext.grid.column.Action-cfg-maskElement'>maskElement</a>\nPanels use `\"el\"` as their <a href='#!/api/Ext.grid.column.Action-cfg-maskElement'>maskElement</a> by default, but that could be overridden to be `\"body\"` to leave toolbars and the header\nmouse-accessible.\n",
                "src": {
                  "access": "6,3262,8",
                  "name": "6,3277,0",
                  "text": "6,3263,8,1030"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getMenu",
                "text": "Gets the menu (and will create it if it doesn't already exist)\n",
                "src": {
                  "access": "10,1118,8",
                  "name": "10,1120,0",
                  "text": "10,1117,8,63"
                }
              },
              {
                "$type": "method",
                "name": "getMenuItems",
                "text": "Returns an array of menu items to be placed into the shared menu\nacross all headers in this header container.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "menuItems\n",
                    "type": "Array",
                    "src": {
                      "text": "10,1185,24,10",
                      "type": "10,1185,17"
                    }
                  }
                ],
                "src": {
                  "name": "10,1187,0",
                  "text": "10,1183,8,110"
                }
              },
              {
                "$type": "method",
                "name": "getOffsetsTo",
                "text": "Returns the offsets of this element from the passed element. The element must both\nbe part of the DOM tree and not have display:none to have page coordinates.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "offsetsTo",
                    "text": "The Positionable,\nHTMLElement, or element id to get get the offsets from.\n",
                    "type": "Ext.util.Positionable/HTMLElement/String",
                    "src": {
                      "name": "19,709,59",
                      "text": "19,709,69,18:19,710,9,56",
                      "type": "19,709,17"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The XY page offsets (e.g. `[100, -200]`)\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,711,28,41",
                      "type": "19,711,18"
                    }
                  }
                ],
                "src": {
                  "name": "19,713,0",
                  "text": "19,707,9,159"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getOverflowEl",
                "text": "Get an el for overflowing, defaults to the target el\n",
                "src": {
                  "access": "6,6147,12",
                  "name": "6,6149,0",
                  "text": "6,6146,12,53"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getOverflowStyle",
                "text": "Returns the CSS style object which will set the Component's scroll styles.\nThis must be applied to the <a href='#!/api/Ext.grid.column.Action-method-getTargetEl'>getTargetEl</a>.\n",
                "src": {
                  "access": "6,6154,12",
                  "name": "6,6158,0",
                  "text": "6,6155,12,140"
                }
              },
              {
                "$type": "method",
                "name": "getPlugin",
                "text": "Retrieves a plugin from this component's collection by its `pluginId`.\n\n    var grid = Ext.create('Ext.grid.Panel', {\n        store: {\n            fields: ['name'],\n            data: [{\n                name: 'Scott Pilgrim'\n            }]\n        },\n        columns: [{\n            header: 'Name',\n            dataIndex: 'name',\n            editor: 'textfield',\n            flex: 1\n        }],\n        selType: 'cellmodel',\n        plugins: {\n            ptype: 'cellediting',\n            clicksToEdit: 1,\n            pluginId: 'myplugin'\n        },\n        height: 200,\n        width: 400,\n        renderTo: Ext.getBody()\n    });\n\n    grid.getPlugin('myplugin');  // the cellediting plugin\n\n**Note:** See also <a href='#!/api/Ext.grid.column.Action-method-findPlugin'>findPlugin</a>\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "pluginId",
                    "text": "The `pluginId` set on the plugin config object\n",
                    "type": "String",
                    "src": {
                      "name": "6,3312,24",
                      "text": "6,3312,33,47",
                      "type": "6,3312,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "plugin instance or <a href='#!/api/null'>null</a> if not found\n",
                    "type": "Ext.plugin.Abstract",
                    "src": {
                      "text": "6,3313,38,39",
                      "type": "6,3313,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3315,0",
                  "text": "6,3282,8,732"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getPlugins",
                "text": "Returns an array of current fully constructed plugin instances.\n",
                "src": {
                  "access": "6,6188,12",
                  "name": "6,6190,0",
                  "text": "6,6187,12,64"
                }
              },
              {
                "$type": "method",
                "name": "getPosition",
                "text": "Gets the current XY position of the component's underlying element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "local",
                    "optional": true,
                    "text": "If true the element's left and top are returned instead of page XY.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "6,3330,26",
                      "text": "6,3330,39,68",
                      "type": "6,3330,16",
                      "value": "6,3330,32"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The XY position of the element (e.g., [100, 200])\n",
                    "type": "Number[]",
                    "src": {
                      "text": "6,3331,27,50",
                      "type": "6,3331,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3333,0",
                  "text": "6,3329,8,68"
                }
              },
              {
                "$type": "method",
                "name": "getReferences",
                "since": "5.0.0",
                "text": "Returns an object holding the descendants of this view keyed by their\n<a href='#!/api/Ext.Component-cfg-reference'>Ext.Component#cfg-reference</a>. This object should not be held\npast the scope of the function calling this method. It will not be valid if items\nare added or removed from this or any sub-container.\n\nThe intended usage is shown here (assume there are 3 components with reference\nvalues of \"foo\", \"bar\" and \"baz\" at some level below this container):\n\n     onClick: function () {\n         var refs = this.getReferences();\n\n         // using \"refs\" we can access any descendant by its \"reference\"\n\n         refs.foo.getValue() + refs.bar.getValue() + refs.baz.getValue();\n     }\n\nIf `this` component has a <a href='#!/api/Ext.Component-cfg-reference'>Ext.Component#cfg-reference</a> assigned\nto it, that is **not** included in this object. That reference is understood to\nbelong to the ancestor container configured as the <a href='#!/api/Ext.grid.column.Action-cfg-referenceHolder'>referenceHolder</a>.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "An object with each child reference. This will be <a href='#!/api/null'>null</a> if this\ncontainer has no descendants with a <a href='#!/api/Ext.Component-cfg-reference'>Ext.Component#cfg-reference</a>\nspecified.\n",
                    "type": "Object",
                    "src": {
                      "text": "15,52,25,65:15,53,8,95",
                      "type": "15,52,17"
                    }
                  }
                ],
                "src": {
                  "name": "15,57,0",
                  "since": "15,55,15",
                  "text": "15,32,8,897"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getRefItems",
                "text": "Used by <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a>, <a href='#!/api/Ext.grid.column.Action-method-child'>child</a> and <a href='#!/api/Ext.grid.column.Action-method-down'>down</a> to retrieve all of the items\nwhich can potentially be considered a child of this Container.\n\nThis may be overriden by Components which have ownership of Components\nthat are not contained in the <a href='#!/api/Ext.grid.column.Action-property-items'>property-items</a> collection.\n\nNOTE: IMPORTANT note for maintainers:\nItems are returned in tree traversal order. Each item is appended to the result array\nfollowed by the results of that child's getRefItems call.\nFloating child items are appended after internal child items.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "deep",
                    "src": {
                      "name": "4,1218,0"
                    }
                  }
                ],
                "src": {
                  "access": "4,1206,8",
                  "name": "4,1218,0",
                  "text": "4,1207,8,559"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getRefOwner",
                "text": "Used by <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a>, and the <a href='#!/api/Ext.Component-method-up'>Ext.Component#up</a>\nmethod to find the owning Component in the linkage hierarchy.\n\nBy default this returns the Container which contains this Component.\n\nThis may be overridden by Component authors who implement ownership hierarchies\nwhich are not based upon ownerCt, such as BoundLists being owned by Fields or Menus\nbeing owned by Buttons.\n",
                "src": {
                  "access": "23,285,8",
                  "name": "23,287,0",
                  "text": "23,277,8,408"
                }
              },
              {
                "$type": "method",
                "name": "getRegion",
                "text": "Returns a region object that defines the area of this element.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "A Region containing \"top, left, bottom, right\" properties.\n",
                    "type": "Ext.util.Region",
                    "src": {
                      "text": "19,721,34,59",
                      "type": "19,721,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,723,0",
                  "text": "19,720,8,63"
                }
              },
              {
                "$type": "method",
                "name": "getScrollX",
                "text": "Returns the \"x\" scroll position for this component.  Only applicable for\n<a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a> components\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number",
                    "src": {
                      "type": "6,3358,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3360,0",
                  "text": "6,3356,8,104"
                }
              },
              {
                "$type": "method",
                "name": "getScrollY",
                "text": "Returns the \"y\" scroll position for this component.  Only applicable for\n<a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a> components\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number",
                    "src": {
                      "type": "6,3368,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3370,0",
                  "text": "6,3366,8,104"
                }
              },
              {
                "$type": "method",
                "name": "getSize",
                "text": "Gets the current size of the component's underlying element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "contentSize",
                    "optional": true,
                    "text": "true to get the width/size minus borders and padding\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,3377,26",
                      "text": "6,3377,39,53",
                      "type": "6,3377,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "An object containing the element's size:\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "width",
                        "type": "Number",
                        "src": {
                          "name": "6,3379,32",
                          "type": "6,3379,17"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "height",
                        "type": "Number",
                        "src": {
                          "name": "6,3380,32",
                          "type": "6,3380,17"
                        }
                      }
                    ],
                    "src": {
                      "text": "6,3378,25,41",
                      "type": "6,3378,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3382,0",
                  "text": "6,3376,8,61"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getSizeModel",
                "text": "Returns an object that describes how this component's width and height are managed.\nAll of these objects are shared and should not be modified.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The size model for this component.\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "width",
                        "text": "The <a href='#!/api/Ext.layout.SizeModel'>Ext.layout.SizeModel</a>\nfor the width.\n",
                        "type": "Ext.layout.SizeModel",
                        "src": {
                          "name": "6,3391,46",
                          "text": "6,3391,52,44:6,3392,8,15",
                          "type": "6,3391,17"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "height",
                        "text": "The <a href='#!/api/Ext.layout.SizeModel'>Ext.layout.SizeModel</a>\nfor the height.\n",
                        "type": "Ext.layout.SizeModel",
                        "src": {
                          "name": "6,3393,46",
                          "text": "6,3393,53,44:6,3394,8,16",
                          "type": "6,3393,17"
                        }
                      }
                    ],
                    "src": {
                      "text": "6,3390,25,35",
                      "type": "6,3390,17"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "ownerCtSizeModel",
                    "src": {
                      "name": "6,3397,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,3395,8",
                  "name": "6,3397,0",
                  "text": "6,3387,8,145"
                }
              },
              {
                "$type": "method",
                "name": "getSortParam",
                "text": "Returns the parameter to sort upon when sorting this header. By default this returns the dataIndex and will not\nneed to be overridden in most cases.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "5,1399,17"
                    }
                  }
                ],
                "src": {
                  "name": "5,1401,0",
                  "text": "5,1397,8,149"
                }
              },
              {
                "$type": "method",
                "name": "getState",
                "text": "The supplied default state gathering method for the Component class.\n\nThis method returns dimension settings such as <a href='#!/api/Ext.grid.column.Action-cfg-flex'>flex</a>, <a href='#!/api/Ext.grid.column.Action-cfg-anchor'>anchor</a>, <a href='#!/api/Ext.grid.column.Action-cfg-width'>width</a> and <a href='#!/api/Ext.grid.column.Action-cfg-height'>height</a> along with `collapsed`\nstate.\n\nSubclasses which implement more complex state should call the superclass's implementation, and apply their state\nto the result if this basic state is to be saved.\n\nNote that Component state will only be saved if the Component has a <a href='#!/api/Ext.grid.column.Action-cfg-stateId'>stateId</a> and there as a StateProvider\nconfigured for the document.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "6,3526,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3528,0",
                  "text": "6,3515,8,495"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getStateId",
                "text": "Gets the state id for this object.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The 'stateId' or the implicit 'id' specified by component configuration.\n",
                    "type": "String",
                    "src": {
                      "text": "16,268,25,73",
                      "type": "16,268,17"
                    }
                  }
                ],
                "src": {
                  "access": "16,269,8",
                  "name": "16,271,0",
                  "text": "16,267,8,35"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getStyleProxy",
                "text": "Returns an offscreen div with the same class name as the element this is being rendered.\nThis is because child item rendering takes place in a detached div which, being not\npart of the document, has no styling.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cls",
                    "src": {
                      "name": "20,1295,0"
                    }
                  }
                ],
                "src": {
                  "access": "20,1290,12",
                  "name": "20,1295,0",
                  "text": "20,1291,12,211"
                }
              },
              {
                "$type": "method",
                "name": "getTabIndex",
                "text": "Return the actual tabIndex for this Focusable.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "tabIndex attribute value\n",
                    "type": "Number",
                    "src": {
                      "text": "11,415,25,25",
                      "type": "11,415,17"
                    }
                  }
                ],
                "src": {
                  "name": "11,417,0",
                  "text": "11,413,8,48"
                }
              },
              {
                "$type": "method",
                "name": "getTableWidth",
                "text": "Gets the full width of all columns that are visible for setting width of tables.\n",
                "src": {
                  "name": "10,1291,0",
                  "text": "10,1289,8,81"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getTargetEl",
                "text": "This is used to determine where to insert the 'html', 'contentEl' and 'items' in this component.\n",
                "src": {
                  "access": "6,6217,12",
                  "name": "6,6219,0",
                  "text": "6,6216,12,97"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getTdCls",
                "text": "Needed for when widget is rendered into a grid cell. The class to add to the cell element.\n",
                "src": {
                  "access": "6,6224,12",
                  "name": "6,6227,0",
                  "text": "6,6225,12,91"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getTdType",
                "text": "Partner method to <a href='#!/api/Ext.grid.column.Action-method-getTdCls'>getTdCls</a>.\n\nReturns the base type for the component. Defaults to return `this.xtype`, but\nAll derived classes of <a href='#!/api/Ext.form.field.Text'>Ext.form.field.Text</a> can return the type 'textfield',\nand all derived classes of <a href='#!/api/Ext.button.Button'>Ext.button.Button</a> can return the type 'button'\n",
                "src": {
                  "access": "6,6232,12",
                  "name": "6,6239,0",
                  "text": "6,6233,12,299"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getTopAlignTarget",
                "text": "Gets the topmost *non floating* alignTo target if there are multiple aligns\nsuch as a menu stack hanging off a button or grid column header.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The topmost, *non floating* alignTo target.\n",
                    "type": "Ext.dom.Element/Ext.Component",
                    "src": {
                      "text": "3,622,48,44",
                      "type": "3,622,21"
                    }
                  }
                ],
                "src": {
                  "access": "3,623,12",
                  "name": "3,625,0",
                  "text": "3,620,12,141"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getTpl",
                "items": [
                  {
                    "$type": "param",
                    "name": "name",
                    "src": {
                      "name": "6,6246,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,6244,12",
                  "name": "6,6246,0"
                }
              },
              {
                "$type": "method",
                "name": "getViewRegion",
                "text": "Returns the **content** region of this element. That is the region within the borders\nand padding.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "A Region containing \"top, left, bottom, right\" member data.\n",
                    "type": "Ext.util.Region",
                    "src": {
                      "text": "19,765,34,60",
                      "type": "19,765,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,767,0",
                  "text": "19,763,8,99"
                }
              },
              {
                "$type": "method",
                "name": "getVisibleGridColumns",
                "text": "Returns an array of the **visible** columns in the grid. This goes down to the\nlowest column header level, and does not return **grouped** headers which contain\nsub headers.\n\nSee also <a href='#!/api/Ext.grid.header.Container-method-getGridColumns'>Ext.grid.header.Container#getGridColumns</a>\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "columns An array of visible columns.  Returns\nan empty array if no visible columns are found.\n",
                    "type": "Ext.grid.column.Column[]",
                    "src": {
                      "text": "10,1309,43,46:10,1310,8,48",
                      "type": "10,1309,17"
                    }
                  }
                ],
                "src": {
                  "name": "10,1312,0",
                  "text": "10,1304,8,233"
                }
              },
              {
                "$type": "method",
                "name": "getVisibleHeaderClosestToIndex",
                "text": "When passed a column index, returns the closet *visible* column to that. If the column at the passed index is visible,\nthat is returned. If it is hidden, either the next visible, or the previous visible column is returned.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "text": "Position at which to find the closest visible column.\n",
                    "type": "Number",
                    "src": {
                      "name": "10,1484,24",
                      "text": "10,1484,30,54",
                      "type": "10,1484,16"
                    }
                  }
                ],
                "src": {
                  "name": "10,1486,0",
                  "text": "10,1481,8,224"
                }
              },
              {
                "$type": "method",
                "name": "getVisibleIndex",
                "text": "Returns the index of this column in the list of *visible* columns only if this column is a base level Column. If it\nis a group column, it returns `false`.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number",
                    "src": {
                      "type": "5,1114,17"
                    }
                  }
                ],
                "src": {
                  "name": "5,1116,0",
                  "text": "5,1112,8,155"
                }
              },
              {
                "$type": "method",
                "name": "getWidth",
                "text": "Gets the current width of the component's underlying element.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number",
                    "src": {
                      "type": "6,3564,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3566,0",
                  "text": "6,3563,8,62"
                }
              },
              {
                "$type": "method",
                "name": "getX",
                "text": "Gets the current X position of the DOM element based on page coordinates.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The X position of the element\n",
                    "type": "Number",
                    "src": {
                      "text": "19,79,25,30",
                      "type": "19,79,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,81,0",
                  "text": "19,78,8,74"
                }
              },
              {
                "$type": "method",
                "name": "getXType",
                "text": "Gets the xtype for this component as registered with <a href='#!/api/Ext.ComponentManager'>Ext.ComponentManager</a>. For a list of all available\nxtypes, see the <a href='#!/api/Ext.Component'>Ext.Component</a> header. Example usage:\n\n    var t = new Ext.form.field.Text();\n    alert(t.getXType());  // alerts 'textfield'\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The xtype\n",
                    "type": "String",
                    "src": {
                      "text": "6,3577,25,10",
                      "type": "6,3577,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3579,0",
                  "text": "6,3571,8,261"
                }
              },
              {
                "$type": "method",
                "name": "getXTypes",
                "since": "2.3.0",
                "text": "Returns this Component's xtype hierarchy as a slash-delimited string. For a list of all available xtypes, see the\n<a href='#!/api/Ext.Component'>Ext.Component</a> header.\n\n**If using your own subclasses, be aware that a Component must register its own xtype to participate in\ndetermination of inherited xtypes.**\n\nExample usage:\n\n    @example\n    var t = new Ext.form.field.Text();\n    alert(t.getXTypes());  // alerts 'component/field/textfield'\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The xtype hierarchy string\n",
                    "type": "String",
                    "src": {
                      "text": "6,3596,25,27",
                      "type": "6,3596,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3600,0",
                  "since": "6,3598,15",
                  "text": "6,3584,8,421"
                }
              },
              {
                "$type": "method",
                "name": "getXY",
                "text": "Gets the current position of the DOM element based on page coordinates.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The XY position of the element\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,87,27,31",
                      "type": "19,87,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,89,0",
                  "text": "19,86,8,72"
                }
              },
              {
                "$type": "method",
                "name": "getY",
                "text": "Gets the current Y position of the DOM element based on page coordinates.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The Y position of the element\n",
                    "type": "Number",
                    "src": {
                      "text": "19,95,25,30",
                      "type": "19,95,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,97,0",
                  "text": "19,94,8,74"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "handleBlurEvent",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "11,731,0"
                    }
                  }
                ],
                "src": {
                  "access": "11,729,12",
                  "name": "11,731,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "handleFocusEvent",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "11,709,0"
                    }
                  }
                ],
                "src": {
                  "access": "11,707,12",
                  "name": "11,709,0"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Replaced by <a href='#!/api/Ext.grid.column.Action-getActiveAnimation'>getActiveAnimation</a>\n",
                "deprecatedVersion": "4.0",
                "inheritdoc": "Ext.util.Animate#getActiveAnimation",
                "name": "hasActiveFx",
                "src": {
                  "deprecatedMessage": "21,362,8",
                  "deprecatedVersion": "21,362,8",
                  "inheritdoc": "21,363,8",
                  "name": "21,366,0"
                }
              },
              {
                "$type": "method",
                "name": "hasCls",
                "text": "Checks if the specified CSS class exists on this element's DOM node.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "className",
                    "text": "The CSS class to check for.\n",
                    "type": "String",
                    "src": {
                      "name": "6,3627,24",
                      "text": "6,3627,34,28",
                      "type": "6,3627,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if the class exists, else `false`.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3628,26,42",
                      "type": "6,3628,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3631,0",
                  "text": "6,3626,8,69"
                }
              },
              {
                "$type": "method",
                "name": "hasListener",
                "text": "Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to check for\n",
                    "type": "String",
                    "src": {
                      "name": "13,1334,27",
                      "text": "13,1334,37,35",
                      "type": "13,1334,19"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if the event is being listened for or bubbles, else `false`\n",
                    "type": "Boolean",
                    "src": {
                      "text": "13,1335,29,67",
                      "type": "13,1335,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1337,0",
                  "text": "13,1331,11,161"
                }
              },
              {
                "$type": "method",
                "name": "hasOwnProperty",
                "text": "Returns a boolean indicating whether an object contains the specified property as a direct property\nof that object and not inherited through the prototype chain.\n\nEvery object descended from <a href='#!/api/Object'>Object</a> inherits the <a href='#!/api/Ext.grid.column.Action-method-hasOwnProperty'>hasOwnProperty</a> method. This method can be used\nto determine whether an object has the specified property as a direct property of that object;\nunlike the `in` operator, this method does not check down the object's prototype chain.\n\nThe following example determines whether the o object contains a property named prop:\n\n    o = new Object();\n    o.prop = 'exists';\n\n    function changeO() {\n        o.newprop = o.prop;\n        delete o.prop;\n    }\n\n    o.hasOwnProperty('prop');   //returns true\n    changeO();\n    o.hasOwnProperty('prop');   //returns false\n\nThe following example differentiates between direct properties and properties inherited through the\nprototype chain:\n\n    o = new Object();\n    o.prop = 'exists';\n    o.hasOwnProperty('prop');             // returns true\n    o.hasOwnProperty('toString');         // returns false\n    o.hasOwnProperty('hasOwnProperty');   // returns false\n\nThe following example shows how to iterate over the properties of an object without executing on\ninherit properties.\n\n    var buz = {\n        fog: 'stack'\n    };\n\n    for (var name in buz) {\n        if (buz.hasOwnProperty(name)) {\n            alert(\"this is fog (\" + name + \") for sure. Value: \" + buz[name]);\n        }\n        else {\n            alert(name); // toString or something else\n        }\n    }\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "prop",
                    "text": "The name of the property to test.\n",
                    "type": "String",
                    "src": {
                      "name": "24,100,20",
                      "text": "24,100,25,34",
                      "type": "24,100,12"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Returns true if object contains specified property; else\nreturns false.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "24,101,22,57:24,102,4,15",
                      "type": "24,101,13"
                    }
                  }
                ],
                "src": {
                  "name": "24,53,12",
                  "text": "24,54,4,1520"
                }
              },
              {
                "$type": "method",
                "name": "hasUICls",
                "text": "Checks if there is currently a specified <a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cls",
                    "text": "The <a href='#!/api/Ext.grid.column.Action-cfg-cls'>cls</a> to check.\n",
                    "type": "String",
                    "src": {
                      "name": "6,3638,24",
                      "text": "6,3638,28,20",
                      "type": "6,3638,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,3640,0",
                  "text": "6,3637,8,50"
                }
              },
              {
                "$type": "method",
                "name": "hide",
                "text": "Hides this Component, setting it to invisible using the configured <a href='#!/api/Ext.grid.column.Action-cfg-hideMode'>hideMode</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "animateTarget",
                    "optional": true,
                    "text": "**only valid for <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> Components\nsuch as <a href='#!/api/Ext.window.Window'>Ext.window.Window</a>s or <a href='#!/api/Ext.tip.ToolTip'>Ext.tip.ToolTip</a>s, or regular Components which have\nbeen configured with `floating: true`.**. The target to which the Component should animate while hiding.\n",
                    "type": "String/Ext.dom.Element/Ext.Component",
                    "value": "null",
                    "src": {
                      "name": "6,3649,55",
                      "text": "6,3649,75,50:6,3650,8,217",
                      "type": "6,3649,16",
                      "value": "6,3649,69"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "text": "A callback function to call after the Component is hidden.\n",
                    "type": "Function",
                    "src": {
                      "name": "6,3652,27",
                      "text": "6,3652,37,59",
                      "type": "6,3652,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope (`this` reference) in which the callback is executed.\nDefaults to this Component.\n",
                    "type": "Object",
                    "src": {
                      "name": "6,3653,25",
                      "text": "6,3653,32,64:6,3654,8,28",
                      "type": "6,3653,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,3655,32,5",
                      "type": "6,3655,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3657,0",
                  "text": "6,3648,8,86"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initBindable",
                "since": "5.0.0",
                "text": "This method triggers the lazy configs and must be called when it is time to\nfully boot up. The configs that must be initialized are: <a href='#!/api/Ext.grid.column.Action-cfg-bind'>bind</a>, <a href='#!/api/Ext.grid.column.Action-cfg-publishes'>publishes</a>,\n<a href='#!/api/Ext.grid.column.Action-cfg-session'>session</a>, <a href='#!/api/Ext.grid.column.Action-cfg-twoWayBindable'>twoWayBindable</a> and <a href='#!/api/Ext.grid.column.Action-cfg-viewModel'>viewModel</a>.\n",
                "src": {
                  "access": "9,723,12",
                  "name": "9,726,0",
                  "since": "9,724,19",
                  "text": "9,720,12,199"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "initComponent",
                "since": "1.1.0",
                "template": true,
                "text": "The initComponent template method is an important initialization step for a Component. It is intended to be\nimplemented by each subclass of Ext.Component to provide any needed constructor logic. The\ninitComponent method of the class being created is called first, with each initComponent method\nup the hierarchy to Ext.Component being called thereafter. This makes it easy to implement and,\nif needed, override the constructor logic of the Component at any step in the hierarchy.\n\nThe initComponent method **must** contain a call to <a href='#!/api/Ext.Base-callParent'>callParent</a> in order\nto ensure that the parent class' initComponent method is also called.\n\nAll config options passed to the constructor are applied to `this` before initComponent is called,\nso you can simply access them with `this.someOption`.\n\nThe following example demonstrates using a dynamic string for the text of a button at the time of\ninstantiation of the class.\n\n    Ext.define('DynamicButtonText', {\n        extend: 'Ext.button.Button',\n\n        initComponent: function() {\n            this.text = new Date();\n            this.renderTo = Ext.getBody();\n            this.callParent();\n        }\n    });\n\n    Ext.onReady(function() {\n        Ext.create('DynamicButtonText');\n    });\n",
                "src": {
                  "access": "6,3714,8",
                  "name": "6,3717,0",
                  "since": "6,3715,15",
                  "template": "6,3713,8",
                  "text": "6,3684,8,1253"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "initEvents",
                "text": "Initialize any events on this component\n",
                "src": {
                  "access": "6,3748,8",
                  "name": "6,3750,0",
                  "text": "6,3747,8,40"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initFocusableElement",
                "text": "Sets up the focus listener on this Component's <a href='#!/api/Ext.grid.column.Action-method-getFocusEl'>getFocusEl</a> if it has one.\n\nForm Components which must implicitly participate in tabbing order usually have a naturally\nfocusable element as their <a href='#!/api/Ext.grid.column.Action-method-getFocusEl'>getFocusEl</a>, and it is the DOM event of that\nreceiving focus which drives the Component's <a href='#!/api/Ext.grid.column.Action-method-onFocus'>onFocus</a> handling, and the DOM event of it\nbeing blurred which drives the <a href='#!/api/Ext.grid.column.Action-method-onBlur'>onBlur</a> handling.\n",
                "src": {
                  "access": "11,666,12",
                  "name": "11,668,0",
                  "text": "11,660,12,410"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "initFocusableEvents",
                "text": "Template method to do any event listener initialization for a Focusable.\nThis generally happens after the focusEl is available.\n",
                "src": {
                  "access": "11,81,8",
                  "name": "11,83,0",
                  "text": "11,79,8,128"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "initInheritedState",
                "text": "Called by <a href='#!/api/Ext.grid.column.Action-method-getInherited'>getInherited</a> to initialize the inheritedState the first time it is\nrequested.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "inheritedState",
                    "src": {
                      "name": "4,1328,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "inheritedStateInner",
                    "src": {
                      "name": "4,1328,0"
                    }
                  }
                ],
                "src": {
                  "access": "4,1326,8",
                  "name": "4,1328,0",
                  "text": "4,1324,8,90"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "initItems",
                "text": "This method is called to initialize the `items` collection. A derived class can\noverride this method to do any last minute manipulation of `items` and then call\nthis method using `callParent`. Upon return, the `items` will no longer be a simple\narray.\n",
                "src": {
                  "access": "4,1290,8",
                  "name": "4,1292,0",
                  "text": "4,1286,8,252"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initPadding",
                "text": "Initializes padding by applying it to the target element, or if the layout manages\npadding ensures that the padding on the target element is \"0\".\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "targetEl",
                    "src": {
                      "name": "6,6308,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,6306,12",
                  "name": "6,6308,0",
                  "text": "6,6304,12,146"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initPlugin",
                "items": [
                  {
                    "$type": "param",
                    "name": "plugin",
                    "src": {
                      "name": "6,6333,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,6331,12",
                  "name": "6,6333,0"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "initRenderData",
                "text": "Initialized the renderData to be used when rendering the renderTpl.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Object with keys and values that are going to be applied to the renderTpl\n",
                    "type": "Object",
                    "src": {
                      "text": "20,613,25,74",
                      "type": "20,613,17"
                    }
                  }
                ],
                "src": {
                  "access": "20,614,8",
                  "name": "20,616,0",
                  "text": "20,612,8,68"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initRenderTpl",
                "text": "Initializes the renderTpl.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The renderTpl XTemplate instance.\n",
                    "type": "Ext.XTemplate",
                    "src": {
                      "text": "20,1393,36,34",
                      "type": "20,1393,21"
                    }
                  }
                ],
                "src": {
                  "access": "20,1394,12",
                  "name": "20,1396,0",
                  "text": "20,1392,12,27"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initState",
                "text": "Initializes the state of the object upon construction.\n",
                "src": {
                  "access": "16,278,8",
                  "name": "16,280,0",
                  "text": "16,277,8,55"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initStyles",
                "text": "Applies padding, margin, border, top, left, height, and width configs to the\nappropriate elements.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "targetEl",
                    "src": {
                      "name": "6,6357,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,6355,12",
                  "name": "6,6357,0",
                  "text": "6,6353,12,99"
                }
              },
              {
                "$type": "method",
                "name": "insert",
                "since": "2.3.0",
                "text": "Inserts a Component into this Container at a specified index. Fires the\n<a href='#!/api/Ext.grid.column.Action-event-beforeadd'>beforeadd</a> event before inserting, then fires the <a href='#!/api/Ext.grid.column.Action-event-add'>event-add</a>\nevent after the Component has been inserted.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "text": "The index at which the Component will be inserted\ninto the Container's items collection\n",
                    "type": "Number",
                    "src": {
                      "name": "4,1357,24",
                      "text": "4,1357,30,50:4,1358,8,39",
                      "type": "4,1357,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The child Component or config object to insert.\n\nExt uses lazy rendering, and will only render the inserted Component should\nit become necessary.\n\nA Component config object may be passed in order to avoid the overhead of\nconstructing a real Component object if lazy rendering might mean that the\ninserted Component will not be rendered immediately. To take advantage of\nthis 'lazy instantiation', set the <a href='#!/api/Ext.Component-cfg-xtype'>Ext.Component#xtype</a> config\nproperty to the registered type of the Component wanted.\n\nYou can pass an array of Component instances and config objects.\n\nFor a list of all available xtypes, see <a href='#!/api/Ext.enums.Widget'>Ext.enums.Widget</a>.\n",
                    "type": "Ext.Component/Object/Ext.Component[]/Object[]",
                    "src": {
                      "name": "4,1360,63",
                      "text": "4,1360,73,48:4,1361,8,583",
                      "type": "4,1360,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "component The Component (or config object) that was\ninserted with the Container's default config values applied.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1375,32,52:4,1376,8,62",
                      "type": "4,1375,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1380,0",
                  "since": "4,1378,15",
                  "text": "4,1353,8,195"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "invalidateInheritedState",
                "since": "5.0.0",
                "text": "This method marks the current inherited state as invalid. The next time a call is\nmade to <a href='#!/api/Ext.grid.column.Action-method-getInherited'>getInherited</a> the objects will be recreated and initialized.\n",
                "src": {
                  "access": "23,310,8",
                  "name": "23,313,0",
                  "since": "23,311,15",
                  "text": "23,308,8,152"
                }
              },
              {
                "$type": "method",
                "name": "is",
                "text": "Tests whether this Component matches a <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a>\nselector string.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "text": "The selector string to test against.\n",
                    "type": "String",
                    "src": {
                      "name": "6,3777,24",
                      "text": "6,3777,33,37",
                      "type": "6,3777,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if this Component matches the selector.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3778,26,47",
                      "type": "6,3778,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3780,0",
                  "text": "6,3775,8,98"
                }
              },
              {
                "$type": "method",
                "name": "isAncestor",
                "text": "Determines whether **this Component** is an ancestor of the passed Component.\nThis will return `true` if the passed Component is anywhere within the subtree\nbeneath this Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "possibleDescendant",
                    "text": "The Component to test for presence\nwithin this Component's subtree.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,3803,31",
                      "text": "6,3803,50,35:6,3804,8,33",
                      "type": "6,3803,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,3806,0",
                  "text": "6,3800,8,181"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "isBlurring",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "11,769,0"
                    }
                  }
                ],
                "src": {
                  "access": "11,767,12",
                  "name": "11,769,0"
                }
              },
              {
                "$type": "method",
                "name": "isDescendantOf",
                "text": "Determines whether this component is the descendant of a passed component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "ancestor",
                    "text": "A Component which may contain this Component.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,3786,31",
                      "text": "6,3786,40,46",
                      "type": "6,3786,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if the component is the descendant of the passed component, otherwise `false`.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3787,26,86",
                      "type": "6,3787,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3789,0",
                  "text": "6,3785,8,75"
                }
              },
              {
                "$type": "method",
                "name": "isDisabled",
                "text": "Method to determine whether this Component is currently disabled.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "the disabled state of this Component.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3817,26,38",
                      "type": "6,3817,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3819,0",
                  "text": "6,3816,8,66"
                }
              },
              {
                "$type": "method",
                "name": "isDraggable",
                "text": "Method to determine whether this Component is draggable.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "the draggable state of this component.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3825,26,39",
                      "type": "6,3825,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3827,0",
                  "text": "6,3824,8,57"
                }
              },
              {
                "$type": "method",
                "name": "isDroppable",
                "text": "Method to determine whether this Component is droppable.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "the droppable state of this component.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3833,26,39",
                      "type": "6,3833,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3835,0",
                  "text": "6,3832,8,57"
                }
              },
              {
                "$type": "method",
                "name": "isFloating",
                "text": "Method to determine whether this Component is floating.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "the floating state of this component.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3841,26,38",
                      "type": "6,3841,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3843,0",
                  "text": "6,3840,8,56"
                }
              },
              {
                "$type": "method",
                "name": "isFocusable",
                "text": "Determine if this Focusable can receive focus at this time.\n\nNote that Containers can be non-focusable themselves while delegating\nfocus treatment to a child Component; see\n<a href='#!/api/Ext.container.Container'>Ext.container.Container</a> for more information.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "deep",
                    "optional": true,
                    "text": "Optionally determine if the container itself\nis focusable, or if container's focus is delegated to a child component\nand that child is focusable.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "11,156,26",
                      "text": "11,156,38,45:11,157,8,102",
                      "type": "11,156,16",
                      "value": "11,156,31"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "True if component is focusable, false if not.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "11,160,26,46",
                      "type": "11,160,17"
                    }
                  }
                ],
                "src": {
                  "name": "11,162,0",
                  "text": "11,150,8,242"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "isFocusing",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "11,747,0"
                    }
                  }
                ],
                "src": {
                  "access": "11,745,12",
                  "name": "11,747,0"
                }
              },
              {
                "$type": "method",
                "name": "isHidden",
                "text": "Method to determine whether this Component is currently set to hidden.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "the hidden state of this Component.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3849,26,36",
                      "type": "6,3849,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3851,0",
                  "text": "6,3848,8,71"
                }
              },
              {
                "$type": "method",
                "name": "isHideable",
                "text": "Determines whether the UI should be allowed to offer an option to hide this column.\n\nA column may *not* be hidden if to do so would leave the grid with no visible columns.\n\nThis is used to determine the enabled/disabled state of header hide menu items.\n",
                "src": {
                  "name": "5,1463,0",
                  "text": "5,1457,8,253"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "isLayoutChild",
                "text": "Checks if this component will be contained by the passed component as part of its\nlayout run. If `true`, then the layout on `this` can be skipped because it will be\nencompassed when the layout for `comp` runs. Typical cases where this may be be `false`\nis when asking about floaters nested in containers.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "comp",
                    "text": "The potential owner.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "6,3896,31",
                      "text": "6,3896,36,21",
                      "type": "6,3896,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if this component is a layout child of `comp`.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3897,26,54",
                      "type": "6,3897,17"
                    }
                  }
                ],
                "src": {
                  "access": "6,3899,8",
                  "name": "6,3901,0",
                  "text": "6,3892,8,305"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "isLayoutRoot",
                "text": "Determines whether this Component is the root of a layout. This returns `true` if\nthis component can run its layout without assistance from or impact on its owner.\nIf this component cannot run its layout given these restrictions, `false` is returned\nand its owner will be considered as the next candidate for the layout root.\n\nSetting the <a href='#!/api/Ext.grid.column.Action-property-_isLayoutRoot'>_isLayoutRoot</a> property to `true` causes this method to always\nreturn `true`. This may be useful when updating a layout of a Container which shrink\nwraps content, and you know that it will not change size, and so can safely be the\ntopmost participant in the layout run.\n",
                "src": {
                  "access": "6,3915,8",
                  "name": "6,3917,0",
                  "text": "6,3906,8,617"
                }
              },
              {
                "$type": "method",
                "name": "isLayoutSuspended",
                "text": "Returns `true` if layout is suspended for this component. This can come from direct\nsuspension of this component's layout activity (<a href='#!/api/Ext.container.Container-cfg-suspendLayout'>Ext.Container#suspendLayout</a>) or if one\nof this component's containers is suspended.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "`true` layout of this component is suspended.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3937,26,46",
                      "type": "6,3937,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3939,0",
                  "text": "6,3933,8,225"
                }
              },
              {
                "$type": "method",
                "name": "isLockable",
                "text": "Determines whether the UI should be allowed to offer an option to lock or unlock this column. Note\nthat this includes dragging a column into the opposite side of a <a href='#!/api/Ext.panel.Table-cfg-enableLocking'>Ext.panel.Table#enableLocking</a> grid.\n\nA column may *not* be moved from one side to the other of a <a href='#!/api/Ext.panel.Table-cfg-enableLocking'>Ext.panel.Table#enableLocking</a> grid\nif to do so would leave one side with no visible columns.\n\nThis is used to determine the enabled/disabled state of the lock/unlock\nmenu item used in <a href='#!/api/Ext.panel.Table-cfg-enableLocking'>Ext.panel.Table#enableLocking</a> grids, and to determine droppabilty when dragging a header.\n",
                "src": {
                  "name": "5,1514,0",
                  "text": "5,1505,8,586"
                }
              },
              {
                "$type": "method",
                "name": "isLocked",
                "text": "Determines whether this column is in the locked side of a grid. It may be a descendant node of a locked column\nand as such will *not* have the <a href='#!/api/Ext.grid.column.Action-cfg-locked'>locked</a> flag set.\n",
                "src": {
                  "name": "5,1529,0",
                  "text": "5,1526,8,169"
                }
              },
              {
                "$type": "method",
                "name": "isMasked",
                "text": "Returns masked state for this Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "deep",
                    "optional": true,
                    "text": "True to look up this Component's parent masked state.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "6,4022,26",
                      "text": "6,4022,38,54",
                      "type": "6,4022,16",
                      "value": "6,4022,31"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "True if masked, false otherwise.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,4024,26,33",
                      "type": "6,4024,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4026,0",
                  "text": "6,4020,8,42"
                }
              },
              {
                "$type": "method",
                "name": "isPrototypeOf",
                "text": "Returns a boolean indication whether the specified object is in the prototype chain of the object\nthis method is called upon.\n\n<a href='#!/api/Ext.grid.column.Action-method-isPrototypeOf'>isPrototypeOf</a> allows you to check whether or not an object exists within another object's\nprototype chain.\n\nFor example, consider the following prototype chain:\n\n    function Fee() {\n        // . . .\n    }\n\n    function Fi() {\n        // . . .\n    }\n    Fi.prototype = new Fee();\n\n    function Fo() {\n        // . . .\n    }\n    Fo.prototype = new Fi();\n\n    function Fum() {\n        // . . .\n    }\n    Fum.prototype = new Fo();\n\nLater on down the road, if you instantiate `Fum` and need to check if `Fi`'s prototype exists\nwithin the `Fum` prototype chain, you could do this:\n\n    var fum = new Fum();\n    . . .\n\n    if (Fi.prototype.isPrototypeOf(fum)) {\n    // do something safe\n    }\n\nThis, along with the `instanceof` operator particularly comes in handy if you have code that can\nonly function when dealing with objects descended from a specific prototype chain, e.g., to\nguarantee that certain methods or properties will be present on that object.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "prototype",
                    "text": "an object to be tested against each link in the prototype chain of the\n*object* argument\n",
                    "type": "Object",
                    "src": {
                      "name": "24,148,20",
                      "text": "24,148,30,71:24,149,4,18",
                      "type": "24,148,12"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "object",
                    "text": "the object whose prototype chain will be searched\n",
                    "type": "Object",
                    "src": {
                      "name": "24,150,20",
                      "text": "24,150,27,50",
                      "type": "24,150,12"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Returns true if object is a prototype and false if not.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "24,151,22,56",
                      "type": "24,151,13"
                    }
                  }
                ],
                "src": {
                  "name": "24,106,12",
                  "text": "24,107,4,1084"
                }
              },
              {
                "$type": "method",
                "name": "isSuspended",
                "text": "Checks if all events, or a specific event, is suspended.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "optional": true,
                    "text": "The name of the specific event to check\n",
                    "type": "String",
                    "src": {
                      "name": "13,1344,29",
                      "text": "13,1344,36,40",
                      "type": "13,1344,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if events are suspended\n",
                    "type": "Boolean",
                    "src": {
                      "text": "13,1345,30,31",
                      "type": "13,1345,21"
                    }
                  }
                ],
                "src": {
                  "name": "13,1347,0",
                  "text": "13,1343,12,57"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "isSyncing",
                "text": "Checks if a particular binding is synchronizing the value.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "name",
                    "text": "The name of the property being bound to.\n",
                    "type": "String",
                    "src": {
                      "name": "9,770,28",
                      "text": "9,770,33,41",
                      "type": "9,770,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if the binding is syncing.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "9,771,30,34",
                      "type": "9,771,21"
                    }
                  }
                ],
                "src": {
                  "access": "9,499,-1",
                  "name": "9,775,0",
                  "text": "9,769,12,59"
                }
              },
              {
                "$type": "method",
                "name": "isVisible",
                "since": "1.1.0",
                "text": "Returns `true` if this component is visible.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "deep",
                    "optional": true,
                    "text": "Pass `true` to interrogate the visibility status of all parent Containers to\ndetermine whether this Component is truly visible to the user.\n\nGenerally, to determine whether a Component is hidden, the no argument form is needed. For example when creating\ndynamically laid out UIs in a hidden Container before showing them.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "6,3967,26",
                      "text": "6,3967,38,77:6,3968,8,246",
                      "type": "6,3967,16",
                      "value": "6,3967,31"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if this component is visible, `false` otherwise.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,3973,26,56",
                      "type": "6,3973,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,3977,0",
                  "since": "6,3975,15",
                  "text": "6,3965,8,46"
                }
              },
              {
                "$type": "method",
                "name": "isXType",
                "since": "2.3.0",
                "text": "Tests whether or not this Component is of a specific xtype. This can test whether this Component is descended\nfrom the xtype (default) or whether it is directly of the xtype specified (`shallow = true`).\n\n**If using your own subclasses, be aware that a Component must register its own xtype to participate in\ndetermination of inherited xtypes.**\n\nFor a list of all available xtypes, see the <a href='#!/api/Ext.Component'>Ext.Component</a> header.\n\nExample usage:\n\n    @example\n    var t = new Ext.form.field.Text();\n    var isText = t.isXType('textfield');        // true\n    var isBoxSubclass = t.isXType('field');       // true, descended from Ext.form.field.Base\n    var isBoxInstance = t.isXType('field', true); // false, not a direct Ext.form.field.Base instance\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "xtype",
                    "text": "The xtype to check for this Component\n",
                    "type": "String",
                    "src": {
                      "name": "6,4007,24",
                      "text": "6,4007,30,38",
                      "type": "6,4007,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "shallow",
                    "optional": true,
                    "text": "`true` to check whether this Component is directly of the specified xtype, `false` to\ncheck whether this Component is descended from the xtype.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "6,4008,26",
                      "text": "6,4008,41,86:6,4009,8,58",
                      "type": "6,4008,16",
                      "value": "6,4008,34"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "`true` if this component descends from the specified xtype, `false` otherwise.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "6,4010,26,79",
                      "type": "6,4010,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4014,0",
                  "since": "6,4012,15",
                  "text": "6,3991,8,743"
                }
              },
              {
                "$type": "method",
                "name": "lookup",
                "since": "6.0.1",
                "text": "Gets a reference to the component with the specified <a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> value.\n\nThe method is a short-hand for the <a href='#!/api/Ext.grid.column.Action-method-lookupReference'>lookupReference</a> method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "key",
                    "text": "The name of the reference to lookup.\n",
                    "type": "String",
                    "src": {
                      "name": "15,67,24",
                      "text": "15,67,28,37",
                      "type": "15,67,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The referenced component or <a href='#!/api/null'>null</a> if it is not found.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "15,68,32,55",
                      "type": "15,68,17"
                    }
                  }
                ],
                "src": {
                  "name": "15,71,0",
                  "since": "15,69,15",
                  "text": "15,63,8,149"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "lookupComponent",
                "items": [
                  {
                    "$type": "param",
                    "name": "comp",
                    "src": {
                      "name": "10,841,0"
                    }
                  }
                ],
                "src": {
                  "access": "10,839,8",
                  "name": "10,841,0"
                }
              },
              {
                "$type": "method",
                "name": "lookupController",
                "since": "5.0.1",
                "text": "Gets the controller that controls this view. May be a controller that belongs\nto a view higher in the hierarchy.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "skipThis",
                    "optional": true,
                    "text": "`true` to not consider the controller directly attached\nto this view (if it exists).\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "9,360,26",
                      "text": "9,360,42,56:9,361,8,29",
                      "type": "9,360,16",
                      "value": "9,360,35"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The controller. <a href='#!/api/null'>null</a> if no controller is found.\n",
                    "type": "Ext.app.ViewController",
                    "src": {
                      "text": "9,362,41,50",
                      "type": "9,362,17"
                    }
                  }
                ],
                "src": {
                  "name": "9,366,0",
                  "since": "9,364,15",
                  "text": "9,357,8,114"
                }
              },
              {
                "$type": "method",
                "name": "lookupReference",
                "since": "5.0",
                "text": "Gets a reference to the component with the specified <a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> value.\n\nThe <a href='#!/api/Ext.grid.column.Action-method-lookup'>lookup</a> method is a short-hand version of this method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "key",
                    "text": "The name of the reference to lookup.\n",
                    "type": "String",
                    "src": {
                      "name": "15,81,24",
                      "text": "15,81,28,37",
                      "type": "15,81,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The referenced component or <a href='#!/api/null'>null</a> if it is not found.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "15,82,32,55",
                      "type": "15,82,17"
                    }
                  }
                ],
                "src": {
                  "name": "15,85,0",
                  "since": "15,83,15",
                  "text": "15,77,8,148"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "lookupReferenceHolder",
                "since": "5.0.0",
                "text": "Gets the Controller or Component that is used as the reference holder for this view.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "skipThis",
                    "optional": true,
                    "text": "`false` to return this as the reference holder if\nthis instance has set <a href='#!/api/Ext.grid.column.Action-cfg-referenceHolder'>referenceHolder</a>. Unlike <a href='#!/api/Ext.grid.column.Action-method-getInheritedConfig'>getInheritedConfig</a> this method\ndefaults to `true` because it is possible that a <a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> property set by the\nowner of a component that is also a <a href='#!/api/Ext.grid.column.Action-cfg-referenceHolder'>referenceHolder</a> itself. In this case, the\n<a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> connects not to this component but to the parent referenceHolder.\n",
                    "type": "Boolean",
                    "value": "true",
                    "src": {
                      "name": "23,261,26",
                      "text": "23,261,41,50:23,262,8,321",
                      "type": "23,261,16",
                      "value": "23,261,35"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The reference holder.\n",
                    "type": "Ext.app.ViewController/Ext.container.Container",
                    "src": {
                      "text": "23,267,65,22",
                      "type": "23,267,17"
                    }
                  }
                ],
                "src": {
                  "access": "23,269,8",
                  "name": "23,272,0",
                  "since": "23,270,15",
                  "text": "23,259,8,86"
                }
              },
              {
                "$type": "method",
                "name": "lookupSession",
                "since": "5.0.0",
                "text": "Returns the <a href='#!/api/Ext.data.Session'>Ext.data.Session</a> for this instance. This property may come\nfrom this instance's <a href='#!/api/Ext.grid.column.Action-cfg-session'>session</a> or be inherited from this object's parent.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "skipThis",
                    "optional": true,
                    "text": "Pass `true` to ignore a <a href='#!/api/Ext.grid.column.Action-cfg-session'>session</a> configured on\nthis instance and only consider an inherited session.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "9,373,26",
                      "text": "9,373,42,48:9,374,8,54",
                      "type": "9,373,16",
                      "value": "9,373,35"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.data.Session",
                    "src": {
                      "type": "9,375,17"
                    }
                  }
                ],
                "src": {
                  "name": "9,378,0",
                  "since": "9,376,15",
                  "text": "9,371,8,156"
                }
              },
              {
                "$type": "method",
                "name": "lookupViewModel",
                "since": "5.0.0",
                "text": "Returns the <a href='#!/api/Ext.app.ViewModel'>Ext.app.ViewModel</a> for this instance. This property may come from this\nthis instance's <a href='#!/api/Ext.grid.column.Action-cfg-viewModel'>viewModel</a> or be inherited from this object's parent.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "skipThis",
                    "optional": true,
                    "text": "Pass `true` to ignore a <a href='#!/api/Ext.grid.column.Action-cfg-viewModel'>viewModel</a> configured on\nthis instance and only consider an inherited view model.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "9,394,26",
                      "text": "9,394,42,50:9,395,8,57",
                      "type": "9,394,16",
                      "value": "9,394,35"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.app.ViewModel",
                    "src": {
                      "type": "9,396,17"
                    }
                  }
                ],
                "src": {
                  "name": "9,399,0",
                  "since": "9,397,15",
                  "text": "9,392,8,164"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "makeBindableUpdater",
                "since": "5.0.0",
                "text": "Returns an <a href='#!/api/Ext.grid.column.Action-method-update'>update</a> method for the given Config that will call <a href='#!/api/Ext.grid.column.Action-method-publishState'>publishState</a>\nto ensure two-way bindings (via <a href='#!/api/Ext.grid.column.Action-cfg-bind'>bind</a>) as well as any <a href='#!/api/Ext.grid.column.Action-cfg-publishes'>publishes</a> are updated.\nThis method is cached on the `cfg` instance for re-use.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cfg",
                    "type": "Ext.Config",
                    "src": {
                      "name": "9,749,32",
                      "type": "9,749,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The updater function.\n",
                    "type": "Function",
                    "src": {
                      "text": "9,750,31,22",
                      "type": "9,750,21"
                    }
                  }
                ],
                "src": {
                  "access": "9,751,12",
                  "name": "9,754,0",
                  "since": "9,752,19",
                  "text": "9,746,12,223"
                }
              },
              {
                "$type": "method",
                "name": "mask",
                "text": "Masks this component with a semi-opaque layer and makes the contents unavailable to clicks.\n\nSee <a href='#!/api/Ext.grid.column.Action-method-unmask'>unmask</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "msg",
                    "optional": true,
                    "text": "A message to show in the center of the mask layer.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4063,25",
                      "text": "6,4063,30,51",
                      "type": "6,4063,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "msgCls",
                    "optional": true,
                    "text": "A CSS class name to use on the message element in the center of the layer.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4064,25",
                      "text": "6,4064,33,75",
                      "type": "6,4064,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,4066,0",
                  "text": "6,4059,8,115"
                }
              },
              {
                "$type": "method",
                "inheritdoc": "Ext.util.Observable#addManagedListener",
                "name": "mon",
                "text": "Shorthand for <a href='#!/api/Ext.grid.column.Action-method-addManagedListener'>addManagedListener</a>.\n",
                "src": {
                  "inheritdoc": "13,1789,12",
                  "name": "13,1791,0",
                  "text": "13,1788,12,43"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-moveBefore'>moveBefore</a> or <a href='#!/api/Ext.grid.column.Action-moveAfter'>moveAfter</a> instead.\n",
                "deprecatedVersion": "5.0",
                "name": "move",
                "text": "Moves a Component within the Container. This method does **not** account for things\nlike splitter components added by a layout. To better handle these situations, it\nis recommended to use <a href='#!/api/Ext.grid.column.Action-method-moveBefore'>moveBefore</a> or <a href='#!/api/Ext.grid.column.Action-method-moveAfter'>moveAfter</a> instead.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fromIdx",
                    "text": "The index/component to move.\n",
                    "type": "Number/Ext.Component",
                    "src": {
                      "name": "4,1420,38",
                      "text": "4,1420,46,29",
                      "type": "4,1420,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "toIdx",
                    "text": "The new index for the Component.\n",
                    "type": "Number",
                    "src": {
                      "name": "4,1421,24",
                      "text": "4,1421,30,33",
                      "type": "4,1421,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "component The Component that was moved.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1422,32,40",
                      "type": "4,1422,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedMessage": "4,1423,8",
                  "deprecatedVersion": "4,1423,8",
                  "name": "4,1425,0",
                  "text": "4,1416,8,244"
                }
              },
              {
                "$type": "method",
                "name": "moveAfter",
                "since": "5.0.0",
                "text": "Moves the given `item(s)` into this container following `after`. This method will\naccount for layout-generated components like splitters and should be used instead\nof index based <a href='#!/api/Ext.grid.column.Action-method-move'>method-move</a>. If `after` is <a href='#!/api/null'>null</a> then the `item` will be the\nfirst item in this container.\n\n    var tb = Ext.create({\n        xtype: 'toolbar',\n        renderTo: Ext.getBody(),\n        items: [{\n            text: 'one'\n        }, {\n            text: 'two'\n        }]\n    });\n\n    // moves the 'one' button after the 'two' button\n    tb.moveAfter(tb.getComponent(0), tb.getComponent(1));\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "text": "The item to move. May be a component,\ncomponent configuration object, or an array of either.\n",
                    "type": "Ext.Component/Ext.Component[]",
                    "src": {
                      "name": "4,1501,47",
                      "text": "4,1501,52,38:4,1502,8,55",
                      "type": "4,1501,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "after",
                    "text": "The reference component. May be <a href='#!/api/null'>null</a>.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1503,31",
                      "text": "4,1503,37,40",
                      "type": "4,1503,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The moved item(s).\n",
                    "type": "Ext.Component/Ext.Component[]",
                    "src": {
                      "text": "4,1504,48,19",
                      "type": "4,1504,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1507,0",
                  "since": "4,1505,15",
                  "text": "4,1483,8,579"
                }
              },
              {
                "$type": "method",
                "name": "moveBefore",
                "since": "5.0.0",
                "text": "Moves the given `item(s)` into this container in front of `before`. This method\nwill account for layout-generated components like splitters and should be used\ninstead of index based <a href='#!/api/Ext.grid.column.Action-method-move'>method-move</a>. If `before` is <a href='#!/api/null'>null</a> then the\n`item` will be the last item in this container.\n\n    var tb = Ext.create({\n        xtype: 'toolbar',\n        renderTo: Ext.getBody(),\n        items: [{\n            text: 'one'\n        }, {\n            text: 'two'\n        }]\n    });\n\n    // moves the 'two' button before the 'one' button\n    tb.moveBefore(tb.getComponent(1), tb.getComponent(0));\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "text": "The item to move. May be a component,\ncomponent configuration object, or an array of either.\n",
                    "type": "Ext.Component/Ext.Component[]",
                    "src": {
                      "name": "4,1469,47",
                      "text": "4,1469,52,38:4,1470,8,55",
                      "type": "4,1469,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "before",
                    "text": "The reference component. May be <a href='#!/api/null'>null</a>.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1471,31",
                      "text": "4,1471,38,40",
                      "type": "4,1471,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The moved item(s).\n",
                    "type": "Ext.Component/Ext.Component[]",
                    "src": {
                      "text": "4,1472,48,19",
                      "type": "4,1472,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1475,0",
                  "since": "4,1473,15",
                  "text": "4,1451,8,584"
                }
              },
              {
                "$type": "method",
                "inheritdoc": "Ext.util.Observable#removeManagedListener",
                "name": "mun",
                "text": "Shorthand for <a href='#!/api/Ext.grid.column.Action-method-removeManagedListener'>removeManagedListener</a>.\n",
                "src": {
                  "inheritdoc": "13,1795,12",
                  "name": "13,1797,0",
                  "text": "13,1794,12,46"
                }
              },
              {
                "$type": "method",
                "name": "nextChild",
                "text": "A method to find a child component after the passed child parameter. If a selector is also provided,\nthe first child component matching the selector will be returned.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "child",
                    "text": "The child to use as a starting point to find the next child.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1522,31",
                      "text": "4,1522,37,61",
                      "type": "4,1522,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "A <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector to find the next child. This will return the next child matching this selector. This parameter is optional.\n",
                    "type": "String",
                    "src": {
                      "name": "4,1523,25",
                      "text": "4,1523,35,146",
                      "type": "4,1523,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The next child found, <a href='#!/api/null'>null</a> if no child found.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1524,32,48",
                      "type": "4,1524,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1526,0",
                  "text": "4,1519,8,168"
                }
              },
              {
                "$type": "method",
                "name": "nextNode",
                "text": "Returns the next node in the Component tree in tree traversal order.\n\nNote that this is not limited to siblings, and if invoked upon a node with no matching siblings, will walk the\ntree to attempt to find a match. Contrast with <a href='#!/api/Ext.grid.column.Action-method-nextSibling'>nextSibling</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "A <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector to filter the following nodes.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4087,25",
                      "text": "6,4087,35,84",
                      "type": "6,4087,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The next node (or the next node which matches the selector).\nReturns <a href='#!/api/null'>null</a> if there is no matching node.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4088,32,61:6,4089,8,45",
                      "type": "6,4088,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4091,0",
                  "text": "6,4083,8,250"
                }
              },
              {
                "$type": "method",
                "name": "nextSibling",
                "text": "Returns the next sibling of this Component.\n\nOptionally selects the next sibling which matches the passed <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector.\n\nMay also be referred to as **`next()`**\n\nNote that this is limited to siblings, and if no siblings of the item match, <a href='#!/api/null'>null</a> is returned. Contrast with\n<a href='#!/api/Ext.grid.column.Action-method-nextNode'>nextNode</a>\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "A <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector to filter the following items.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4129,25",
                      "text": "6,4129,35,84",
                      "type": "6,4129,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The next sibling (or the next sibling which matches the selector).\nReturns <a href='#!/api/null'>null</a> if there is no matching sibling.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4130,32,67:6,4131,8,48",
                      "type": "6,4130,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4133,0",
                  "text": "6,4121,8,329"
                }
              },
              {
                "$type": "method",
                "inheritdoc": "Ext.util.Observable#addListener",
                "name": "on",
                "src": {
                  "inheritdoc": "13,1777,12",
                  "name": "13,1779,0"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onAdd",
                "template": true,
                "text": "This method is invoked after a new Component has been added. It\nis passed the Component which has been added. This method may\nbe used to update any internal structure which may depend upon\nthe state of the child items.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1557,31",
                      "type": "4,1557,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "position",
                    "type": "Number",
                    "src": {
                      "name": "4,1558,24",
                      "type": "4,1558,16"
                    }
                  }
                ],
                "src": {
                  "access": "4,1561,8",
                  "name": "4,1563,0",
                  "template": "4,1560,8",
                  "text": "4,1552,8,220"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onAdded",
                "since": "3.4.0",
                "template": true,
                "text": "Method to manage awareness of when components are added to their\nrespective Container, firing an #added event. References are\nestablished at add time rather than at render time.\n\nAllows addition of behavior when a Component is added to a\nContainer. At this stage, the Component is in the parent\nContainer's collection of child items. After calling the\nsuperclass's <a href='#!/api/Ext.grid.column.Action-method-onAdded'>onAdded</a>, the <a href='#!/api/Ext.grid.column.Action-property-ownerCt'>ownerCt</a> reference will be present,\nand if configured with a ref, the `refOwner` will be set.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "container",
                    "text": "Container which holds the component.\n",
                    "type": "Ext.container.Container",
                    "src": {
                      "name": "6,4166,41",
                      "text": "6,4166,51,37",
                      "type": "6,4166,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "pos",
                    "text": "Position at which the component was added.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4167,24",
                      "text": "6,4167,28,43",
                      "type": "6,4167,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "instanced",
                    "text": "`false` if this component was instanced by the parent\ncontainer. `true` if the instance already existed when it was passed to the container.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,4168,25",
                      "text": "6,4168,35,54:6,4169,8,88",
                      "type": "6,4168,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4172,8",
                  "name": "6,4175,0",
                  "since": "6,4173,15",
                  "template": "6,4171,8",
                  "text": "6,4156,8,476"
                }
              },
              {
                "$type": "method",
                "name": "onAfter",
                "text": "Appends an after-event handler.\n\nSame as <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> with `order` set\nto `'after'`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to listen for.\n",
                    "type": "String/String[]/Object",
                    "src": {
                      "name": "13,1190,44",
                      "text": "13,1190,54,37",
                      "type": "13,1190,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The method the event invokes.\n",
                    "type": "Function/String",
                    "src": {
                      "name": "13,1191,37",
                      "text": "13,1191,40,30",
                      "type": "13,1191,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope for `fn`.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1192,29",
                      "text": "13,1192,36,20",
                      "type": "13,1192,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "An object containing handler configuration.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1193,29",
                      "text": "13,1193,38,44",
                      "type": "13,1193,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1195,0",
                  "text": "13,1185,12,125"
                }
              },
              {
                "$type": "method",
                "name": "onBefore",
                "text": "Appends a before-event handler.  Returning `false` from the handler will stop the event.\n\nSame as <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> with `order` set\nto `'before'`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to listen for.\n",
                    "type": "String/String[]/Object",
                    "src": {
                      "name": "13,1175,44",
                      "text": "13,1175,54,37",
                      "type": "13,1175,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The method the event invokes.\n",
                    "type": "Function/String",
                    "src": {
                      "name": "13,1176,37",
                      "text": "13,1176,40,30",
                      "type": "13,1176,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope for `fn`.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1177,29",
                      "text": "13,1177,36,20",
                      "type": "13,1177,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "An object containing handler configuration.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1178,29",
                      "text": "13,1178,38,44",
                      "type": "13,1178,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1180,0",
                  "text": "13,1170,12,183"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onBeforeAdd",
                "template": true,
                "text": "This method is invoked before adding a new child Component. It\nis passed the new Component, and may be used to modify the\nComponent, or prepare the Container in some way. Returning\nfalse aborts the add operation.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1571,31",
                      "type": "4,1571,16"
                    }
                  }
                ],
                "src": {
                  "access": "4,1574,8",
                  "name": "4,1576,0",
                  "template": "4,1573,8",
                  "text": "4,1566,8,214"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onBlur",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "11,317,0"
                    }
                  }
                ],
                "src": {
                  "access": "11,315,8",
                  "name": "11,317,0"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onBoxReady",
                "template": true,
                "text": "Invoked when this component has first achieved size. Occurs after the\n<a href='#!/api/Ext.grid.column.Action-cfg-componentLayout'>componentLayout</a> has completed its initial run.\n\nThis method is not called on components that use <a href='#!/api/Ext.grid.column.Action-cfg-liquidLayout'>liquidLayout</a>, such as\n<a href='#!/api/Ext.button.Button'>Ext.button.Button</a> and <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a>.\n\n**Note:** If the Component has a <a href='#!/api/Ext.Component-cfg-controller'>Ext.Component#controller</a>\nand the controller has a <a href='#!/api/Ext.app.ViewController-method-boxReady'>Ext.app.ViewController#boxReady</a> method\nit will be called passing the Component as the single param.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "width",
                    "text": "The width of this component\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4243,24",
                      "text": "6,4243,30,28",
                      "type": "6,4243,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "height",
                    "text": "The height of this component\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4244,24",
                      "text": "6,4244,31,29",
                      "type": "6,4244,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4247,8",
                  "name": "6,4249,0",
                  "template": "6,4246,8",
                  "text": "6,4233,8,511"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onDestroy",
                "template": true,
                "text": "Allows addition of behavior to the destroy operation.\nAfter calling the superclass's onDestroy, the Component will be destroyed.\n",
                "src": {
                  "access": "6,4294,8",
                  "name": "6,4296,0",
                  "template": "6,4293,8",
                  "text": "6,4290,8,130"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onDisable",
                "template": true,
                "text": "Allows addition of behavior to the disable operation.\nAfter calling the superclass's <a href='#!/api/Ext.grid.column.Action-method-onDisable'>onDisable</a>, the Component will be disabled.\n",
                "src": {
                  "access": "6,4334,8",
                  "name": "6,4336,0",
                  "template": "6,4333,8",
                  "text": "6,4330,8,131"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onEnable",
                "template": true,
                "text": "Allows addition of behavior to the enable operation.\nAfter calling the superclass's <a href='#!/api/Ext.grid.column.Action-method-onEnable'>onEnable</a>, the Component will be enabled.\n",
                "src": {
                  "access": "6,4368,8",
                  "name": "6,4370,0",
                  "template": "6,4367,8",
                  "text": "6,4364,8,128"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onFocus",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "11,368,0"
                    }
                  }
                ],
                "src": {
                  "access": "11,366,8",
                  "name": "11,368,0"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onFocusEnter",
                "template": true,
                "text": "Called when focus enters this Component's hierarchy\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "event",
                        "text": "The underlying DOM event.\n",
                        "type": "Ext.event.Event",
                        "src": {
                          "name": "11,498,35",
                          "text": "11,498,41,26",
                          "type": "11,498,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "target",
                        "text": "The element gaining focus.\n",
                        "type": "HTMLElement",
                        "src": {
                          "name": "11,499,31",
                          "text": "11,499,38,27",
                          "type": "11,499,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "relatedTarget",
                        "text": "The element losing focus.\n",
                        "type": "HTMLElement",
                        "src": {
                          "name": "11,500,31",
                          "text": "11,500,45,26",
                          "type": "11,500,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "toComponent",
                        "text": "The Component gaining focus.\n",
                        "type": "Ext.Component",
                        "src": {
                          "name": "11,501,33",
                          "text": "11,501,45,29",
                          "type": "11,501,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "fromComponent",
                        "text": "The Component losing focus.\n",
                        "type": "Ext.Component",
                        "src": {
                          "name": "11,502,33",
                          "text": "11,502,47,28",
                          "type": "11,502,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "11,497,24",
                      "type": "11,497,16"
                    }
                  }
                ],
                "src": {
                  "access": "11,495,8",
                  "name": "11,504,0",
                  "template": "11,494,8",
                  "text": "11,496,8,52"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onFocusLeave",
                "template": true,
                "text": "Called when focus exits from this Component's hierarchy\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "type": "Ext.event.Event",
                    "items": [
                      {
                        "$type": "property",
                        "name": "event",
                        "text": "The underlying DOM event.\n",
                        "type": "Ext.event.Event",
                        "src": {
                          "name": "11,526,35",
                          "text": "11,526,41,26",
                          "type": "11,526,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "target",
                        "text": "The element gaining focus.\n",
                        "type": "HTMLElement",
                        "src": {
                          "name": "11,527,31",
                          "text": "11,527,38,27",
                          "type": "11,527,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "relatedTarget",
                        "text": "The element losing focus.\n",
                        "type": "HTMLElement",
                        "src": {
                          "name": "11,528,31",
                          "text": "11,528,45,26",
                          "type": "11,528,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "toComponent",
                        "text": "The Component gaining focus.\n",
                        "type": "Ext.Component",
                        "src": {
                          "name": "11,529,33",
                          "text": "11,529,45,29",
                          "type": "11,529,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "fromComponent",
                        "text": "The Component losing focus.\n",
                        "type": "Ext.Component",
                        "src": {
                          "name": "11,530,33",
                          "text": "11,530,47,28",
                          "type": "11,530,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "11,525,33",
                      "type": "11,525,16"
                    }
                  }
                ],
                "src": {
                  "access": "11,523,8",
                  "name": "11,532,0",
                  "template": "11,522,8",
                  "text": "11,524,8,56"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onHide",
                "template": true,
                "text": "Allows addition of behavior to the hide operation. After\ncalling the superclass's onHide, the Component will be hidden.\n\nGets passed the same parameters as #hide.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "animateTarget",
                    "optional": true,
                    "type": "String/Ext.dom.Element/Ext.Component",
                    "src": {
                      "name": "6,4408,55",
                      "type": "6,4408,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "type": "Function",
                    "src": {
                      "name": "6,4409,27",
                      "type": "6,4409,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "type": "Object",
                    "src": {
                      "name": "6,4410,25",
                      "type": "6,4410,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4413,8",
                  "name": "6,4415,0",
                  "template": "6,4412,8",
                  "text": "6,4403,8,164"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onInheritedAdd",
                "text": "Called when this Inheritable is added to a parent\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "instanced",
                    "type": "Boolean",
                    "src": {
                      "name": "23,351,29",
                      "type": "23,351,20"
                    }
                  }
                ],
                "src": {
                  "access": "23,330,-1",
                  "name": "23,353,0",
                  "text": "23,350,12,50"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onInheritedRemove",
                "text": "Called when this inheritable is removed from a parent\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "destroying",
                    "text": "`true` if this item will be destroyed by it's container\n",
                    "type": "Boolean",
                    "src": {
                      "name": "23,369,29",
                      "text": "23,369,40,56",
                      "type": "23,369,20"
                    }
                  }
                ],
                "src": {
                  "access": "23,330,-1",
                  "name": "23,371,0",
                  "text": "23,368,12,54"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onMouseDown",
                "text": "Mousedown brings to front, and programmatically grabs focus\nunless the mousedown was on a focusable element\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "3,331,0"
                    }
                  }
                ],
                "src": {
                  "access": "3,327,8",
                  "name": "3,331,0",
                  "text": "3,328,8,108"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onPosition",
                "template": true,
                "text": "Called after the component is moved, this method is empty by default but can be implemented by any\nsubclass that needs to perform custom logic after a move occurs.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The new x position.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4469,24",
                      "text": "6,4469,26,20",
                      "type": "6,4469,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "text": "The new y position.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4470,24",
                      "text": "6,4470,26,20",
                      "type": "6,4470,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4473,8",
                  "name": "6,4475,0",
                  "template": "6,4472,8",
                  "text": "6,4466,8,165"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onRemove",
                "template": true,
                "text": "This method is invoked after a new Component has been\nremoved. It is passed the Component which has been\nremoved. This method may be used to update any internal\nstructure which may depend upon the state of the child items.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1593,31",
                      "type": "4,1593,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "autoDestroy",
                    "type": "Boolean",
                    "src": {
                      "name": "4,1594,25",
                      "type": "4,1594,16"
                    }
                  }
                ],
                "src": {
                  "access": "4,1597,8",
                  "name": "4,1599,0",
                  "template": "4,1596,8",
                  "text": "4,1588,8,224"
                }
              },
              {
                "$type": "method",
                "inheritdoc": true,
                "name": "onRemoved",
                "items": [
                  {
                    "$type": "param",
                    "name": "destroying",
                    "src": {
                      "name": "4,892,0"
                    }
                  }
                ],
                "src": {
                  "inheritdoc": "4,890,8",
                  "name": "4,892,0"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onRender",
                "template": true,
                "text": "Template method called when this Component's DOM structure is created.\n\nAt this point, this Component's (and all descendants') DOM structure *exists* but it has not\nbeen layed out (positioned and sized).\n\nSubclasses which override this to gain access to the structure at render time should\ncall the parent class's method before attempting to access any child elements of the Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "parentNode",
                    "text": "The parent Element in which this Component's encapsulating element is contained.\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "name": "20,679,33",
                      "text": "20,679,44,81",
                      "type": "20,679,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "containerIdx",
                    "text": "The index within the parent Container's child collection of this Component.\n",
                    "type": "Number",
                    "src": {
                      "name": "20,680,24",
                      "text": "20,680,37,76",
                      "type": "20,680,16"
                    }
                  }
                ],
                "src": {
                  "access": "20,683,8",
                  "name": "20,685,0",
                  "template": "20,682,8",
                  "text": "20,671,8,387"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onResize",
                "template": true,
                "text": "Called when the component is resized.\n\nThis method is not called on components that use <a href='#!/api/Ext.grid.column.Action-cfg-liquidLayout'>liquidLayout</a>, such as\n<a href='#!/api/Ext.button.Button'>Ext.button.Button</a> and <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "width",
                    "text": "The new width that was set\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4483,24",
                      "text": "6,4483,30,27",
                      "type": "6,4483,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "height",
                    "text": "The new height that was set\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4484,24",
                      "text": "6,4484,31,28",
                      "type": "6,4484,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldWidth",
                    "text": "The previous width\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4485,24",
                      "text": "6,4485,33,19",
                      "type": "6,4485,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldHeight",
                    "text": "The previous height\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4486,24",
                      "text": "6,4486,34,20",
                      "type": "6,4486,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4490,8",
                  "name": "6,4492,0",
                  "template": "6,4489,8",
                  "text": "6,4478,8,199"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onScrollEnd",
                "template": true,
                "text": "Invoked when a scroll operation is completed via this component's <a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The current x position\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4526,24",
                      "text": "6,4526,26,23",
                      "type": "6,4526,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "text": "The current y position\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4527,24",
                      "text": "6,4527,26,23",
                      "type": "6,4527,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4529,8",
                  "name": "6,4525,16",
                  "template": "6,4528,8",
                  "text": "6,4524,8,96"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onScrollMove",
                "template": true,
                "text": "Invoked when this component is scrolled via its <a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The current x position\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4517,24",
                      "text": "6,4517,26,23",
                      "type": "6,4517,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "text": "The current y position\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4518,24",
                      "text": "6,4518,26,23",
                      "type": "6,4518,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4520,8",
                  "name": "6,4516,16",
                  "template": "6,4519,8",
                  "text": "6,4515,8,78"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onScrollStart",
                "template": true,
                "text": "Invoked when a scroll is initiated on this component via its <a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The current x position\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4508,24",
                      "text": "6,4508,26,23",
                      "type": "6,4508,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "text": "The current y position\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4509,24",
                      "text": "6,4509,26,23",
                      "type": "6,4509,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4511,8",
                  "name": "6,4507,16",
                  "template": "6,4510,8",
                  "text": "6,4506,8,91"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onShow",
                "template": true,
                "text": "Allows addition of behavior to the show operation. After\ncalling the superclass's onShow, the Component will be visible.\n\nOverride in subclasses where more complex behaviour is needed.\n\nGets passed the same parameters as #show.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "animateTarget",
                    "optional": true,
                    "type": "String/Ext.dom.Element",
                    "src": {
                      "name": "6,4540,41",
                      "type": "6,4540,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "type": "Function",
                    "src": {
                      "name": "6,4541,27",
                      "type": "6,4541,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "type": "Object",
                    "src": {
                      "name": "6,4542,25",
                      "type": "6,4542,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4545,8",
                  "name": "6,4547,0",
                  "template": "6,4544,8",
                  "text": "6,4533,8,229"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "onShowComplete",
                "template": true,
                "text": "Invoked after the #afterShow method is complete.\n\nGets passed the same `callback` and <a href='#!/api/Ext.grid.column.Action-cfg-scope'>scope</a> parameters that #afterShow received.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "type": "Function",
                    "src": {
                      "name": "6,4574,27",
                      "type": "6,4574,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "type": "Object",
                    "src": {
                      "name": "6,4575,25",
                      "type": "6,4575,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4578,8",
                  "name": "6,4580,0",
                  "template": "6,4577,8",
                  "text": "6,4570,8,132"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onStateChange",
                "text": "This method is called when any of the <a href='#!/api/Ext.grid.column.Action-cfg-stateEvents'>stateEvents</a> are fired.\n",
                "src": {
                  "access": "16,175,8",
                  "name": "16,177,0",
                  "text": "16,174,8,70"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onTitleElDblClick",
                "text": "Double click handler which, if on left or right edges, auto-sizes the column to the left.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "text": "The dblclick event\n",
                    "src": {
                      "name": "5,1241,15",
                      "text": "5,1241,17,19"
                    }
                  }
                ],
                "src": {
                  "access": "5,1239,8",
                  "name": "5,1243,0",
                  "text": "5,1240,8,90"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "owns",
                "text": "Returns `true` if the passed element is within the container tree of this component.\n\nFor example if a menu's submenu contains an <a href='#!/api/Ext.form.field.Date'>Ext.form.field.Date</a>, that top level\nmenu owns the elements of the date picker. Using this method, you can tell if an event took place\nwithin a certain component tree.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "element",
                    "src": {
                      "name": "6,6453,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,6446,12",
                  "name": "6,6453,0",
                  "text": "6,6447,12,305"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "postBlur",
                "text": "Template method to do any post-blur processing.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "text": "The event object\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,353,33",
                      "text": "11,353,35,17",
                      "type": "11,353,16"
                    }
                  }
                ],
                "src": {
                  "access": "11,352,8",
                  "name": "11,355,0",
                  "text": "11,351,8,48"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "postFocus",
                "text": "Template method to do any post-focus processing.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "text": "The event object\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "11,408,33",
                      "text": "11,408,35,17",
                      "type": "11,408,16"
                    }
                  }
                ],
                "src": {
                  "access": "11,407,8",
                  "name": "11,410,0",
                  "text": "11,406,8,49"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "prepareItems",
                "items": [
                  {
                    "$type": "param",
                    "name": "items",
                    "src": {
                      "name": "4,1953,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "applyDefaults",
                    "src": {
                      "name": "4,1953,0"
                    }
                  }
                ],
                "src": {
                  "access": "4,1951,12",
                  "name": "4,1953,0"
                }
              },
              {
                "$type": "method",
                "name": "prevChild",
                "text": "A method to find a child component before the passed child parameter. If a selector is also provided,\nthe first child component matching the selector will be returned.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "child",
                    "text": "The child to use as a starting point to find the previous child.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "4,1615,31",
                      "text": "4,1615,37,65",
                      "type": "4,1615,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "A <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector to find the previous child. This will return the first child matching this selector. This parameter is optional.\n",
                    "type": "String",
                    "src": {
                      "name": "4,1616,25",
                      "text": "4,1616,35,151",
                      "type": "4,1616,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The previous child found, <a href='#!/api/null'>null</a> if no child found.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1617,32,52",
                      "type": "4,1617,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1619,0",
                  "text": "4,1612,8,169"
                }
              },
              {
                "$type": "method",
                "name": "previousNode",
                "text": "Returns the previous node in the Component tree in tree traversal order.\n\nNote that this is not limited to siblings, and if invoked upon a node with no matching siblings, will walk the\ntree in reverse order to attempt to find a match. Contrast with <a href='#!/api/Ext.grid.column.Action-method-previousSibling'>previousSibling</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "A <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector to filter the preceding nodes.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4605,25",
                      "text": "6,4605,35,84",
                      "type": "6,4605,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The previous node (or the previous node which matches the selector).\nReturns <a href='#!/api/null'>null</a> if there is no matching node.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4606,32,69:6,4607,8,45",
                      "type": "6,4606,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4609,0",
                  "text": "6,4601,8,275"
                }
              },
              {
                "$type": "method",
                "name": "previousSibling",
                "text": "Returns the previous sibling of this Component.\n\nOptionally selects the previous sibling which matches the passed <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a>\nselector.\n\nMay also be referred to as **`prev()`**\n\nNote that this is limited to siblings, and if no siblings of the item match, <a href='#!/api/null'>null</a> is returned. Contrast with\n<a href='#!/api/Ext.grid.column.Action-method-previousNode'>previousNode</a>\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "A <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector to filter the preceding items.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4649,25",
                      "text": "6,4649,35,84",
                      "type": "6,4649,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The previous sibling (or the previous sibling which matches the selector).\nReturns <a href='#!/api/null'>null</a> if there is no matching sibling.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4650,32,75:6,4651,8,48",
                      "type": "6,4650,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4653,0",
                  "text": "6,4640,8,341"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "processEvent",
                "text": "Process and re-fire events routed from the Ext.panel.Table's processEvent method.\nAlso fires any configured click handlers. By default, cancels the mousedown event to prevent selection.\nReturns the event handler's status to allow canceling of GridView's bubbling process.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "type",
                    "src": {
                      "name": "0,442,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "view",
                    "src": {
                      "name": "0,442,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "cell",
                    "src": {
                      "name": "0,442,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "recordIndex",
                    "src": {
                      "name": "0,442,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "cellIndex",
                    "src": {
                      "name": "0,442,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "0,442,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "record",
                    "src": {
                      "name": "0,442,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "row",
                    "src": {
                      "name": "0,442,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,437,8",
                  "name": "0,442,0",
                  "text": "0,438,8,272"
                }
              },
              {
                "$type": "method",
                "name": "propertyIsEnumerable",
                "text": "Returns a boolean indicating if the internal ECMAScript DontEnum attribute is set.\n\nEvery object has a <a href='#!/api/Ext.grid.column.Action-method-propertyIsEnumerable'>propertyIsEnumerable</a> method. This method can determine whether the specified\nproperty in an object can be enumerated by a `for...in` loop, with the exception of properties\ninherited through the prototype chain. If the object does not have the specified property, this\nmethod returns false.\n\nThe following example shows the use of <a href='#!/api/Ext.grid.column.Action-method-propertyIsEnumerable'>propertyIsEnumerable</a> on objects and arrays:\n\n    var o = {};\n    var a = [];\n    o.prop = 'is enumerable';\n    a[0] = 'is enumerable';\n\n    o.propertyIsEnumerable('prop');   // returns true\n    a.propertyIsEnumerable(0);        // returns true\n\nThe following example demonstrates the enumerability of user-defined versus built-in properties:\n\n    var a = ['is enumerable'];\n\n    a.propertyIsEnumerable(0);          // returns true\n    a.propertyIsEnumerable('length');   // returns false\n\n    Math.propertyIsEnumerable('random');   // returns false\n    this.propertyIsEnumerable('Math');     // returns false\n\nDirect versus inherited properties\n\n    var a = [];\n    a.propertyIsEnumerable('constructor');         // returns false\n\n    function firstConstructor()\n    {\n        this.property = 'is not enumerable';\n    }\n    firstConstructor.prototype.firstMethod = function () {};\n\n    function secondConstructor()\n    {\n        this.method = function method() { return 'is enumerable'; };\n    }\n\n    secondConstructor.prototype = new firstConstructor;\n    secondConstructor.prototype.constructor = secondConstructor;\n\n    var o = new secondConstructor();\n    o.arbitraryProperty = 'is enumerable';\n\n    o.propertyIsEnumerable('arbitraryProperty');   // returns true\n    o.propertyIsEnumerable('method');              // returns true\n    o.propertyIsEnumerable('property');            // returns false\n\n    o.property = 'is enumerable';\n\n    o.propertyIsEnumerable('property');            // returns true\n\n    // These return false as they are on the prototype which\n    // propertyIsEnumerable does not consider (even though the last two\n    // are iteratable with for-in)\n    o.propertyIsEnumerable('prototype'); // returns false (as of JS 1.8.1/FF3.6)\n    o.propertyIsEnumerable('constructor'); // returns false\n    o.propertyIsEnumerable('firstMethod'); // returns false\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "prop",
                    "text": "The name of the property to test.\n",
                    "type": "String",
                    "src": {
                      "name": "24,220,20",
                      "text": "24,220,25,34",
                      "type": "24,220,12"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "If the object does not have the specified property, this\nmethod returns false.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "24,221,22,57:24,222,4,22",
                      "type": "24,221,13"
                    }
                  }
                ],
                "src": {
                  "name": "24,155,12",
                  "text": "24,156,4,2313"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "publishState",
                "since": "5.0.0",
                "text": "Publish this components state to the `ViewModel`. If no arguments are given (or if\nthis is the first call), the entire state is published. This state is determined by\nthe <a href='#!/api/Ext.grid.column.Action-cfg-publishes'>publishes</a> property.\n\nThis method is called only by component authors.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "property",
                    "optional": true,
                    "text": "The name of the property to update.\n",
                    "type": "String",
                    "src": {
                      "name": "9,422,25",
                      "text": "9,422,35,36",
                      "type": "9,422,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "value",
                    "optional": true,
                    "text": "The value of `property`. Only needed if `property` is given.\n",
                    "type": "Object",
                    "src": {
                      "name": "9,423,25",
                      "text": "9,423,32,61",
                      "type": "9,423,16"
                    }
                  }
                ],
                "src": {
                  "access": "9,424,8",
                  "name": "9,427,0",
                  "since": "9,425,15",
                  "text": "9,416,8,244"
                }
              },
              {
                "$type": "method",
                "name": "query",
                "text": "Retrieves all descendant components which match the passed selector.\nExecutes an Ext.ComponentQuery.query using this container as its root.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "Selector complying to an Ext.ComponentQuery selector.\nIf no selector is specified all items will be returned.\n",
                    "type": "String",
                    "src": {
                      "name": "22,14,25",
                      "text": "22,14,35,54:22,15,8,56",
                      "type": "22,14,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Components which matched the selector\n",
                    "type": "Ext.Component[]",
                    "src": {
                      "text": "22,16,34,38",
                      "type": "22,16,17"
                    }
                  }
                ],
                "src": {
                  "name": "22,18,0",
                  "text": "22,12,8,140"
                }
              },
              {
                "$type": "method",
                "name": "queryBy",
                "text": "Retrieves all descendant components which match the passed function.\nThe function should return false for components that are to be\nexcluded from the selection.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The matcher function. It will be called with a single argument,\nthe component being tested.\n",
                    "type": "Function",
                    "src": {
                      "name": "22,27,26",
                      "text": "22,27,29,64:22,28,8,28",
                      "type": "22,27,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope in which to run the function. If not specified,\nit will default to the active component.\n",
                    "type": "Object",
                    "src": {
                      "name": "22,29,25",
                      "text": "22,29,32,58:22,30,8,41",
                      "type": "22,29,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Components matched by the passed function\n",
                    "type": "Ext.Component[]",
                    "src": {
                      "text": "22,31,34,42",
                      "type": "22,31,17"
                    }
                  }
                ],
                "src": {
                  "name": "22,33,0",
                  "text": "22,24,8,161"
                }
              },
              {
                "$type": "method",
                "name": "queryById",
                "text": "Finds a component at any level under this container matching the id/itemId.\nThis is a shorthand for calling ct.down('#' + id);\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "text": "The id to find\n",
                    "type": "String",
                    "src": {
                      "name": "22,52,24",
                      "text": "22,52,27,15",
                      "type": "22,52,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The matching id, null if not found\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "22,53,32,35",
                      "type": "22,53,17"
                    }
                  }
                ],
                "src": {
                  "name": "22,55,0",
                  "text": "22,50,8,127"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "refreshScroll",
                "text": "Implementation which updates the scroll range of a touch scroller.\nSubclasses may change implementation.\n",
                "src": {
                  "access": "6,6482,12",
                  "name": "6,6486,0",
                  "text": "6,6483,12,105"
                }
              },
              {
                "$type": "method",
                "name": "registerFloatingItem",
                "text": "Called by Component#doAutoRender\n\nRegister a Container configured `floating: true` with this Component's <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a>.\n\nComponents added in this way will not participate in any layout, but will be rendered\nupon first show in the way that <a href='#!/api/Ext.window.Window'>Ext.window.Window</a>s are.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cmp",
                    "src": {
                      "name": "6,4683,0"
                    }
                  }
                ],
                "src": {
                  "name": "6,4683,0",
                  "text": "6,4676,8,304"
                }
              },
              {
                "$type": "method",
                "name": "relayEvents",
                "text": "Relays selected events from the specified Observable as if the events were fired by `this`.\n\nFor example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:\n\n    this.relayEvents(this.getStore(), ['load']);\n\nThe grid instance will then have an observable 'load' event which will be passed\nthe parameters of the store's load event and any function fired with the grid's\nload event would have access to the grid using the this keyword (unless the event\nis handled by a controller's control/listen event listener in which case 'this'\nwill be the controller rather than the grid).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "origin",
                    "text": "The Observable whose events this object is to relay.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1468,27",
                      "text": "13,1468,34,53",
                      "type": "13,1468,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "events",
                    "text": "Array of event names to relay or an Object with key/value\npairs translating to ActualEventName/NewEventName respectively. For example:\n    this.relayEvents(this, {add:'push', remove:'pop'});\n\nWould now redispatch the add event of this as a push event and the remove event as a pop event.\n",
                    "type": "String[]/Object",
                    "src": {
                      "name": "13,1469,36",
                      "text": "13,1469,43,58:13,1470,11,231",
                      "type": "13,1469,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "prefix",
                    "optional": true,
                    "text": "A common prefix to prepend to the event names. For example:\n\n    this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n\nNow the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.\n",
                    "type": "String",
                    "src": {
                      "name": "13,1475,28",
                      "text": "13,1475,36,60:13,1476,11,164",
                      "type": "13,1475,19"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "A `Destroyable` object. An object which implements the `destroy` method which, when destroyed, removes all relayers. For example:\n\n    this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n\nCan be undone by calling\n\n    Ext.destroy(this.storeRelayers);\n\nor\n    this.store.relayers.destroy();\n",
                    "type": "Object",
                    "src": {
                      "text": "13,1481,28,130:13,1482,11,192",
                      "type": "13,1481,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1492,0",
                  "text": "13,1455,11,651"
                }
              },
              {
                "$type": "method",
                "name": "remove",
                "since": "2.3.0",
                "text": "Removes a component from this container.  Fires the <a href='#!/api/Ext.grid.column.Action-event-beforeremove'>beforeremove</a> event\nbefore removing, then fires the <a href='#!/api/Ext.grid.column.Action-event-remove'>event-remove</a> event after the component has\nbeen removed.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The component instance or id to remove.\n",
                    "type": "Ext.Component/String",
                    "src": {
                      "name": "4,1648,38",
                      "text": "4,1648,48,40",
                      "type": "4,1648,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "autoDestroy",
                    "optional": true,
                    "text": "True to automatically invoke the removed Component's\n<a href='#!/api/Ext.Component-method-destroy'>Ext.Component#method-destroy</a> function.\n\nDefaults to the value of this Container's <a href='#!/api/Ext.grid.column.Action-cfg-autoDestroy'>autoDestroy</a> config.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "4,1650,26",
                      "text": "4,1650,39,53:4,1651,8,120",
                      "type": "4,1650,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "component The Component that was removed.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1655,32,42",
                      "type": "4,1655,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1658,0",
                  "since": "4,1656,15",
                  "text": "4,1644,8,179"
                }
              },
              {
                "$type": "method",
                "name": "removeAfterListener",
                "text": "Alias for <a href='#!/api/Ext.grid.column.Action-method-unAfter'>unAfter</a>.\n",
                "src": {
                  "name": "13,1248,0",
                  "text": "13,1246,12,28"
                }
              },
              {
                "$type": "method",
                "name": "removeAll",
                "since": "2.3.0",
                "text": "Removes all components from this container.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "autoDestroy",
                    "optional": true,
                    "text": "True to automatically invoke the removed\nComponent's <a href='#!/api/Ext.Component-method-destroy'>Ext.Component#method-destroy</a> function.\nDefaults to the value of this Container's <a href='#!/api/Ext.grid.column.Action-cfg-autoDestroy'>autoDestroy</a> config.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "4,1691,26",
                      "text": "4,1691,39,41:4,1692,8,130",
                      "type": "4,1691,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Array of the removed components\n",
                    "type": "Ext.Component[]",
                    "src": {
                      "text": "4,1694,34,32",
                      "type": "4,1694,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1697,0",
                  "since": "4,1695,15",
                  "text": "4,1690,8,44"
                }
              },
              {
                "$type": "method",
                "name": "removeBeforeListener",
                "text": "Alias for <a href='#!/api/Ext.grid.column.Action-method-unBefore'>unBefore</a>.\n",
                "src": {
                  "name": "13,1242,0",
                  "text": "13,1240,12,29"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-addCls'>addCls</a> instead.\n",
                "deprecatedVersion": "4.1",
                "inheritdoc": "Ext.Component#removeCls",
                "name": "removeClass",
                "since": "2.3.0",
                "src": {
                  "deprecatedMessage": "6,6627,20",
                  "deprecatedVersion": "6,6627,20",
                  "inheritdoc": "6,6626,20",
                  "name": "6,6625,28",
                  "since": "6,6628,27"
                }
              },
              {
                "$type": "method",
                "name": "removeCls",
                "text": "Removes a CSS class from the top level element representing this component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cls",
                    "text": "The CSS class name to remove.\n",
                    "type": "String/String[]",
                    "src": {
                      "name": "6,4693,33",
                      "text": "6,4693,37,30",
                      "type": "6,4693,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Returns the Component to allow method chaining.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4694,32,48",
                      "type": "6,4694,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4696,0",
                  "text": "6,4692,8,76"
                }
              },
              {
                "$type": "method",
                "name": "removeClsWithUI",
                "text": "Removes a <a href='#!/api/Ext.grid.column.Action-cfg-cls'>cls</a> to the <a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a> array, which will also call <a href='#!/api/Ext.grid.column.Action-method-removeUIClsFromElement'>removeUIClsFromElement</a> and removes it from all\nelements of this component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cls",
                    "text": "A string or an array of strings to remove to the <a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a>.\n",
                    "type": "String/String[]",
                    "src": {
                      "name": "6,4707,33",
                      "text": "6,4707,37,58",
                      "type": "6,4707,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,4709,0",
                  "text": "6,4705,8,143"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "removeDelegatedListener",
                "text": "Removes delegated listeners for a given eventName, function, and scope.\nUsers should not invoke this method directly.  It is called automatically by\nthe framework as part of <a href='#!/api/Ext.grid.column.Action-method-removeListener'>removeListener</a> processing.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "src": {
                      "name": "18,131,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "src": {
                      "name": "18,131,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "src": {
                      "name": "18,131,0"
                    }
                  }
                ],
                "src": {
                  "access": "18,126,12",
                  "name": "18,131,0",
                  "text": "18,127,12,210"
                }
              },
              {
                "$type": "method",
                "name": "removeListener",
                "text": "Removes an event handler.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The type of event the handler was associated with.\n",
                    "type": "String",
                    "src": {
                      "name": "13,1102,28",
                      "text": "13,1102,38,51",
                      "type": "13,1102,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The handler to remove. **This must be a reference to the function\npassed into the\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> call.**\n",
                    "type": "Function",
                    "src": {
                      "name": "13,1103,30",
                      "text": "13,1103,33,66:13,1104,12,76",
                      "type": "13,1103,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "(optional) The scope originally specified for the handler. It\nmust be the same as the scope argument specified in the original call to\n<a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> or the listener will not be removed.\n\n**Convenience Syntax**\n\nYou can use the <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a>\n`destroyable: true` config option in place of calling un().  For example:\n\n    var listeners = cmp.on({\n        scope: cmp,\n        afterrender: cmp.onAfterrender,\n        beforehide: cmp.onBeforeHide,\n        destroyable: true\n    });\n\n    // Remove listeners\n    listeners.destroy();\n    // or\n    cmp.un(\n        scope: cmp,\n        afterrender: cmp.onAfterrender,\n        beforehide: cmp.onBeforeHide\n    );\n\n**Exception - DOM event handlers using the element config option**\n\nYou must go directly through the element to detach an event handler attached using\nthe <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a> _element_ option.\n\n    panel.on({\n        element: 'body',\n        click: 'onBodyCLick'\n    });\n\n    panel.body.un({\n        click: 'onBodyCLick'\n    });\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1106,28",
                      "text": "13,1106,34,62:13,1107,12,1017",
                      "type": "13,1106,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1145,0",
                  "text": "13,1100,12,27"
                }
              },
              {
                "$type": "method",
                "name": "removeManagedListener",
                "text": "Removes listeners that were added by the <a href='#!/api/Ext.grid.column.Action-method-mon'>mon</a> method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "text": "The item from which to remove a listener/listeners.\n",
                    "type": "Ext.util.Observable/Ext.dom.Element",
                    "src": {
                      "name": "13,526,56",
                      "text": "13,526,61,52",
                      "type": "13,526,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "ename",
                    "text": "The event name, or an object containing event name properties.\n",
                    "type": "Object/String",
                    "src": {
                      "name": "13,527,34",
                      "text": "13,527,40,63",
                      "type": "13,527,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "(optional) If the `ename` parameter was an event name, this is the handler function.\n",
                    "type": "Function",
                    "src": {
                      "name": "13,528,29",
                      "text": "13,528,32,85",
                      "type": "13,528,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "(optional) If the `ename` parameter was an event name, this is the scope (`this` reference)\nin which the handler function is executed.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,529,27",
                      "text": "13,529,33,92:13,530,11,43",
                      "type": "13,529,19"
                    }
                  }
                ],
                "src": {
                  "name": "13,532,0",
                  "text": "13,524,11,63"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "removeManagedListenerItem",
                "text": "Remove a single managed listener item\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "isClear",
                    "text": "True if this is being called during a clear\n",
                    "type": "Boolean",
                    "src": {
                      "name": "13,1307,28",
                      "text": "13,1307,36,44",
                      "type": "13,1307,19"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "managedListener",
                    "text": "The managed listener item\nSee removeManagedListener for other args\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1308,27",
                      "text": "13,1308,43,26:13,1309,11,41",
                      "type": "13,1308,19"
                    }
                  }
                ],
                "src": {
                  "access": "13,1306,11",
                  "name": "13,1311,0",
                  "text": "13,1305,11,38"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "removeUIClsFromElement",
                "text": "Method which removes a specified UI + <a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a> from the components element. The <a href='#!/api/Ext.grid.column.Action-cfg-cls'>cls</a>\nwhich is added to the element will be: `this.baseCls + '-' + ui + uiCls`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "uiCls",
                    "text": "The UI class to remove from the element.\n",
                    "type": "String",
                    "src": {
                      "name": "6,2348,24",
                      "text": "6,2348,30,41",
                      "type": "6,2348,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,2349,8",
                  "name": "6,2351,0",
                  "text": "6,2346,8,159"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "removeUIFromElement",
                "text": "Method which removes a specified UI from the components element.\n",
                "src": {
                  "access": "6,6524,12",
                  "name": "6,6526,0",
                  "text": "6,6523,12,65"
                }
              },
              {
                "$type": "method",
                "name": "render",
                "text": "Renders the Component into the passed HTML element.\n\n**If you are using a <a href='#!/api/Ext.container.Container'>Ext.container.Container</a> object to house this\nComponent, then do not use the render method.**\n\nA Container's child Components are rendered by that Container's\n<a href='#!/api/Ext.container.Container-cfg-layout'>Ext.container.Container#layout</a> manager when the Container is first rendered.\n\nWhen creating complex UIs, it is important to remember that sizing and positioning\nof child items is the responsibility of the Container's <a href='#!/api/Ext.container.Container-cfg-layout'>Ext.container.Container#layout</a>\nmanager.  If you expect child items to be sized in response to user interactions, you must\nconfigure the Container with a layout manager which creates and manages the type of layout you\nhave in mind.\n\n**Omitting the Container's <a href='#!/api/Ext.container.Container-cfg-layout'>Ext.Container#layout</a> config means that a basic\nlayout manager is used which does nothing but render child components sequentially into the\nContainer. No sizing or positioning will be performed in this situation.**\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "container",
                    "optional": true,
                    "text": "The element this Component should be\nrendered into. If it is being created from existing markup, this should be omitted.\n",
                    "type": "Ext.dom.Element/HTMLElement/String",
                    "src": {
                      "name": "20,758,53",
                      "text": "20,758,64,37:20,759,8,84",
                      "type": "20,758,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "position",
                    "optional": true,
                    "text": "The element ID or DOM node index within the container **before**\nwhich this component will be inserted (defaults to appending to the end of the container)\n",
                    "type": "String/Number",
                    "src": {
                      "name": "20,760,32",
                      "text": "20,760,42,65:20,761,8,90",
                      "type": "20,760,16"
                    }
                  }
                ],
                "src": {
                  "name": "20,763,0",
                  "text": "20,740,8,986"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "resolveListenerScope",
                "since": "5.0.0",
                "text": "Gets the Controller or Component that is used as the event root for this view.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "defaultScope",
                    "optional": true,
                    "text": "The default scope to return if none is found.\n",
                    "type": "Object",
                    "value": "this",
                    "src": {
                      "name": "23,185,25",
                      "text": "23,185,44,46",
                      "type": "23,185,16",
                      "value": "23,185,38"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The default listener scope.\n",
                    "type": "Ext.app.ViewController/Ext.container.Container",
                    "src": {
                      "text": "23,186,65,28",
                      "type": "23,186,17"
                    }
                  }
                ],
                "src": {
                  "access": "23,188,8",
                  "name": "23,191,0",
                  "since": "23,189,15",
                  "text": "23,183,8,80"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "resolveSatelliteListenerScope",
                "since": "5.1.1",
                "text": "Returns the default listener scope for a \"satellite\" of this component.\nUsed for resolving scope for observable objects that are not part of the normal\nContainer/Component hierarchy (for example, plugins)\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "satellite",
                    "type": "Ext.mixin.Observable",
                    "src": {
                      "name": "23,227,38",
                      "type": "23,227,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "defaultScope",
                    "optional": true,
                    "type": "Object",
                    "src": {
                      "name": "23,228,25",
                      "type": "23,228,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The listener scope\n",
                    "type": "Object",
                    "src": {
                      "text": "23,229,25,19",
                      "type": "23,229,17"
                    }
                  }
                ],
                "src": {
                  "access": "23,230,8",
                  "name": "23,233,0",
                  "since": "23,231,15",
                  "text": "23,223,8,206"
                }
              },
              {
                "$type": "method",
                "name": "resumeEvent",
                "text": "Resumes firing of the named event(s).\n\nAfter calling this method to resume events, the events will fire when requested to fire.\n\n**Note that if the <a href='#!/api/Ext.grid.column.Action-method-suspendEvent'>suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.**\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "Multiple event names to resume.\n",
                    "type": "String...",
                    "src": {
                      "name": "13,1409,32",
                      "text": "13,1409,42,32",
                      "type": "13,1409,21"
                    }
                  }
                ],
                "src": {
                  "name": "13,1411,0",
                  "text": "13,1402,12,320"
                }
              },
              {
                "$type": "method",
                "name": "resumeEvents",
                "text": "Resumes firing events (see <a href='#!/api/Ext.grid.column.Action-method-suspendEvents'>suspendEvents</a>).\n\nIf events were suspended using the `queueSuspended` parameter, then all events fired\nduring event suspension will be sent to any listeners now.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "discardQueue",
                    "optional": true,
                    "text": "`true` to prevent any previously queued events from firing\nwhile we were suspended. See <a href='#!/api/Ext.grid.column.Action-method-suspendEvents'>suspendEvents</a>.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "13,1433,29",
                      "text": "13,1433,43,59:13,1434,11,53",
                      "type": "13,1433,19"
                    }
                  }
                ],
                "src": {
                  "name": "13,1436,0",
                  "text": "13,1428,11,198"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "reverseTranslateXY",
                "text": "Converts local coordinates into page-level coordinates\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "xy",
                    "text": "The local x and y coordinates\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,940,26",
                      "text": "19,940,29,30",
                      "type": "19,940,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The translated coordinates\n",
                    "type": "Number[]",
                    "src": {
                      "text": "19,941,27,27",
                      "type": "19,941,17"
                    }
                  }
                ],
                "src": {
                  "access": "19,942,8",
                  "name": "19,944,0",
                  "text": "19,939,8,55"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "revertFocus",
                "text": "Returns focus to the cached previously focused Component or element.\n\nUsually called by onHide.\n",
                "src": {
                  "access": "11,547,12",
                  "name": "11,549,0",
                  "text": "11,543,12,97"
                }
              },
              {
                "$type": "method",
                "name": "savePropsToState",
                "text": "Gathers additional named properties of the instance and adds their current values\nto the passed state object.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "propNames",
                    "text": "The name (or array of names) of the property to save.\n",
                    "type": "String/String[]",
                    "src": {
                      "name": "16,349,33",
                      "text": "16,349,43,54",
                      "type": "16,349,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The state object in to which to save the property values.\n",
                    "type": "Object",
                    "src": {
                      "name": "16,350,24",
                      "text": "16,350,30,58",
                      "type": "16,350,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "state\n",
                    "type": "Object",
                    "src": {
                      "text": "16,351,25,6",
                      "type": "16,351,17"
                    }
                  }
                ],
                "src": {
                  "name": "16,353,0",
                  "text": "16,347,8,110"
                }
              },
              {
                "$type": "method",
                "name": "savePropToState",
                "text": "Conditionally saves a single property from this object to the given state object.\nThe idea is to only save state which has changed from the initial state so that\ncurrent software settings do not override future software settings. Only those\nvalues that are user-changed state should be saved.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "propName",
                    "text": "The name of the property to save.\n",
                    "type": "String",
                    "src": {
                      "name": "16,325,24",
                      "text": "16,325,33,34",
                      "type": "16,325,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The state object in to which to save the property.\n",
                    "type": "Object",
                    "src": {
                      "name": "16,326,24",
                      "text": "16,326,30,51",
                      "type": "16,326,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "stateName",
                    "text": "(optional) The name to use for the property in state.\n",
                    "type": "String",
                    "src": {
                      "name": "16,327,24",
                      "text": "16,327,34,54",
                      "type": "16,327,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "True if the property was saved, false if not.\n",
                    "type": "Boolean",
                    "src": {
                      "text": "16,328,26,46",
                      "type": "16,328,17"
                    }
                  }
                ],
                "src": {
                  "name": "16,330,0",
                  "text": "16,320,8,294"
                }
              },
              {
                "$type": "method",
                "name": "saveState",
                "text": "Saves the state of the object to the persistence store.\n",
                "src": {
                  "name": "16,209,0",
                  "text": "16,207,8,56"
                }
              },
              {
                "$type": "method",
                "name": "scrollBy",
                "text": "Scrolls this Component by the passed delta values, optionally animating.\n\nAll of the following are equivalent:\n\n     comp.scrollBy(10, 10, true);\n     comp.scrollBy([10, 10], true);\n     comp.scrollBy({ x: 10, y: 10 }, true);\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "deltaX",
                    "text": "Either the x delta, an Array specifying x and y deltas or\nan object with \"x\" and \"y\" properties.\n",
                    "type": "Number/Number[]/Object",
                    "src": {
                      "name": "6,4772,40",
                      "text": "6,4772,47,58:6,4773,8,39",
                      "type": "6,4772,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "deltaY",
                    "text": "Either the y delta, or an animate flag or config object.\n",
                    "type": "Number/Boolean/Object",
                    "src": {
                      "name": "6,4774,39",
                      "text": "6,4774,46,57",
                      "type": "6,4774,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "text": "Animate flag/config object if the delta values were passed separately.\n",
                    "type": "Boolean/Object",
                    "src": {
                      "name": "6,4775,32",
                      "text": "6,4775,40,71",
                      "type": "6,4775,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,4777,0",
                  "text": "6,4764,8,227"
                }
              },
              {
                "$type": "method",
                "name": "scrollTo",
                "text": "Scrolls this component to the specified `x` and `y` coordinates.  Only applicable\nfor <a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a> components.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "type": "Number",
                    "src": {
                      "name": "6,4788,24",
                      "type": "6,4788,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "type": "Number",
                    "src": {
                      "name": "6,4789,24",
                      "type": "6,4789,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "optional": true,
                    "text": "true for the default animation or a standard Element\nanimation config object\n",
                    "type": "Boolean/Object",
                    "src": {
                      "name": "6,4790,33",
                      "text": "6,4790,42,53:6,4791,8,24",
                      "type": "6,4790,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,4793,0",
                  "text": "6,4786,8,118"
                }
              },
              {
                "$type": "method",
                "name": "sequenceFx",
                "text": "Ensures that all effects queued after sequenceFx is called on this object are run in sequence. This is the\nopposite of <a href='#!/api/Ext.grid.column.Action-method-syncFx'>syncFx</a>.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Object",
                    "src": {
                      "text": "21,352,25,5",
                      "type": "21,352,17"
                    }
                  }
                ],
                "src": {
                  "name": "21,354,0",
                  "text": "21,350,8,136"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setActive",
                "text": "This method is called internally by <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a> to signal that a floating Component has either been\nmoved to the top of its zIndex stack, or pushed from the top of its zIndex stack.\n\nIf a _Window_ is superceded by another Window, deactivating it hides its shadow.\n\nThis method also fires the <a href='#!/api/Ext.Component-event-activate'>Ext.Component#activate</a> or\n<a href='#!/api/Ext.Component-event-deactivate'>Ext.Component#deactivate</a> event depending on which action occurred.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "active",
                    "optional": true,
                    "text": "True to activate the Component, false to deactivate it.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "3,520,26",
                      "text": "3,520,40,56",
                      "type": "3,520,16",
                      "value": "3,520,33"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "doFocus",
                    "optional": true,
                    "text": "When activating, set to true to focus the component;\nwhen deactivating, set to false to avoid returning focus to previous element.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "3,521,26",
                      "text": "3,521,35,53:3,522,8,79",
                      "type": "3,521,16"
                    }
                  }
                ],
                "src": {
                  "access": "3,511,8",
                  "name": "3,525,0",
                  "text": "3,512,8,436"
                }
              },
              {
                "$type": "method",
                "name": "setActiveItem",
                "text": "Sets a component as the active layout item. This only applies when using\na <a href='#!/api/Ext.layout.container.Card'>Ext.layout.container.Card</a> layout.\n\n    var card1 = Ext.create('Ext.panel.Panel', {itemId: 'card-1'});\n    var card2 = Ext.create('Ext.panel.Panel', {itemId: 'card-2'});\n    var panel = Ext.create('Ext.panel.Panel', {\n        layout: 'card',\n        items: [card1, card2]\n    });\n    // These are all equivalent\n    panel.getLayout().setActiveItem(card2);\n    panel.getLayout().setActiveItem('card-2');\n    panel.getLayout().setActiveItem(1);\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "text": "The component, component <a href='#!/api/Ext.Component-cfg-id'>Ext.Component#id</a>,\n<a href='#!/api/Ext.Component-cfg-itemId'>Ext.Component#itemId</a>, or index of component.\n",
                    "type": "Ext.Component/Number/String",
                    "src": {
                      "name": "4,1798,45",
                      "text": "4,1798,50,54:4,1799,8,60",
                      "type": "4,1798,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the activated component or false when nothing activated.\nFalse is returned also when trying to activate an already active item.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "4,1800,32,57:4,1801,8,71",
                      "type": "4,1800,17"
                    }
                  }
                ],
                "src": {
                  "name": "4,1803,0",
                  "text": "4,1784,8,526"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-setScrollable'>setScrollable</a> instead\n",
                "deprecatedVersion": "5.0.0",
                "name": "setAutoScroll",
                "text": "Sets the overflow on the content element of the component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "scroll",
                    "text": "True to allow the Component to auto scroll.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,4803,25",
                      "text": "6,4803,32,44",
                      "type": "6,4803,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4804,32,5",
                      "type": "6,4804,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedMessage": "6,4805,8",
                  "deprecatedVersion": "6,4805,8",
                  "name": "6,4807,0",
                  "text": "6,4802,8,59"
                }
              },
              {
                "$type": "method",
                "name": "setBorder",
                "items": [
                  {
                    "$type": "param",
                    "name": "border",
                    "text": "The border, see <a href='#!/api/Ext.grid.column.Action-cfg-border'>border</a>. If a falsey value is passed\nthe border will be removed.\n",
                    "type": "String/Number",
                    "src": {
                      "name": "6,4814,31",
                      "text": "6,4814,38,61:6,4815,8,28",
                      "type": "6,4814,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,4817,0"
                }
              },
              {
                "$type": "method",
                "name": "setBox",
                "text": "Sets the element's box.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "box",
                    "text": "The box to fill {x, y, width, height}\n",
                    "type": "Object",
                    "src": {
                      "name": "19,832,24",
                      "text": "19,832,28,38",
                      "type": "19,832,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,833,40,5",
                      "type": "19,833,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,835,0",
                  "text": "19,831,8,24"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setComponentLayout",
                "items": [
                  {
                    "$type": "param",
                    "name": "layout",
                    "src": {
                      "name": "6,6553,0"
                    }
                  }
                ],
                "src": {
                  "access": "6,6551,12",
                  "name": "6,6553,0"
                }
              },
              {
                "$type": "method",
                "name": "setDisabled",
                "text": "Enable or disable the component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "disabled",
                    "text": "`true` to disable.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,4864,25",
                      "text": "6,4864,34,19",
                      "type": "6,4864,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,4866,0",
                  "text": "6,4863,8,33"
                }
              },
              {
                "$type": "method",
                "name": "setDock",
                "text": "Sets the dock position of this component in its parent panel. Note that this only has effect if this item is part\nof the `dockedItems` collection of a parent that has a DockLayout (note that any Panel has a DockLayout by default)\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "dock",
                    "text": "The dock position.\n",
                    "type": "Object",
                    "src": {
                      "name": "6,4844,24",
                      "text": "6,4844,29,19",
                      "type": "6,4844,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4845,32,5",
                      "type": "6,4845,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4847,0",
                  "text": "6,4842,8,230"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-setDock'>setDock</a> instead.\n",
                "deprecatedVersion": "5.0",
                "inheritdoc": "Ext.Component#setDock",
                "name": "setDocked",
                "src": {
                  "deprecatedMessage": "6,6642,20",
                  "deprecatedVersion": "6,6642,20",
                  "inheritdoc": "6,6641,20",
                  "name": "6,6640,28"
                }
              },
              {
                "$type": "method",
                "name": "setEditor",
                "text": "Sets the form field to be used for editing.\n\n**Note:** This method will only have an implementation if an Editing plugin has\nbeen enabled on the grid (<a href='#!/api/Ext.grid.plugin.CellEditing'>Ext.grid.plugin.CellEditing</a> /\n<a href='#!/api/Ext.grid.plugin.RowEditing'>Ext.grid.plugin.RowEditing</a>).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "field",
                    "text": "An object representing a field to be created. If no xtype is specified a 'textfield' is\nassumed.\n",
                    "type": "Object",
                    "src": {
                      "name": "5,1791,24",
                      "text": "5,1791,30,88:5,1792,8,9",
                      "type": "5,1791,16"
                    }
                  }
                ],
                "src": {
                  "name": "5,1784,16",
                  "text": "5,1785,8,250"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setFlex",
                "text": "Sets the flex property of this component. Only applicable when this component is\nan item of a box layout\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "flex",
                    "type": "Number",
                    "src": {
                      "name": "6,4874,24",
                      "type": "6,4874,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4873,8",
                  "name": "6,4876,0",
                  "text": "6,4871,8,105"
                }
              },
              {
                "$type": "method",
                "name": "setHeight",
                "text": "Sets the height of the component. This method fires the <a href='#!/api/Ext.grid.column.Action-event-resize'>resize</a> event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "height",
                    "text": "The new height to set. This may be one of:\n\n  - A Number specifying the new height in pixels.\n  - A String used to set the CSS height style.\n  - <a href='#!/api/undefined'>undefined</a> to leave the height unchanged.\n  - <a href='#!/api/null'>null</a> to clear the height.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,4883,24",
                      "text": "6,4883,31,43:6,4884,8,178",
                      "type": "6,4883,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4890,32,5",
                      "type": "6,4890,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4892,0",
                  "text": "6,4881,8,80"
                }
              },
              {
                "$type": "method",
                "name": "setHidden",
                "text": "Sets the hidden state of this component. This is basically the same as\n<a href='#!/api/Ext.grid.column.Action-method-setVisible'>setVisible</a> but the boolean parameter has the opposite meaning.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "hidden",
                    "type": "Boolean",
                    "src": {
                      "name": "6,5306,25",
                      "type": "6,5306,16"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.Component",
                    "src": {
                      "type": "6,5307,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5309,0",
                  "text": "6,5304,8,145"
                }
              },
              {
                "$type": "method",
                "name": "setLayout",
                "text": "Reconfigures the initially configured <a href='#!/api/Ext.grid.column.Action-cfg-layout'>layout</a>.\n\nNOTE: this method cannot be used to change the \"type\" of layout after the component\nhas been rendered to the DOM. After rendering, this method can only modify the\nexisting layout's configuration properties. The reason for this restriction is that\nmany container layouts insert special wrapping elements into the dom, and the\nframework does not currently support dynamically changing these elements once\nrendered.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "configuration",
                    "text": "object for the layout\n",
                    "type": "Object",
                    "src": {
                      "name": "4,1739,24",
                      "text": "4,1739,38,22",
                      "type": "4,1739,16"
                    }
                  }
                ],
                "src": {
                  "name": "4,1741,0",
                  "text": "4,1731,8,469"
                }
              },
              {
                "$type": "method",
                "name": "setListeners",
                "text": "An alias for <a href='#!/api/Ext.util.Observable-method-addListener'>Ext.util.Observable#addListener</a>.  In\nversions prior to 5.1, <a href='#!/api/Ext.grid.column.Action-cfg-listeners'>listeners</a> had a generated setter which could\nbe called to add listeners.  In 5.1 the listeners config is not processed\nusing the config system and has no generated setter, so this method is\nprovided for backward compatibility.  The preferred way of adding listeners\nis to use the <a href='#!/api/Ext.grid.column.Action-method-on'>on</a> method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "listeners",
                    "text": "The listeners\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1806,28",
                      "text": "13,1806,38,14",
                      "type": "13,1806,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1808,0",
                  "text": "13,1800,12,402"
                }
              },
              {
                "$type": "method",
                "name": "setLoading",
                "text": "This method allows you to show or hide a LoadMask on top of this component.\n\nThe mask will be rendered into the element returned by <a href='#!/api/Ext.grid.column.Action-method-getMaskTarget'>getMaskTarget</a> which for most Components is the Component's\nelement. See <a href='#!/api/Ext.grid.column.Action-method-getMaskTarget'>getMaskTarget</a> and <a href='#!/api/Ext.grid.column.Action-cfg-maskElement'>maskElement</a>.\n\nMost Components will return <a href='#!/api/null'>null</a> indicating that their LoadMask cannot reside inside their element, but must\nbe rendered into the document body.\n\n<a href='#!/api/Ext.view.Table'>Ext.view.Table</a> however will direct a LoadMask to be rendered into the owning <a href='#!/api/Ext.panel.Table'>Ext.panel.Table</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "load",
                    "text": "True to show the default LoadMask, a config object that will be passed to the\nLoadMask constructor, or a message String to show. False to hide the current LoadMask.\n",
                    "type": "Boolean/Object/String",
                    "src": {
                      "name": "6,4907,39",
                      "text": "6,4907,44,78:6,4908,8,87",
                      "type": "6,4907,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The LoadMask instance that has just been shown.\n",
                    "type": "Ext.LoadMask",
                    "src": {
                      "text": "6,4909,31,48",
                      "type": "6,4909,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,4911,0",
                  "text": "6,4897,8,543"
                }
              },
              {
                "$type": "method",
                "name": "setLocalX",
                "text": "Sets the local x coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href='#!/api/Ext.grid.column.Action-method-getLocalX'>getLocalX</a>, but\nmay not be symmetrical when used on a relatively positioned element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The x coordinate. A value of <a href='#!/api/null'>null</a> sets the left style to 'auto'.\n",
                    "type": "Number",
                    "src": {
                      "name": "19,105,24",
                      "text": "19,105,26,67",
                      "type": "19,105,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,106,40,5",
                      "type": "19,106,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,108,0",
                  "text": "19,102,8,230"
                }
              },
              {
                "$type": "method",
                "name": "setLocalXY",
                "text": "Sets the local x and y coordinates of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href='#!/api/Ext.grid.column.Action-method-getLocalXY'>getLocalXY</a>, but\nmay not be symmetrical when used on a relatively positioned element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The x coordinate or an array containing [x, y]. A value of\n<a href='#!/api/null'>null</a> sets the left style to 'auto'\n",
                    "type": "Number/Array",
                    "src": {
                      "name": "19,116,30",
                      "text": "19,116,32,59:19,117,8,37",
                      "type": "19,116,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "optional": true,
                    "text": "The y coordinate, required if x is not an array. A value of\n<a href='#!/api/null'>null</a> sets the top style to 'auto'\n",
                    "type": "Number",
                    "src": {
                      "name": "19,118,25",
                      "text": "19,118,28,60:19,119,8,36",
                      "type": "19,118,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,120,40,5",
                      "type": "19,120,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,122,0",
                  "text": "19,113,8,238"
                }
              },
              {
                "$type": "method",
                "name": "setLocalY",
                "text": "Sets the local y coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href='#!/api/Ext.grid.column.Action-method-getLocalY'>getLocalY</a>, but\nmay not be symmetrical when used on a relatively positioned element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "y",
                    "text": "The y coordinate. A value of <a href='#!/api/null'>null</a> sets the top style to 'auto'.\n",
                    "type": "Number",
                    "src": {
                      "name": "19,130,24",
                      "text": "19,130,26,66",
                      "type": "19,130,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,131,40,5",
                      "type": "19,131,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,133,0",
                  "text": "19,127,8,230"
                }
              },
              {
                "$type": "method",
                "name": "setMargin",
                "text": "Sets the margin on the target element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "margin",
                    "text": "The margin to set. See the <a href='#!/api/Ext.grid.column.Action-cfg-margin'>margin</a> config.\n",
                    "type": "Number/String",
                    "src": {
                      "name": "6,4959,31",
                      "text": "6,4959,38,51",
                      "type": "6,4959,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,4961,0",
                  "text": "6,4958,8,39"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setMasked",
                "text": "Set masked state for this Component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "isMasked",
                    "text": "True if masked, false otherwise.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,4036,25",
                      "text": "6,4036,34,33",
                      "type": "6,4036,16"
                    }
                  }
                ],
                "src": {
                  "access": "6,4037,8",
                  "name": "6,4039,0",
                  "text": "6,4034,8,38"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext.grid.column.Action-setScrollable'>setScrollable</a> instead\n",
                "deprecatedVersion": "5.0.0",
                "name": "setOverflowXY",
                "text": "Sets the overflow x/y on the content element of the component. The x/y overflow\nvalues can be any valid CSS overflow (e.g., 'auto' or 'scroll'). By default, the\nvalue is 'hidden'.  Passing <a href='#!/api/undefined'>undefined</a> will preserve the current value.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "overflowX",
                    "text": "The overflow-x value.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4992,24",
                      "text": "6,4992,34,22",
                      "type": "6,4992,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "overflowY",
                    "text": "The overflow-y value.\n",
                    "type": "String",
                    "src": {
                      "name": "6,4993,24",
                      "text": "6,4993,34,22",
                      "type": "6,4993,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,4994,32,5",
                      "type": "6,4994,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedMessage": "6,4995,8",
                  "deprecatedVersion": "6,4995,8",
                  "name": "6,4997,0",
                  "text": "6,4988,8,235"
                }
              },
              {
                "$type": "method",
                "name": "setPagePosition",
                "text": "Sets the page XY position of the component. To set the left and top instead, use <a href='#!/api/Ext.grid.column.Action-method-setPosition'>setPosition</a>.\nThis method fires the <a href='#!/api/Ext.grid.column.Action-event-move'>event-move</a> event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The new x position or an array of `[x,y]`.\n",
                    "type": "Number/Number[]",
                    "src": {
                      "name": "6,5009,33",
                      "text": "6,5009,35,43",
                      "type": "6,5009,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "optional": true,
                    "text": "The new y position.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,5010,25",
                      "text": "6,5010,28,20",
                      "type": "6,5010,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "optional": true,
                    "text": "True to animate the Component into its new position. You may also pass an\nanimation configuration.\n",
                    "type": "Boolean/Object",
                    "src": {
                      "name": "6,5011,33",
                      "text": "6,5011,42,74:6,5012,8,25",
                      "type": "6,5011,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5013,32,5",
                      "type": "6,5013,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5015,0",
                  "text": "6,5007,8,152"
                }
              },
              {
                "$type": "method",
                "name": "setPosition",
                "text": "Sets the left and top of the component. To set the page XY position instead, use <a href='#!/api/Ext.Component-method-setPagePosition'>Ext.Component#setPagePosition</a>. This\nmethod fires the <a href='#!/api/Ext.grid.column.Action-event-move'>event-move</a> event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The new left, an array of `[x,y]`, or animation config object containing `x` and `y` properties.\n",
                    "type": "Number/Number[]/Object",
                    "src": {
                      "name": "6,5057,40",
                      "text": "6,5057,42,97",
                      "type": "6,5057,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "optional": true,
                    "text": "The new top.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,5058,25",
                      "text": "6,5058,28,13",
                      "type": "6,5058,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "optional": true,
                    "text": "If `true`, the Component is _animated_ into its new position. You may also pass an\nanimation configuration.\n",
                    "type": "Boolean/Object",
                    "src": {
                      "name": "6,5059,33",
                      "text": "6,5059,42,83:6,5060,8,25",
                      "type": "6,5059,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5061,32,5",
                      "type": "6,5061,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5063,0",
                  "text": "6,5055,8,185"
                }
              },
              {
                "$type": "method",
                "name": "setScrollX",
                "text": "Sets the \"x\" scroll position for this component.  Only applicable for\n<a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a> components\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "type": "Number",
                    "src": {
                      "name": "6,5103,24",
                      "type": "6,5103,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "optional": true,
                    "text": "true for the default animation or a standard Element\nanimation config object\n",
                    "type": "Boolean/Object",
                    "src": {
                      "name": "6,5104,33",
                      "text": "6,5104,42,53:6,5105,8,24",
                      "type": "6,5104,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,5107,0",
                  "text": "6,5101,8,101"
                }
              },
              {
                "$type": "method",
                "name": "setScrollY",
                "text": "Sets the \"y\" scroll position for this component.  Only applicable for\n<a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a> components\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "y",
                    "type": "Number",
                    "src": {
                      "name": "6,5118,24",
                      "type": "6,5118,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "optional": true,
                    "text": "true for the default animation or a standard Element\nanimation config object\n",
                    "type": "Boolean/Object",
                    "src": {
                      "name": "6,5119,33",
                      "text": "6,5119,42,53:6,5120,8,24",
                      "type": "6,5119,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,5122,0",
                  "text": "6,5116,8,101"
                }
              },
              {
                "$type": "method",
                "name": "setSize",
                "text": "Sets the width and height of this Component. This method fires the <a href='#!/api/Ext.grid.column.Action-event-resize'>resize</a> event. This method can accept\neither width and height as separate arguments, or you can pass a size object like `{width:10, height:20}`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "width",
                    "text": "The new width to set. This may be one of:\n\n  - A Number specifying the new width in pixels.\n  - A String used to set the CSS width style.\n  - A size object in the format `{width: widthValue, height: heightValue}`.\n  - <a href='#!/api/undefined'>undefined</a> to leave the width unchanged.\n",
                    "type": "Number/String/Object",
                    "src": {
                      "name": "6,5134,38",
                      "text": "6,5134,44,42:6,5135,8,219",
                      "type": "6,5134,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "height",
                    "text": "The new height to set (not required if a size object is passed as the first arg).\nThis may be one of:\n\n  - A Number specifying the new height in pixels.\n  - A String used to set the CSS height style. Animation may **not** be used.\n  - <a href='#!/api/undefined'>undefined</a> to leave the height unchanged.\n",
                    "type": "Number/String",
                    "src": {
                      "name": "6,5141,31",
                      "text": "6,5141,38,82:6,5142,8,197",
                      "type": "6,5141,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5148,32,5",
                      "type": "6,5148,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5150,0",
                  "text": "6,5131,8,221"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setSortState",
                "text": "Synchronize column UI visible sort state with Store's sorters.\n",
                "src": {
                  "access": "10,853,8",
                  "name": "10,856,0",
                  "text": "10,854,8,63"
                }
              },
              {
                "$type": "method",
                "name": "setStyle",
                "text": "Sets the style for this Component's primary element.\n\nStyles should be a valid DOM element style property.\n[Valid style property names](http://www.w3schools.com/jsref/dom_obj_style.asp)\n(_along with the supported CSS version for each_)\n\n    var name = Ext.create({\n        xtype: 'component',\n        renderTo: Ext.getBody(),\n        html: 'Phineas Flynn'\n    });\n\n    // two-param syntax\n    name.setStyle('color', 'white');\n\n    // single-param syntax\n    name.setStyle({\n        fontWeight: 'bold',\n        backgroundColor: 'gray',\n        padding: '10px'\n    });\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "property",
                    "text": "The style property to be set, or an object of\nmultiple styles.\n",
                    "type": "String/Object",
                    "src": {
                      "name": "6,5225,31",
                      "text": "6,5225,40,46:6,5226,8,17",
                      "type": "6,5225,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "value",
                    "optional": true,
                    "text": "The value to apply to the given property, or null if an\nobject was passed.\n",
                    "type": "String",
                    "src": {
                      "name": "6,5227,25",
                      "text": "6,5227,32,56:6,5228,8,19",
                      "type": "6,5227,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5229,32,5",
                      "type": "6,5229,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5231,0",
                  "text": "6,5203,8,568"
                }
              },
              {
                "$type": "method",
                "name": "setTabIndex",
                "text": "Set the tabIndex property for this Focusable. If the focusEl\nis avalable, set tabIndex attribute on it, too.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "newTabIndex",
                    "text": "new tabIndex to set\n",
                    "type": "Number",
                    "src": {
                      "name": "11,460,24",
                      "text": "11,460,36,20",
                      "type": "11,460,16"
                    }
                  }
                ],
                "src": {
                  "name": "11,462,0",
                  "text": "11,457,8,110"
                }
              },
              {
                "$type": "method",
                "name": "setText",
                "text": "Sets the header text for this Column.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "text",
                    "text": "The header to display on this Column.\n",
                    "type": "String",
                    "src": {
                      "name": "5,1093,24",
                      "text": "5,1093,29,38",
                      "type": "5,1093,16"
                    }
                  }
                ],
                "src": {
                  "name": "5,1095,0",
                  "text": "5,1092,8,38"
                }
              },
              {
                "$type": "method",
                "name": "setUI",
                "text": "Sets the UI for the component. This will remove any existing UIs on the component. It will also loop through any\n<a href='#!/api/Ext.grid.column.Action-cfg-uiCls'>uiCls</a> set on the component and rename them so they include the new UI.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "ui",
                    "text": "The new UI for the component.\n",
                    "type": "String",
                    "src": {
                      "name": "6,5240,24",
                      "text": "6,5240,27,30",
                      "type": "6,5240,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,5242,0",
                  "text": "6,5238,8,186"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setupFramingTpl",
                "text": "Inject a reference to the function which applies the render template into the framing template. The framing template\nwraps the content.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "frameTpl",
                    "src": {
                      "name": "20,1411,0"
                    }
                  }
                ],
                "src": {
                  "access": "20,1407,12",
                  "name": "20,1411,0",
                  "text": "20,1408,12,136"
                }
              },
              {
                "$type": "method",
                "name": "setVisible",
                "since": "1.1.0",
                "text": "Convenience function to hide or show this component by Boolean.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "visible",
                    "text": "`true` to show, `false` to hide.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,5295,25",
                      "text": "6,5295,33,33",
                      "type": "6,5295,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5296,32,5",
                      "type": "6,5296,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5299,0",
                  "since": "6,5297,15",
                  "text": "6,5294,8,64"
                }
              },
              {
                "$type": "method",
                "name": "setWidth",
                "text": "Sets the width of the component. This method fires the <a href='#!/api/Ext.grid.column.Action-event-resize'>resize</a> event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "width",
                    "text": "The new width to set. This may be one of:\n\n  - A Number specifying the new width in pixels.\n  - A String used to set the CSS width style.\n  - <a href='#!/api/undefined'>undefined</a> to leave the width unchanged.\n  - <a href='#!/api/null'>null</a> to clear the width.\n",
                    "type": "Number",
                    "src": {
                      "name": "6,5316,24",
                      "text": "6,5316,30,42:6,5317,8,174",
                      "type": "6,5316,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5323,32,5",
                      "type": "6,5323,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5325,0",
                  "text": "6,5314,8,79"
                }
              },
              {
                "$type": "method",
                "name": "setX",
                "text": "Sets the X position of the DOM element based on page coordinates.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The X position\n",
                    "type": "Number",
                    "src": {
                      "name": "19,139,24",
                      "text": "19,139,26,15",
                      "type": "19,139,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,140,40,5",
                      "type": "19,140,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,142,0",
                  "text": "19,138,8,66"
                }
              },
              {
                "$type": "method",
                "name": "setXY",
                "text": "Sets the position of the DOM element in page coordinates.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "pos",
                    "text": "Contains X & Y [x, y] values for new position (coordinates\nare page-based)\n",
                    "type": "Number[]",
                    "src": {
                      "name": "19,148,26",
                      "text": "19,148,30,59:19,149,8,16",
                      "type": "19,148,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,150,40,5",
                      "type": "19,150,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,152,0",
                  "text": "19,147,8,58"
                }
              },
              {
                "$type": "method",
                "name": "setY",
                "text": "Sets the Y position of the DOM element based on page coordinates.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "y",
                    "text": "The Y position\n",
                    "type": "Number",
                    "src": {
                      "name": "19,158,24",
                      "text": "19,158,26,15",
                      "type": "19,158,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.util.Positionable",
                    "src": {
                      "text": "19,159,40,5",
                      "type": "19,159,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,161,0",
                  "text": "19,157,8,66"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setZIndex",
                "text": "z-index is managed by the zIndexManager and may be overwritten at any time.\nReturns the next z-index to be used.\n\nIf this is a Container, then it will have rebased any managed floating Components,\nand so the next available z-index will be approximately 10000 above that.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "src": {
                      "name": "3,424,0"
                    }
                  }
                ],
                "src": {
                  "access": "3,417,8",
                  "name": "3,424,0",
                  "text": "3,418,8,271"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "shouldUpdateCell",
                "text": "Decides whether the column needs updating\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "0 = Doesn't need update.\n1 = Column needs update, and renderer has > 1 argument; We need to render a whole new HTML item.\n2 = Column needs update, but renderer has 1 argument or column uses an updater.\n",
                    "type": "Number",
                    "src": {
                      "text": "5,1648,25,25:5,1649,8,177",
                      "type": "5,1648,17"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "record",
                    "src": {
                      "name": "5,1652,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "changedFieldNames",
                    "src": {
                      "name": "5,1652,0"
                    }
                  }
                ],
                "src": {
                  "access": "5,1646,8",
                  "name": "5,1652,0",
                  "text": "5,1647,8,42"
                }
              },
              {
                "$type": "method",
                "name": "show",
                "text": "Shows this Component, rendering it first if <a href='#!/api/Ext.grid.column.Action-cfg-autoRender'>autoRender</a> or <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> are `true`.\n\nAfter being shown, a <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> Component (such as a <a href='#!/api/Ext.window.Window'>Ext.window.Window</a>), is activated it and\nbrought to the front of its <a href='#!/api/Ext.grid.column.Action-property-zIndexManager'>zIndexManager</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "animateTarget",
                    "optional": true,
                    "text": "**only valid for <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> Components such as <a href='#!/api/Ext.window.Window'>Ext.window.Window</a>s or <a href='#!/api/Ext.tip.ToolTip'>Ext.tip.ToolTip</a>s, or regular Components which have been configured\nwith `floating: true`.** The target from which the Component should animate from while opening.\n",
                    "type": "String/Ext.dom.Element",
                    "value": "null",
                    "src": {
                      "name": "6,5335,41",
                      "text": "6,5335,61,65:6,5336,8,209",
                      "type": "6,5335,16",
                      "value": "6,5335,55"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "text": "A callback function to call after the Component is displayed.\nOnly necessary if animation was specified.\n",
                    "type": "Function",
                    "src": {
                      "name": "6,5338,27",
                      "text": "6,5338,37,62:6,5339,8,43",
                      "type": "6,5338,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope (`this` reference) in which the callback is executed.\nDefaults to this Component.\n",
                    "type": "Object",
                    "src": {
                      "name": "6,5340,25",
                      "text": "6,5340,32,64:6,5341,8,28",
                      "type": "6,5340,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5342,32,5",
                      "type": "6,5342,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5344,0",
                  "text": "6,5330,8,281"
                }
              },
              {
                "$type": "method",
                "name": "showAt",
                "text": "Displays component at specific xy position.\nA floating component (like a menu) is positioned relative to its ownerCt if any.\nUseful for popping up a context menu:\n\n    listeners: {\n        itemcontextmenu: function(view, record, item, index, event, options) {\n            Ext.create('Ext.menu.Menu', {\n                width: 100,\n                height: 100,\n                margin: '0 0 10 0',\n                items: [{\n                    text: 'regular item 1'\n                },{\n                    text: 'regular item 2'\n                },{\n                    text: 'regular item 3'\n                }]\n            }).showAt(event.getXY());\n        }\n    }\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The new x position or array of `[x,y]`.\n",
                    "type": "Number/Number[]",
                    "src": {
                      "name": "6,5431,33",
                      "text": "6,5431,35,40",
                      "type": "6,5431,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "optional": true,
                    "text": "The new y position\n",
                    "type": "Number",
                    "src": {
                      "name": "6,5432,25",
                      "text": "6,5432,28,19",
                      "type": "6,5432,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "animate",
                    "optional": true,
                    "text": "True to animate the Component into its new position. You may also pass an\nanimation configuration.\n",
                    "type": "Boolean/Object",
                    "src": {
                      "name": "6,5433,33",
                      "text": "6,5433,42,74:6,5434,8,25",
                      "type": "6,5433,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5435,32,5",
                      "type": "6,5435,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5437,0",
                  "text": "6,5410,8,664"
                }
              },
              {
                "$type": "method",
                "name": "showBy",
                "text": "Shows this component by the specified <a href='#!/api/Ext.Component'>Ext.Component</a> or <a href='#!/api/Ext.dom.Element'>Ext.dom.Element</a>.\nUsed when this component is <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "component",
                    "text": "The <a href='#!/api/Ext.Component'>Ext.Component</a> or <a href='#!/api/Ext.dom.Element'>Ext.dom.Element</a> to show the component by.\n",
                    "type": "Ext.Component/Ext.dom.Element",
                    "src": {
                      "name": "6,5458,47",
                      "text": "6,5458,57,79",
                      "type": "6,5458,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "position",
                    "optional": true,
                    "text": "Alignment position as used by <a href='#!/api/Ext.util.Positionable-method-getAlignToXY'>Ext.util.Positionable#getAlignToXY</a>.\nDefaults to <a href='#!/api/Ext.grid.column.Action-cfg-defaultAlign'>defaultAlign</a>. See <a href='#!/api/Ext.grid.column.Action-method-alignTo'>alignTo</a> for possible values.\n",
                    "type": "String",
                    "src": {
                      "name": "6,5459,25",
                      "text": "6,5459,35,74:6,5460,8,79",
                      "type": "6,5459,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "offsets",
                    "optional": true,
                    "text": "Alignment offsets as used by <a href='#!/api/Ext.util.Positionable-method-getAlignToXY'>Ext.util.Positionable#getAlignToXY</a>. See <a href='#!/api/Ext.grid.column.Action-method-alignTo'>alignTo</a> for possible values.\n",
                    "type": "Number[]",
                    "src": {
                      "name": "6,5461,27",
                      "text": "6,5461,36,115",
                      "type": "6,5461,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5462,32,5",
                      "type": "6,5462,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5464,0",
                  "text": "6,5456,8,157"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "showMenuBy",
                "text": "Shows the column menu under the target element passed. This method is used when the trigger element on the column\nheader is clicked on and rarely should be used otherwise.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "optional": true,
                    "text": "The event which triggered the current handler. If omitted\nor a key event, the menu autofocuses its first item.\n",
                    "type": "Ext.event.Event",
                    "src": {
                      "name": "10,1042,34",
                      "text": "10,1042,41,58:10,1043,8,53",
                      "type": "10,1042,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "t",
                    "text": "The target to show the menu by\n",
                    "type": "HTMLElement/Ext.dom.Element",
                    "src": {
                      "name": "10,1044,45",
                      "text": "10,1044,47,31",
                      "type": "10,1044,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "header",
                    "text": "The header container that the trigger was clicked on.\n",
                    "type": "Ext.grid.header.Container",
                    "src": {
                      "name": "10,1045,43",
                      "text": "10,1045,50,54",
                      "type": "10,1045,16"
                    }
                  }
                ],
                "src": {
                  "access": "10,1037,8",
                  "name": "10,1047,0",
                  "text": "10,1039,8,173"
                }
              },
              {
                "$type": "method",
                "name": "stopAnimation",
                "text": "Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat haven't started yet.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The Element\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "text": "21,330,34,12",
                      "type": "21,330,17"
                    }
                  }
                ],
                "src": {
                  "name": "21,332,0",
                  "text": "21,328,8,138"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Replaced by <a href='#!/api/Ext.grid.column.Action-stopAnimation'>stopAnimation</a>\n",
                "deprecatedVersion": "4.0",
                "name": "stopFx",
                "text": "Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat haven't started yet.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The Element\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "text": "21,322,34,12",
                      "type": "21,322,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedMessage": "21,321,8",
                  "deprecatedVersion": "21,321,8",
                  "name": "21,325,0",
                  "text": "21,319,8,138"
                }
              },
              {
                "$type": "method",
                "name": "suspendEvent",
                "text": "Suspends firing of the named event(s).\n\nAfter calling this method to suspend events, the events will no longer fire when requested to fire.\n\n**Note that if this is called multiple times for a certain event, the converse method\n<a href='#!/api/Ext.grid.column.Action-method-resumeEvent'>resumeEvent</a> will have to be called the same number of times for it to resume firing.**\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "Multiple event names to suspend.\n",
                    "type": "String...",
                    "src": {
                      "name": "13,1381,32",
                      "text": "13,1381,42,33",
                      "type": "13,1381,21"
                    }
                  }
                ],
                "src": {
                  "name": "13,1383,0",
                  "text": "13,1374,12,324"
                }
              },
              {
                "$type": "method",
                "name": "suspendEvents",
                "text": "Suspends the firing of all events. (see <a href='#!/api/Ext.grid.column.Action-method-resumeEvents'>resumeEvents</a>)\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "queueSuspended",
                    "text": "`true` to queue up suspended events to be fired\nafter the <a href='#!/api/Ext.grid.column.Action-method-resumeEvents'>resumeEvents</a> call instead of discarding all suspended events.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "13,1363,28",
                      "text": "13,1363,43,48:13,1364,11,81",
                      "type": "13,1363,19"
                    }
                  }
                ],
                "src": {
                  "name": "13,1366,0",
                  "text": "13,1361,11,64"
                }
              },
              {
                "$type": "method",
                "name": "syncFx",
                "text": "Ensures that all effects queued after syncFx is called on this object are run concurrently. This is the opposite\nof <a href='#!/api/Ext.grid.column.Action-method-sequenceFx'>sequenceFx</a>.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Object",
                    "src": {
                      "text": "21,340,25,5",
                      "type": "21,340,17"
                    }
                  }
                ],
                "src": {
                  "name": "21,342,0",
                  "text": "21,338,8,137"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "syncHidden",
                "text": "synchronizes the hidden state of this component with the state of its hierarchy\n",
                "src": {
                  "access": "3,393,8",
                  "name": "3,395,0",
                  "text": "3,392,8,80"
                }
              },
              {
                "$type": "method",
                "name": "toBack",
                "text": "Sends this Component to the back of (lower z-index than) any other visible windows\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "3,555,32,5",
                      "type": "3,555,17"
                    }
                  }
                ],
                "src": {
                  "name": "3,557,0",
                  "text": "3,554,8,83"
                }
              },
              {
                "$type": "method",
                "name": "toFront",
                "text": "Brings this floating Component to the front of any other visible, floating Components managed by the same\n<a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a>\n\nIf this Component is modal, inserts the modal mask just below this Component in the z-index stack.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "preventFocus",
                    "optional": true,
                    "text": "Specify `true` to prevent the Component from being focused.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "3,494,26",
                      "text": "3,494,46,60",
                      "type": "3,494,16",
                      "value": "3,494,39"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "3,495,32,5",
                      "type": "3,495,17"
                    }
                  }
                ],
                "src": {
                  "name": "3,497,0",
                  "text": "3,489,8,247"
                }
              },
              {
                "$type": "method",
                "name": "toLocaleString",
                "text": "Returns a string representing the object. This method is meant to be overridden by derived objects\nfor locale-specific purposes.\n\n<a href='#!/api/Object'>Object</a>s <a href='#!/api/Ext.grid.column.Action-method-toLocaleString'>toLocaleString</a> returns the result of calling <a href='#!/api/Ext.grid.column.Action-method-toString'>toString</a>.\n\nThis function is provided to give objects a generic <a href='#!/api/Ext.grid.column.Action-method-toLocaleString'>toLocaleString</a> method, even though not all\nmay use it. Currently, only <a href='#!/api/Array'>Array</a>, <a href='#!/api/Number'>Number</a>, and <a href='#!/api/Date'>Date</a> override <a href='#!/api/Ext.grid.column.Action-method-toLocaleString'>toLocaleString</a>.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Object represented as a string.\n",
                    "type": "String",
                    "src": {
                      "text": "24,235,21,32",
                      "type": "24,235,13"
                    }
                  }
                ],
                "src": {
                  "name": "24,226,12",
                  "text": "24,227,4,384"
                }
              },
              {
                "$type": "method",
                "name": "toString",
                "text": "Returns a string representation of the object.\n\nEvery object has a `toString()` method that is automatically called when the object is to be\nrepresented as a text value or when an object is referred to in a manner in which a string is\nexpected. By default, the `toString()` method is inherited by every object descended from <a href='#!/api/Object'>Object</a>.\nIf this method is not overridden in a custom object, `toString()` returns \"[object type]\", where\n`type` is the object type. The following code illustrates this:\n\n    var o = new Object();\n    o.toString();           // returns [object Object]\n\nYou can create a function to be called in place of the default `toString()` method. The\n`toString()` method takes no arguments and should return a string. The `toString()` method you\ncreate can be any value you want, but it will be most useful if it carries information about the\nobject.\n\nThe following code defines the `Dog` object type and creates `theDog`, an object of type `Dog`:\n\n    function Dog(name,breed,color,sex) {\n        this.name=name;\n        this.breed=breed;\n        this.color=color;\n        this.sex=sex;\n    }\n\n    theDog = new Dog(\"Gabby\",\"Lab\",\"chocolate\",\"female\");\n\nIf you call the `toString()` method on this custom object, it returns the default value inherited\nfrom <a href='#!/api/Object'>Object</a>:\n\n    theDog.toString(); //returns [object Object]\n\nThe following code creates and assigns `dogToString()` to override the default `toString()` method.\nThis function generates a string containing the name, breed, color, and sex of the object, in the\nform `\"property = value;\"`.\n\n    Dog.prototype.toString = function dogToString() {\n        var ret = \"Dog \" + this.name + \" is a \" + this.sex + \" \" + this.color + \" \" + this.breed;\n        return ret;\n    }\n\nWith the preceding code in place, any time theDog is used in a string context, JavaScript\nautomatically calls the `dogToString()` function, which returns the following string:\n\n    Dog Gabby is a female chocolate Lab\n\n`toString()` can be used with every object and allows you to get its class. To use the\n`Object.prototype.toString()` with every object, you need to call `Function.prototype.call()` or\n`Function.prototype.apply()` on it, passing the object you want to inspect as the first parameter\ncalled `thisArg`.\n\n    var toString = Object.prototype.toString;\n\n    toString.call(new Date); // [object Date]\n    toString.call(new String); // [object String]\n    toString.call(Math); // [object Math]\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Object represented as a string.\n",
                    "type": "String",
                    "src": {
                      "text": "24,297,21,32",
                      "type": "24,297,13"
                    }
                  }
                ],
                "src": {
                  "name": "24,239,12",
                  "text": "24,240,4,2445"
                }
              },
              {
                "$type": "method",
                "name": "translatePoints",
                "text": "Translates the passed page coordinates into left/top css values for the element\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The page x or an array containing [x, y]\n",
                    "type": "Number/Array",
                    "src": {
                      "name": "19,889,30",
                      "text": "19,889,32,41",
                      "type": "19,889,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "optional": true,
                    "text": "The page y, required if x is not an array\n",
                    "type": "Number",
                    "src": {
                      "name": "19,890,25",
                      "text": "19,890,28,42",
                      "type": "19,890,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "An object with left and top properties. e.g.\n{left: (value), top: (value)}\n",
                    "type": "Object",
                    "src": {
                      "text": "19,891,25,45:19,892,8,30",
                      "type": "19,891,17"
                    }
                  }
                ],
                "src": {
                  "name": "19,894,0",
                  "text": "19,888,8,80"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "translateXY",
                "text": "Translates the passed page coordinates into x and y css values for the element\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "x",
                    "text": "The page x or an array containing [x, y]\n",
                    "type": "Number/Array",
                    "src": {
                      "name": "19,905,30",
                      "text": "19,905,32,41",
                      "type": "19,905,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "y",
                    "optional": true,
                    "text": "The page y, required if x is not an array\n",
                    "type": "Number",
                    "src": {
                      "name": "19,906,25",
                      "text": "19,906,28,42",
                      "type": "19,906,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "An object with x and y properties. e.g.\n{x: (value), y: (value)}\n",
                    "type": "Object",
                    "src": {
                      "text": "19,907,25,40:19,908,8,25",
                      "type": "19,907,17"
                    }
                  }
                ],
                "src": {
                  "access": "19,909,8",
                  "name": "19,911,0",
                  "text": "19,904,8,79"
                }
              },
              {
                "$type": "method",
                "inheritdoc": "Ext.util.Observable#removeListener",
                "name": "un",
                "text": "Shorthand for <a href='#!/api/Ext.grid.column.Action-method-removeListener'>removeListener</a>.\n",
                "src": {
                  "inheritdoc": "13,1783,12",
                  "name": "13,1785,0",
                  "text": "13,1782,12,39"
                }
              },
              {
                "$type": "method",
                "name": "unAfter",
                "text": "Removes a before-event handler.\n\nSame as <a href='#!/api/Ext.grid.column.Action-method-removeListener'>removeListener</a> with `order` set to `'after'`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event the handler was associated with.\n",
                    "type": "String/String[]/Object",
                    "src": {
                      "name": "13,1218,44",
                      "text": "13,1218,54,55",
                      "type": "13,1218,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The handler to remove.\n",
                    "type": "Function/String",
                    "src": {
                      "name": "13,1219,37",
                      "text": "13,1219,40,23",
                      "type": "13,1219,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope originally specified for `fn`.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1220,29",
                      "text": "13,1220,36,41",
                      "type": "13,1220,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "Extra options object.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1221,29",
                      "text": "13,1221,38,22",
                      "type": "13,1221,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1223,0",
                  "text": "13,1214,12,97"
                }
              },
              {
                "$type": "method",
                "name": "unBefore",
                "text": "Removes a before-event handler.\n\nSame as <a href='#!/api/Ext.grid.column.Action-method-removeListener'>removeListener</a> with `order` set to `'before'`.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event the handler was associated with.\n",
                    "type": "String/String[]/Object",
                    "src": {
                      "name": "13,1204,44",
                      "text": "13,1204,54,55",
                      "type": "13,1204,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The handler to remove.\n",
                    "type": "Function/String",
                    "src": {
                      "name": "13,1205,37",
                      "text": "13,1205,40,23",
                      "type": "13,1205,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope originally specified for `fn`.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1206,29",
                      "text": "13,1206,36,41",
                      "type": "13,1206,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "Extra options object.\n",
                    "type": "Object",
                    "src": {
                      "name": "13,1207,29",
                      "text": "13,1207,38,22",
                      "type": "13,1207,20"
                    }
                  }
                ],
                "src": {
                  "name": "13,1209,0",
                  "text": "13,1200,12,98"
                }
              },
              {
                "$type": "method",
                "name": "unmask",
                "text": "Removes the mask applied by <a href='#!/api/Ext.grid.column.Action-method-mask'>mask</a>\n",
                "src": {
                  "name": "6,5512,0",
                  "text": "6,5510,8,42"
                }
              },
              {
                "$type": "method",
                "name": "up",
                "text": "Navigates up the ownership hierarchy searching for an ancestor Container which matches any passed selector or component.\n\n*Important.* There is not a universal upwards navigation pointer. There are several upwards relationships\nsuch as the <a href='#!/api/Ext.button.Button'>Ext.button.Button</a> which activates a <a href='#!/api/Ext.button.Button-cfg-menu'>Ext.button.Button#cfg-menu</a>, or the\n<a href='#!/api/Ext.menu.Item'>Ext.menu.Item</a> which activated a <a href='#!/api/Ext.menu.Item-cfg-menu'>Ext.menu.Item#cfg-menu</a>, or the\n<a href='#!/api/Ext.grid.column.Column'>Ext.grid.column.Column</a> which activated the column menu.\n\nThese differences are abstracted away by this method.\n\nExample:\n\n    var owningTabPanel = grid.up('tabpanel');\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "The selector component or actual component to test. If not passed the immediate owner/activator is returned.\n",
                    "type": "String/Ext.Component",
                    "src": {
                      "name": "6,5539,39",
                      "text": "6,5539,49,109",
                      "type": "6,5539,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "limit",
                    "optional": true,
                    "text": "This may be a selector upon which to stop the upward scan, or a limit of the number of steps, or Component reference to stop on.\n",
                    "type": "String/Number/Ext.Component",
                    "src": {
                      "name": "6,5540,46",
                      "text": "6,5540,53,129",
                      "type": "6,5540,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The matching ancestor Container (or <a href='#!/api/undefined'>undefined</a> if no match was found).\n",
                    "type": "Ext.container.Container",
                    "src": {
                      "text": "6,5541,42,72",
                      "type": "6,5541,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5543,0",
                  "text": "6,5526,8,627"
                }
              },
              {
                "$type": "method",
                "name": "update",
                "since": "3.4.0",
                "text": "Update the content area of a component.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "htmlOrData",
                    "text": "If this component has been configured with a\ntemplate via the tpl config then it will use this argument as data to populate the\ntemplate. If this component was not configured with a template, the components\ncontent area will be updated via Ext.Element update.\n",
                    "type": "String/Object",
                    "src": {
                      "name": "6,5580,31",
                      "text": "6,5580,42,45:6,5581,8,215",
                      "type": "6,5580,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "loadScripts",
                    "optional": true,
                    "text": "Only legitimate when using the <a href='#!/api/Ext.grid.column.Action-cfg-html'>html</a>\nconfiguration. Causes embedded script tags to be executed. Inline source will be executed\nwith this Component as the scope (`this` reference).\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "6,5584,26",
                      "text": "6,5584,45,38:6,5585,8,143",
                      "type": "6,5584,16",
                      "value": "6,5584,38"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "callback",
                    "optional": true,
                    "text": "Only legitimate when using the <a href='#!/api/Ext.grid.column.Action-cfg-html'>html</a> configuration.\nCallback to execute when scripts have finished loading.\n",
                    "type": "Function",
                    "src": {
                      "name": "6,5587,27",
                      "text": "6,5587,37,53:6,5588,8,56",
                      "type": "6,5587,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scriptScope",
                    "optional": true,
                    "text": "The scope (`this` reference) in which to\nexecute *inline* script elements content. Scripts with a `src` attribute cannot\nbe executed with this scope.\n",
                    "type": "Object",
                    "value": "`this`",
                    "src": {
                      "name": "6,5589,25",
                      "text": "6,5589,45,41:6,5590,8,110",
                      "type": "6,5589,16",
                      "value": "6,5589,37"
                    }
                  }
                ],
                "src": {
                  "name": "6,5595,0",
                  "since": "6,5593,15",
                  "text": "6,5579,8,40"
                }
              },
              {
                "$type": "method",
                "name": "updateBox",
                "text": "Sets the current box measurements of the component's underlying element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "box",
                    "text": "An object in the format {x, y, width, height}\n",
                    "type": "Object",
                    "src": {
                      "name": "6,5651,24",
                      "text": "6,5651,28,46",
                      "type": "6,5651,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "6,5652,32,5",
                      "type": "6,5652,17"
                    }
                  }
                ],
                "src": {
                  "name": "6,5654,0",
                  "text": "6,5650,8,73"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "updateFrame",
                "text": "Updates the frame elements to match new framing. The current `frameBody` is\npreserved by transplanting it into the new frame. All other frame <a href='#!/api/Ext.grid.column.Action-cfg-childEls'>childEls</a>\nare destroyed and recreated if needed by the new frame. This method cannot\ntransition from framed to non-framed or vise-versa or between table and div\nbased framing.\n",
                "src": {
                  "access": "20,1427,12",
                  "name": "20,1429,0",
                  "text": "20,1422,12,319"
                }
              },
              {
                "$type": "method",
                "name": "updateLayout",
                "text": "Updates this component's layout. If this update affects this components <a href='#!/api/Ext.grid.column.Action-property-ownerCt'>ownerCt</a>,\nthat component's <a href='#!/api/Ext.grid.column.Action-method-updateLayout'>updateLayout</a> method will be called to perform the layout instead.\nOtherwise, just this component (and its child items) will layout.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "An object with layout options.\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "defer",
                        "text": "`true` if this layout should be deferred.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "6,5669,33",
                          "text": "6,5669,39,42",
                          "type": "6,5669,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "isRoot",
                        "text": "`true` if this layout should be the root of the layout.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "6,5670,33",
                          "text": "6,5670,40,56",
                          "type": "6,5670,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "6,5668,25",
                      "text": "6,5668,34,31",
                      "type": "6,5668,16"
                    }
                  }
                ],
                "src": {
                  "name": "6,5672,0",
                  "text": "6,5664,8,242"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "updateSession",
                "text": "Updates the session config.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "session",
                    "type": "Ext.data.Session",
                    "src": {
                      "name": "9,814,38",
                      "type": "9,814,20"
                    }
                  }
                ],
                "src": {
                  "access": "9,815,12",
                  "name": "9,817,0",
                  "text": "9,813,12,28"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "updateViewModel",
                "text": "Updates the viewModel config.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "viewModel",
                    "type": "Ext.app.ViewModel",
                    "src": {
                      "name": "9,829,39",
                      "type": "9,829,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "oldViewModel",
                    "type": "Ext.app.ViewModel",
                    "src": {
                      "name": "9,830,39",
                      "type": "9,830,20"
                    }
                  }
                ],
                "src": {
                  "access": "9,831,12",
                  "name": "9,833,0",
                  "text": "9,828,12,30"
                }
              },
              {
                "$type": "method",
                "name": "valueOf",
                "text": "Returns the primitive value of the specified object.\n\nJavaScript calls the <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> method to convert an object to a primitive value. You rarely need to\ninvoke the <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> method yourself; JavaScript automatically invokes it when encountering an\nobject where a primitive value is expected.\n\nBy default, the <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> method is inherited by every object descended from <a href='#!/api/Object'>Object</a>. Every built-\nin core object overrides this method to return an appropriate value. If an object has no primitive\nvalue, <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> returns the object itself, which is displayed as:\n\n    [object Object]\n\nYou can use <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> within your own code to convert a built-in object into a primitive value.\nWhen you create a custom object, you can override `Object.valueOf` to call a custom method instead\nof the default <a href='#!/api/Object'>Object</a> method.\n\nYou can create a function to be called in place of the default <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> method. Your function must\ntake no arguments.\n\nSuppose you have an object type `myNumberType` and you want to create a <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> method for it.\nThe following code assigns a user-defined function to the object's valueOf method:\n\n    myNumberType.prototype.valueOf = new Function(functionText)\n\nWith the preceding code in place, any time an object of type `myNumberType` is used in a context\nwhere it is to be represented as a primitive value, JavaScript automatically calls the function\ndefined in the preceding code.\n\nAn object's <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a> method is usually invoked by JavaScript, but you can invoke it yourself as\nfollows:\n\n    myNumber.valueOf()\n\nNote: Objects in string contexts convert via the <a href='#!/api/Ext.grid.column.Action-method-toString'>toString</a> method, which is different from\n<a href='#!/api/String'>String</a> objects converting to string primitives using <a href='#!/api/Ext.grid.column.Action-method-valueOf'>valueOf</a>. All objects have a string\nconversion, if only `\"[object type]\"`. But many objects do not convert to number, boolean, or\nfunction.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Returns value of the object or the object itself.\n",
                    "type": "Object",
                    "src": {
                      "text": "24,340,21,50",
                      "type": "24,340,13"
                    }
                  }
                ],
                "src": {
                  "name": "24,301,12",
                  "text": "24,302,4,1821"
                }
              },
              {
                "$type": "method",
                "name": "visitPostOrder",
                "text": "Traverses the tree rooted at this node in post-order mode, calling the passed function on the nodes at each level.\nThat is the function is called upon each node **after** being called on its children).\n\nThis method is used at each level down the cascade. Currently <a href='#!/api/Ext.Component'>Ext.Component</a>s\nand <a href='#!/api/Ext.data.TreeModel'>Ext.data.TreeModel</a>s are queryable.\n\nIf you have tree-structured data, you can make your nodes queryable, and use ComponentQuery on them.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "text": "A ComponentQuery selector used to filter candidate nodes before calling the function.\nAn empty string matches any node.\n",
                    "type": "Object",
                    "src": {
                      "name": "22,131,24",
                      "text": "22,131,33,86:22,132,8,34",
                      "type": "22,131,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The function to call. Return `false` to aborl the traverse.\n",
                    "type": "Function",
                    "items": [
                      {
                        "$type": "property",
                        "name": "node",
                        "text": "The node being visited.\n",
                        "type": "Object",
                        "src": {
                          "name": "22,134,27",
                          "text": "22,134,32,24",
                          "type": "22,134,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "22,133,26",
                      "text": "22,133,29,60",
                      "type": "22,133,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The context (`this` reference) in which the function is executed.\n",
                    "type": "Object",
                    "src": {
                      "name": "22,135,25",
                      "text": "22,135,32,66",
                      "type": "22,135,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "extraArgs",
                    "optional": true,
                    "text": "A set of arguments to be appended to the function's argument list to pass down extra data known to the caller\n**after** the node being visited.\n",
                    "type": "Array",
                    "src": {
                      "name": "22,136,24",
                      "text": "22,136,35,110:22,137,8,34",
                      "type": "22,136,16"
                    }
                  }
                ],
                "src": {
                  "name": "22,139,0",
                  "text": "22,123,8,458"
                }
              },
              {
                "$type": "method",
                "name": "visitPreOrder",
                "text": "Traverses the tree rooted at this node in pre-order mode, calling the passed function on the nodes at each level.\nThat is the function is called upon each node **before** being called on its children).\n\nThis method is used at each level down the cascade. Currently <a href='#!/api/Ext.Component'>Ext.Component</a>s\nand <a href='#!/api/Ext.data.TreeModel'>Ext.data.TreeModel</a>s are queryable.\n\nIf you have tree-structured data, you can make your nodes queryable, and use ComponentQuery on them.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "selector",
                    "text": "A ComponentQuery selector used to filter candidate nodes before calling the function.\nAn empty string matches any node.\n",
                    "type": "Object",
                    "src": {
                      "name": "22,110,24",
                      "text": "22,110,33,86:22,111,8,34",
                      "type": "22,110,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The function to call. Return `false` to aborl the traverse.\n",
                    "type": "Function",
                    "items": [
                      {
                        "$type": "property",
                        "name": "node",
                        "text": "The node being visited.\n",
                        "type": "Object",
                        "src": {
                          "name": "22,113,27",
                          "text": "22,113,32,24",
                          "type": "22,113,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "22,112,26",
                      "text": "22,112,29,60",
                      "type": "22,112,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The context (`this` reference) in which the function is executed.\n",
                    "type": "Object",
                    "src": {
                      "name": "22,114,25",
                      "text": "22,114,32,66",
                      "type": "22,114,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "extraArgs",
                    "optional": true,
                    "text": "A set of arguments to be appended to the function's argument list to pass down extra data known to the caller\n**after** the node being visited.\n",
                    "type": "Array",
                    "src": {
                      "name": "22,115,24",
                      "text": "22,115,35,110:22,116,8,34",
                      "type": "22,115,16"
                    }
                  }
                ],
                "src": {
                  "name": "22,118,0",
                  "text": "22,102,8,458"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "access": "private",
                "name": "$eventOptions",
                "text": "Matches options property names within a listeners specification object  - property names which are never used as event names.\n",
                "src": {
                  "access": "13,389,12",
                  "name": "13,392,0",
                  "text": "13,390,12,126"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "_applyDefaultsOptions",
                "src": {
                  "access": "4,667,8",
                  "name": "4,669,0"
                }
              },
              {
                "$type": "property",
                "access": "protected",
                "name": "_isLayoutRoot",
                "optional": true,
                "text": "Setting this property to `true` causes the <a href='#!/api/Ext.grid.column.Action-method-isLayoutRoot'>isLayoutRoot</a> method to return\n`true` and stop the search for the top-most component for a layout.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "access": "6,1531,8",
                  "name": "6,1528,29",
                  "text": "6,1529,8,150",
                  "type": "6,1528,19",
                  "value": "6,1528,43"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "_renderState",
                "readonly": true,
                "since": "5.0.0",
                "text": "This property holds one of the following values during the render process:\n\n  * **0** - The component is not rendered.\n  * **1** - The component has fired beforerender and is about to call beforeRender.\n   The component has just started rendering.\n  * **2** - The component has finished the <a href='#!/api/Ext.grid.column.Action-method-beforeRender'>beforeRender</a> process and is about to\n   call <a href='#!/api/Ext.grid.column.Action-method-onRender'>onRender</a>. This is when `rendering` is set to `true`.\n  * **3** - The component has started <a href='#!/api/Ext.grid.column.Action-method-onRender'>onRender</a>. This is when <a href='#!/api/Ext.grid.column.Action-property-rendered'>rendered</a> is set\n   to `true`.\n  * **4** - The component has finished its afterrender process.\n",
                "type": "Number",
                "src": {
                  "access": "20,136,8",
                  "name": "20,124,27",
                  "readonly": "20,137,8",
                  "since": "20,138,15",
                  "text": "20,125,8,553",
                  "type": "20,124,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "allowDomMove",
                "src": {
                  "access": "6,1445,8",
                  "name": "6,1447,0"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "ariaEl",
                "optional": true,
                "readonly": true,
                "since": "5.5.0",
                "text": "The name of the Component property that holds\na reference to the Element that serves as that Component's ARIA element.\nThis property will be replaced with the actual Element reference after rendering.\n\nMost of the simple Components will have their main element as ariaEl.\n",
                "type": "String",
                "value": "'el'",
                "src": {
                  "access": "20,149,8",
                  "name": "20,143,28",
                  "readonly": "20,150,8",
                  "since": "20,151,15",
                  "text": "20,143,41,46:20,144,8,227",
                  "type": "20,143,19",
                  "value": "20,143,35"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "ariaRenderAttributes",
                "optional": true,
                "text": "**Instance specific** ARIA attributes\nto render into Component's ariaEl. This object is only used during rendering,\nand is discarded afterwards.\n",
                "type": "Object",
                "src": {
                  "access": "8,64,8",
                  "name": "8,60,28",
                  "text": "8,60,50,38:8,61,8,108",
                  "type": "8,60,19"
                }
              },
              {
                "$type": "property",
                "name": "ariaRole",
                "optional": true,
                "readonly": true,
                "text": "ARIA role for this Component, defaults to no role.\nWith no role, no other ARIA attributes are set.\n",
                "type": "String",
                "src": {
                  "name": "8,53,28",
                  "readonly": "8,56,8",
                  "text": "8,53,38,51:8,54,8,49",
                  "type": "8,53,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "autoGenId",
                "text": "`true` indicates an <a href='#!/api/Ext.grid.column.Action-cfg-id'>id</a> was auto-generated rather than provided by configuration.\n",
                "type": "Boolean",
                "src": {
                  "access": "6,1452,8",
                  "name": "6,1450,28",
                  "text": "6,1451,8,83",
                  "type": "6,1450,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "borderBoxCls",
                "src": {
                  "access": "6,1457,8",
                  "name": "6,1459,0"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "componentLayoutCounter",
                "text": "The number of component layout calls made on this object.\n",
                "type": "Number",
                "src": {
                  "access": "6,1463,8",
                  "name": "6,1462,27",
                  "text": "6,1464,8,58",
                  "type": "6,1462,19"
                }
              },
              {
                "$type": "property",
                "name": "constructor",
                "text": " Specifies the function that creates an object's prototype.\n\n Returns a reference to the Object function that created the instance's prototype. Note that the\n value of this property is a reference to the function itself, not a string containing the\n function's name, but it isn't read only (except for primitive Boolean, Number or String values: 1,\n true, \"read-only\").\n\n All objects inherit a `constructor` property from their <a href='#!/api/Ext.grid.column.Action-property-prototype'>prototype</a>:\n\n     o = new Object // or o = {} in JavaScript 1.2\n     o.constructor == Object\n     a = new Array // or a = [] in JavaScript 1.2\n     a.constructor == Array\n     n = new Number(3)\n     n.constructor == Number\n\n Even though you cannot construct most HTML objects, you can do comparisons. For example,\n\n     document.constructor == Document\n     document.form3.constructor == Form\n\n The following example creates a prototype, `Tree`, and an object of that type, theTree. The example then displays the `constructor` property for the object `theTree`.\n\n     function Tree(name) {\n         this.name = name;\n     }\n     theTree = new Tree(\"Redwood\");\n     console.log(\"theTree.constructor is \" + theTree.constructor);\n\n This example displays the following output:\n\n     theTree.constructor is function Tree(name) {\n         this.name = name;\n     }\n\n The following example shows how to modify constructor value of generic objects. Only true, 1 and\n \"test\" variable constructors will not be changed. This example explains that is not always so safe\n to believe in constructor function.\n\n     function Type(){};\n     var\ttypes = [\n \t    new Array,\t[],\n\t    new Boolean,\ttrue,\n\t    new Date,\n\t    new Error,\n\t    new Function,\tfunction(){},\n\t    Math,\n\t    new Number,\t1,\n\t    new Object,\t{},\n\t    new RegExp,\t/(?:)/,\n\t    new String,\t\"test\"\n     ];\n     for(var i = 0; i < types.length; i++){\n         types[i].constructor = Type;\n         types[i] = [types[i].constructor, types[i] instanceof Type, types[i].toString()];\n     };\n     alert(types.join(\"\\n\"));\n",
                "src": {
                  "name": "24,346,14",
                  "text": "24,347,3,1996"
                }
              },
              {
                "$type": "property",
                "name": "contentPaddingProperty",
                "optional": true,
                "text": "The name of the padding property that is used by the layout to manage\npadding.  See <a href='#!/api/Ext.layout.container.Auto-property-managePadding'>Ext.layout.container.Auto#managePadding</a>\n",
                "type": "String",
                "value": "'padding'",
                "src": {
                  "name": "6,1469,28",
                  "text": "6,1470,8,146",
                  "type": "6,1469,19",
                  "value": "6,1469,51"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "convertPositionSpec",
                "text": "By default this method does nothing but return the position spec passed to it. In\nrtl mode it is overridden to convert \"l\" to \"r\" and vice versa when required.\n",
                "src": {
                  "access": "19,312,8",
                  "name": "19,314,0",
                  "text": "19,310,8,160"
                }
              },
              {
                "$type": "property",
                "access": "protected",
                "name": "defaultBindProperty",
                "optional": true,
                "text": "This property is used to determine the property of a <a href='#!/api/Ext.grid.column.Action-cfg-bind'>bind</a> config that is just\nthe value. For example, if `defaultBindProperty=\"value\"`, then this shorthand\n<a href='#!/api/Ext.grid.column.Action-cfg-bind'>bind</a> config:\n\n     bind: '{name}'\n\nIs equivalent to this object form:\n\n     bind: {\n         value: '{name}'\n     }\n\nThe <a href='#!/api/Ext.grid.column.Action-property-defaultBindProperty'>defaultBindProperty</a> is set to \"value\" for form fields and to \"store\" for\ngrids and trees.\n",
                "type": "String",
                "src": {
                  "access": "9,295,8",
                  "name": "9,280,28",
                  "text": "9,281,8,373",
                  "type": "9,280,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "deferLayouts",
                "src": {
                  "access": "6,1476,8",
                  "name": "6,1478,0"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "eventsSuspended",
                "text": "Initial suspended call count. Incremented when <a href='#!/api/Ext.grid.column.Action-method-suspendEvents'>suspendEvents</a> is called, decremented when <a href='#!/api/Ext.grid.column.Action-method-resumeEvents'>resumeEvents</a> is called.\n",
                "src": {
                  "access": "13,284,11",
                  "name": "13,287,0",
                  "text": "13,285,11,131"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "floating",
                "readonly": true,
                "text": "The value `true` indicates that this Component is floating.\n",
                "type": "Boolean",
                "src": {
                  "access": "3,73,8",
                  "name": "3,71,28",
                  "readonly": "3,74,8",
                  "text": "3,72,8,60",
                  "type": "3,71,19"
                }
              },
              {
                "$type": "property",
                "name": "floatingItems",
                "since": "4.1.0",
                "text": "The MixedCollection containing all the floating child items of this container.\nWill be <a href='#!/api/undefined'>undefined</a> if there are no floating child items.\n",
                "type": "Ext.util.MixedCollection",
                "src": {
                  "name": "4,1309,53",
                  "since": "4,1310,23",
                  "text": "4,1307,16,137",
                  "type": "4,1309,27"
                }
              },
              {
                "$type": "property",
                "name": "floatParent",
                "readonly": true,
                "text": "**Only present for <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> Components which were inserted as child items of Containers.**\n\nThere are other similar relationships such as the <a href='#!/api/Ext.button.Button'>Ext.button.Button</a> which activates a <a href='#!/api/Ext.button.Button-cfg-menu'>Ext.button.Button#cfg-menu</a>, or the\n<a href='#!/api/Ext.menu.Item'>Ext.menu.Item</a> which activated a <a href='#!/api/Ext.menu.Item-cfg-menu'>Ext.menu.Item#cfg-menu</a>, or the\n<a href='#!/api/Ext.grid.column.Column'>Ext.grid.column.Column</a> which activated the column menu.\n\nThese differences are abstracted away by the <a href='#!/api/Ext.grid.column.Action-method-up'>up</a> method.\n\nFloating Components that are programmatically <a href='#!/api/Ext.Component-method-render'>Ext.Component#method-render</a> will not have a <a href='#!/api/Ext.grid.column.Action-property-floatParent'>floatParent</a>\nproperty.\n\nSee <a href='#!/api/Ext.grid.column.Action-cfg-floating'>cfg-floating</a> and <a href='#!/api/Ext.grid.column.Action-property-zIndexManager'>zIndexManager</a>\n",
                "type": "Ext.container.Container",
                "src": {
                  "name": "6,1481,34",
                  "readonly": "6,1494,8",
                  "text": "6,1482,8,681",
                  "type": "6,1481,19"
                }
              },
              {
                "$type": "property",
                "name": "focusable",
                "readonly": true,
                "text": "\n`true` for interactive Components, `false` for static Components.\nFor Containers, this property reflects interactiveness of the\nContainer itself, not its children. See <a href='#!/api/Ext.grid.column.Action-method-isFocusable'>isFocusable</a>.\n\n**Note:** Plain components are static, so not focusable.\n",
                "type": "Boolean",
                "src": {
                  "name": "11,15,28",
                  "readonly": "11,16,8",
                  "text": "11,17,8,249",
                  "type": "11,15,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "focusEl",
                "text": "The component's focusEl.\nAvailable after rendering.\n",
                "type": "Ext.dom.Element",
                "src": {
                  "access": "11,29,8",
                  "name": "11,27,36",
                  "text": "11,27,44,25:11,28,8,27",
                  "type": "11,27,19"
                }
              },
              {
                "$type": "property",
                "name": "frameSize",
                "readonly": true,
                "text": "Indicates the width of any framing elements which were added within the encapsulating\nelement to provide graphical, rounded borders. See the <a href='#!/api/Ext.grid.column.Action-cfg-frame'>frame</a> config. This\nproperty is <a href='#!/api/null'>null</a> if the component is not framed.\n\nThis is an object containing the frame width in pixels for all four sides of the\nComponent containing the following properties:\n",
                "type": "Object",
                "items": [
                  {
                    "$type": "property",
                    "name": "top",
                    "optional": true,
                    "text": "The width of the top framing element in pixels.\n",
                    "type": "Number",
                    "value": "0",
                    "src": {
                      "name": "6,1507,38",
                      "text": "6,1507,45,48",
                      "type": "6,1507,19",
                      "value": "6,1507,42"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "right",
                    "optional": true,
                    "text": "The width of the right framing element in pixels.\n",
                    "type": "Number",
                    "value": "0",
                    "src": {
                      "name": "6,1508,38",
                      "text": "6,1508,47,50",
                      "type": "6,1508,19",
                      "value": "6,1508,44"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "bottom",
                    "optional": true,
                    "text": "The width of the bottom framing element in pixels.\n",
                    "type": "Number",
                    "value": "0",
                    "src": {
                      "name": "6,1509,38",
                      "text": "6,1509,48,51",
                      "type": "6,1509,19",
                      "value": "6,1509,45"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "left",
                    "optional": true,
                    "text": "The width of the left framing element in pixels.\n",
                    "type": "Number",
                    "value": "0",
                    "src": {
                      "name": "6,1510,38",
                      "text": "6,1510,46,49",
                      "type": "6,1510,19",
                      "value": "6,1510,43"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "width",
                    "optional": true,
                    "text": "The total width of the left and right framing elements in pixels.\n",
                    "type": "Number",
                    "value": "0",
                    "src": {
                      "name": "6,1511,38",
                      "text": "6,1511,47,66",
                      "type": "6,1511,19",
                      "value": "6,1511,44"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "height",
                    "optional": true,
                    "text": "The total height of the top and right bottom elements in pixels.\n",
                    "type": "Number",
                    "value": "0",
                    "src": {
                      "name": "6,1512,38",
                      "text": "6,1512,48,65",
                      "type": "6,1512,19",
                      "value": "6,1512,45"
                    }
                  }
                ],
                "src": {
                  "name": "6,1498,27",
                  "readonly": "6,1499,8",
                  "text": "6,1500,8,350",
                  "type": "6,1498,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "hasFocus",
                "text": "`true` if this component has focus.\n",
                "type": "Boolean",
                "src": {
                  "access": "11,10,8",
                  "name": "11,8,28",
                  "text": "11,9,8,36",
                  "type": "11,8,19"
                }
              },
              {
                "$type": "property",
                "name": "hasListeners",
                "readonly": true,
                "text": "This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href='#!/api/Ext.grid.column.Action-observe'>observe</a>) or\non the <a href='#!/api/Ext.app.EventBus'>Ext.app.EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.\n\nThe intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:\n\n     if (this.hasListeners.foo) {\n         this.fireEvent('foo', this, arg1);\n     }\n",
                "type": "Object",
                "src": {
                  "name": "13,290,30",
                  "readonly": "13,291,11",
                  "text": "13,292,11,790",
                  "type": "13,290,22"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "horizontalPosProp",
                "src": {
                  "access": "6,1517,8",
                  "name": "6,1519,0"
                }
              },
              {
                "$type": "property",
                "access": "protected",
                "name": "initFocusable",
                "text": "Template method to do any Focusable related initialization that\ndoes not involve event listeners creation.\n",
                "src": {
                  "access": "11,74,8",
                  "name": "11,76,0",
                  "text": "11,72,8,107"
                }
              },
              {
                "$type": "property",
                "name": "initialConfig",
                "readonly": true,
                "text": "The config object passed to the constructor during Component creation.\n",
                "type": "Object",
                "src": {
                  "name": "6,2015,31",
                  "readonly": "6,2016,12",
                  "text": "6,2017,12,71",
                  "type": "6,2015,23"
                }
              },
              {
                "$type": "property",
                "name": "isColumn",
                "readonly": true,
                "text": "Set in this class to identify, at runtime, instances which are not instances of the\nHeaderContainer base class, but are in fact simple column headers.\n",
                "type": "Boolean",
                "src": {
                  "name": "5,695,28",
                  "readonly": "5,696,8",
                  "text": "5,697,8,151",
                  "type": "5,695,19"
                }
              },
              {
                "$type": "property",
                "name": "isComponent",
                "text": "`true` in this class to identify an object as an instantiated Component, or subclass thereof.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,1522,28",
                  "text": "6,1523,8,94",
                  "type": "6,1522,19"
                }
              },
              {
                "$type": "property",
                "name": "isContainer",
                "text": "`true` in this class to identify an object as an instantiated Container, or subclass thereof.\n",
                "type": "Boolean",
                "src": {
                  "name": "15,13,28",
                  "text": "15,14,8,94",
                  "type": "15,13,19"
                }
              },
              {
                "$type": "property",
                "name": "isGroupHeader",
                "text": "True if this HeaderContainer is in fact a group header which contains sub headers.\n",
                "type": "Boolean",
                "src": {
                  "name": "10,126,28",
                  "text": "10,127,8,83",
                  "type": "10,126,19"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "isColumn\nSet in this class to identify, at runtime, instances which are not instances of the\nHeaderContainer base class, but are in fact, the subclass: Header.\n",
                "deprecatedVersion": "see",
                "name": "isHeader",
                "type": "Boolean",
                "src": {
                  "deprecatedMessage": "5,688,8",
                  "deprecatedVersion": "5,688,8",
                  "name": "5,687,28",
                  "type": "5,687,19"
                }
              },
              {
                "$type": "property",
                "name": "isObservable",
                "text": "`true` in this class to identify an object as an instantiated Observable, or subclass thereof.\n",
                "type": "Boolean",
                "src": {
                  "name": "13,278,31",
                  "text": "13,279,11,95",
                  "type": "13,278,22"
                }
              },
              {
                "$type": "property",
                "name": "items",
                "text": "An array of action items copied from the configured <a href='#!/api/Ext.grid.column.Action-cfg-items'>cfg-items</a> configuration. Each will have\nan `enable` and `disable` method added which will enable and disable the associated action, and\nupdate the displayed icon accordingly.\n",
                "type": "Array",
                "src": {
                  "name": "0,273,26",
                  "text": "0,274,8,242",
                  "type": "0,273,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "layoutCounter",
                "text": "The number of container layout calls made on this object.\n",
                "type": "Number",
                "src": {
                  "access": "4,681,8",
                  "name": "4,679,27",
                  "text": "4,680,8,58",
                  "type": "4,679,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "layoutSuspendCount",
                "src": {
                  "access": "6,1536,8",
                  "name": "6,1538,0"
                }
              },
              {
                "$type": "property",
                "name": "maskOnDisable",
                "text": "This is an internal flag that you use when creating custom components. By default this is set to `true` which means\nthat every component gets a mask when it's disabled. Components like FieldContainer, FieldSet, Field, Button, Tab\noverride this property to `false` since they want to implement custom disable logic.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,1597,28",
                  "text": "6,1598,8,315",
                  "type": "6,1597,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "offsetsCls",
                "src": {
                  "access": "6,1605,8",
                  "name": "6,1607,0"
                }
              },
              {
                "$type": "property",
                "name": "ownerCt",
                "readonly": true,
                "since": "2.3.0",
                "text": "This Component's owner <a href='#!/api/Ext.container.Container'>Ext.container.Container</a> (is set automatically\nwhen this Component is added to a Container).\n\n*Important.* This is not a universal upwards navigation pointer. It indicates the Container which owns and manages\nthis Component if any. There are other similar relationships such as the <a href='#!/api/Ext.button.Button'>Ext.button.Button</a> which activates a <a href='#!/api/Ext.button.Button-cfg-menu'>Ext.button.Button#cfg-menu</a>, or the\n<a href='#!/api/Ext.menu.Item'>Ext.menu.Item</a> which activated a <a href='#!/api/Ext.menu.Item-cfg-menu'>Ext.menu.Item#cfg-menu</a>, or the\n<a href='#!/api/Ext.grid.column.Column'>Ext.grid.column.Column</a> which activated the column menu.\n\nThese differences are abstracted away by the <a href='#!/api/Ext.grid.column.Action-method-up'>up</a> method.\n\n**Note**: to access items within the Container see <a href='#!/api/Ext.grid.column.Action-cfg-itemId'>itemId</a>.\n",
                "type": "Ext.container.Container",
                "src": {
                  "name": "6,1610,34",
                  "readonly": "6,1622,8",
                  "since": "6,1623,15",
                  "text": "6,1611,8,731",
                  "type": "6,1610,19"
                }
              },
              {
                "$type": "property",
                "name": "prototype",
                "text": "Allows the addition of properties to all objects of type Object.\n",
                "src": {
                  "name": "24,46,14",
                  "text": "24,47,4,65"
                }
              },
              {
                "$type": "property",
                "name": "rendered",
                "readonly": true,
                "since": "1.1.0",
                "text": "Indicates whether or not the component has been rendered.\n",
                "type": "Boolean",
                "src": {
                  "name": "6,1627,28",
                  "readonly": "6,1629,8",
                  "since": "6,1630,15",
                  "text": "6,1628,8,58",
                  "type": "6,1627,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "rootCls",
                "src": {
                  "access": "6,1635,8",
                  "name": "6,1637,0"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "scrollerCls",
                "src": {
                  "access": "6,1640,8",
                  "name": "6,1642,0"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "scrollFlags",
                "readonly": true,
                "text": "An object property which provides unified information as to which dimensions are\nscrollable based upon the <a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a> settings (And for *views* of trees and\ngrids, the owning panel's <a href='#!/api/Ext.panel.Table-cfg-scroll'>Ext.panel.Table#scroll</a> setting).\n\nNote that if you set overflow styles using the <a href='#!/api/Ext.grid.column.Action-cfg-style'>style</a> config or\n<a href='#!/api/Ext.panel.Panel-cfg-bodyStyle'>Ext.panel.Panel#bodyStyle</a> config, this object does not include\nthat information. Use <a href='#!/api/Ext.grid.column.Action-cfg-scrollable'>scrollable</a> if you need to access these flags.\n\nThis object has the following properties:\n",
                "type": "Object",
                "items": [
                  {
                    "$type": "property",
                    "name": "x",
                    "text": "`true` if this Component is scrollable\nhorizontally - style setting may be `'auto'` or `'scroll'`.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,1656,40",
                      "text": "6,1656,42,39:6,1657,8,60",
                      "type": "6,1656,19"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "y",
                    "text": "`true` if this Component is scrollable\nvertically - style setting may be `'auto'` or `'scroll'`.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,1658,40",
                      "text": "6,1658,42,39:6,1659,8,58",
                      "type": "6,1658,19"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "both",
                    "text": "`true` if this Component is scrollable both\nhorizontally and vertically.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "6,1660,40",
                      "text": "6,1660,45,44:6,1661,8,29",
                      "type": "6,1660,19"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "overflowX",
                    "text": "The `overflow-x` style setting, `'auto'`\nor `'scroll'` or `''`.\n",
                    "type": "String",
                    "src": {
                      "name": "6,1662,39",
                      "text": "6,1662,49,41:6,1663,8,23",
                      "type": "6,1662,19"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "overflowY",
                    "text": "The `overflow-y` style setting, `'auto'`\nor `'scroll'` or `''`.\n",
                    "type": "String",
                    "src": {
                      "name": "6,1664,39",
                      "text": "6,1664,49,41:6,1665,8,23",
                      "type": "6,1664,19"
                    }
                  }
                ],
                "src": {
                  "access": "6,1667,8",
                  "name": "6,1646,27",
                  "readonly": "6,1666,8",
                  "text": "6,1647,8,514",
                  "type": "6,1646,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "synthetic",
                "optional": true,
                "text": "This property is `true` if the component was created internally by the framework\nand is not explicitly user-defined. This is set for such things as `Splitter`\ninstances managed by <a href='#!/api/Ext.grid.column.Action-cfg-border'>border</a> and `box` layouts.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "access": "6,1219,8",
                  "name": "6,1215,29",
                  "text": "6,1216,8,208",
                  "type": "6,1215,19",
                  "value": "6,1215,39"
                }
              },
              {
                "$type": "property",
                "name": "textEl",
                "text": "Element that contains the text in column header.\n",
                "type": "Ext.dom.Element",
                "src": {
                  "name": "5,682,36",
                  "text": "5,683,8,49",
                  "type": "5,682,19"
                }
              },
              {
                "$type": "property",
                "name": "triggerEl",
                "text": "Element that acts as button for column header dropdown menu.\n",
                "type": "Ext.dom.Element",
                "src": {
                  "name": "5,677,36",
                  "text": "5,678,8,61",
                  "type": "5,677,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "validRefRe",
                "text": "Regular expression used for validating <a href='#!/api/Ext.grid.column.Action-cfg-reference'>reference</a> values.\n",
                "type": "RegExp",
                "src": {
                  "access": "9,302,8",
                  "name": "9,304,0",
                  "text": "9,301,8,59",
                  "type": "9,300,19"
                }
              },
              {
                "$type": "property",
                "name": "zIndexManager",
                "readonly": true,
                "text": "Only present for <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components after\nthey have been rendered.\n\nA reference to the ZIndexManager which is managing this Component's z-index.\n\nThe <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a> maintains a stack of floating Component z-indices, and also provides\na single modal mask which is insert just beneath the topmost visible modal floating Component.\n\nFloating Components may be <a href='#!/api/Ext.Component-method-toFront'>Ext.Component#toFront</a> or <a href='#!/api/Ext.Component-method-toBack'>Ext.Component#toBack</a> of the\nz-index stack.\n\nThis defaults to the global <a href='#!/api/Ext.WindowManager'>Ext.WindowManager</a> for floating Components that are\nprogramatically <a href='#!/api/Ext.Component-method-render'>Ext.Component#method-render</a>.\n\nFor <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components that are added to a\nContainer, the ZIndexManager is acquired from the first ancestor Container found\nthat is floating. If no floating ancestor is found, the global\n<a href='#!/api/Ext.WindowManager'>Ext.WindowManager</a> is used.\n\nSee <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> and <a href='#!/api/Ext.grid.column.Action-property-zIndexParent'>zIndexParent</a>\n",
                "type": "Ext.ZIndexManager",
                "src": {
                  "name": "3,78,38",
                  "readonly": "3,99,8",
                  "text": "3,79,8,1043",
                  "type": "3,78,19"
                }
              },
              {
                "$type": "property",
                "name": "zIndexParent",
                "readonly": true,
                "text": "Only present for <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components which were\ninserted as child items of Containers, and which have a floating Container in\ntheir containment ancestry.\n\nFor <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components which are child items of a\nContainer, the zIndexParent will be a floating ancestor Container which is\nresponsible for the base z-index value of all its floating descendants. It\nprovides a <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a> which provides z-indexing\nservices for all its descendant floating Components.\n\nFloating Components that are programmatically <a href='#!/api/Ext.Component-method-render'>Ext.Component#method-render</a> will not have a <a href='#!/api/Ext.grid.column.Action-property-zIndexParent'>zIndexParent</a>\nproperty.\n\nFor example, the dropdown <a href='#!/api/Ext.view.BoundList'>Ext.view.BoundList</a> of a ComboBox which is in a Window will have the\nWindow as its <a href='#!/api/Ext.grid.column.Action-property-zIndexParent'>zIndexParent</a>, and will always show above that Window, wherever the Window is placed in the z-index stack.\n\nSee <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> and <a href='#!/api/Ext.grid.column.Action-property-zIndexManager'>zIndexManager</a>\n",
                "type": "Ext.container.Container",
                "src": {
                  "name": "3,103,34",
                  "readonly": "3,121,8",
                  "text": "3,104,8,973",
                  "type": "3,103,19"
                }
              }
            ]
          },
          {
            "$type": "vars",
            "items": [
              {
                "$type": "property",
                "name": "$grid-actioncolumn-horizontal-padding",
                "text": "The amount of padding to add to the left and right of the action column cell\n",
                "type": "Number",
                "value": "2px",
                "src": {
                  "name": "1,39,1",
                  "text": "1,37,4,77",
                  "type": "1,36,10",
                  "value": "1,39,48"
                }
              },
              {
                "$type": "property",
                "name": "$grid-actioncolumn-icon-cursor",
                "text": "The type of cursor to display when the cursor is over an action column icon\n",
                "type": "String",
                "value": "pointer",
                "src": {
                  "name": "1,21,1",
                  "text": "1,19,4,76",
                  "type": "1,18,10",
                  "value": "1,21,41"
                }
              },
              {
                "$type": "property",
                "name": "$grid-actioncolumn-icon-glyph-color",
                "text": "The default color to use for action column icon glyphs.\n",
                "type": "color",
                "value": "gray",
                "src": {
                  "name": "1,33,1",
                  "text": "1,31,4,56",
                  "type": "1,30,10",
                  "value": "1,33,46"
                }
              },
              {
                "$type": "property",
                "name": "$grid-actioncolumn-icon-height",
                "text": "The height of action column icons\n",
                "type": "Number",
                "value": "16px",
                "src": {
                  "name": "1,9,1",
                  "text": "1,7,4,34",
                  "type": "1,6,10",
                  "value": "1,9,41"
                }
              },
              {
                "$type": "property",
                "name": "$grid-actioncolumn-icon-opacity-disabled",
                "text": "The opacity of disabled action column icons\n",
                "type": "Number",
                "value": ".3",
                "src": {
                  "name": "1,27,1",
                  "text": "1,25,4,44",
                  "type": "1,24,10",
                  "value": "1,27,51"
                }
              },
              {
                "$type": "property",
                "name": "$grid-actioncolumn-icon-width",
                "text": "The width of action column icons\n",
                "type": "Number",
                "value": "16px",
                "src": {
                  "name": "1,15,1",
                  "text": "1,13,4,33",
                  "type": "1,12,10",
                  "value": "1,15,40"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-border-style",
                "text": "The border-style of grid column headers\n",
                "type": "String",
                "value": "solid",
                "src": {
                  "name": "25,55,1",
                  "text": "25,53,4,40",
                  "type": "25,52,10",
                  "value": "25,55,43"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-border-width",
                "text": "The border-width of grid column headers\n",
                "type": "Number",
                "value": "1px",
                "src": {
                  "name": "25,49,1",
                  "text": "25,47,4,40",
                  "type": "25,46,10",
                  "value": "25,49,43"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-color",
                "text": "The text color of grid column headers\n",
                "type": "color",
                "value": "#000",
                "src": {
                  "name": "25,43,1",
                  "text": "25,41,4,38",
                  "type": "25,40,10",
                  "value": "25,43,36"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-focus-background-color",
                "text": "The background-color of focused grid column headers\n",
                "type": "color",
                "value": "'none'",
                "src": {
                  "name": "25,67,1",
                  "text": "25,65,4,52",
                  "type": "25,64,10",
                  "value": "25,67,53"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-focus-border-color",
                "text": "The border color of focused grid column headers\n",
                "type": "color",
                "value": "#333",
                "src": {
                  "name": "25,91,1",
                  "text": "25,89,4,48",
                  "type": "25,88,10",
                  "value": "25,91,49"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-focus-border-inset",
                "text": "The spacing between column header element border and inner focus border\n",
                "type": "Number",
                "value": "0px",
                "src": {
                  "name": "25,85,1",
                  "text": "25,83,4,72",
                  "type": "25,82,10",
                  "value": "25,85,49"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-focus-border-style",
                "text": "The border-style of focused grid column headers\n",
                "type": "String",
                "value": "solid",
                "src": {
                  "name": "25,79,1",
                  "text": "25,77,4,48",
                  "type": "25,76,10",
                  "value": "25,79,49"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-focus-border-width",
                "text": "The border-width of focused grid column headers\n",
                "type": "Number",
                "value": "1px",
                "src": {
                  "name": "25,73,1",
                  "text": "25,71,4,48",
                  "type": "25,70,10",
                  "value": "25,73,49"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-focus-color",
                "text": "The text color of focused grid column headers\n",
                "type": "color",
                "value": "$grid-column-header-color",
                "src": {
                  "name": "25,61,1",
                  "text": "25,59,4,46",
                  "type": "25,58,10",
                  "value": "25,61,42"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-font-family",
                "text": "The font-family of grid column headers\n",
                "type": "String",
                "value": "$font-family",
                "src": {
                  "name": "25,9,1",
                  "text": "25,7,4,39",
                  "type": "25,6,10",
                  "value": "25,9,42"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-font-size",
                "text": "The font-size of grid column headers\n",
                "type": "Number",
                "value": "$font-size",
                "src": {
                  "name": "25,15,1",
                  "text": "25,13,4,37",
                  "type": "25,12,10",
                  "value": "25,15,40"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-font-weight",
                "text": "The font-weight of grid column headers\n",
                "type": "String",
                "value": "$font-weight",
                "src": {
                  "name": "25,21,1",
                  "text": "25,19,4,39",
                  "type": "25,18,10",
                  "value": "25,21,42"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-header-line-height",
                "text": "The line-height of grid column headers\n",
                "type": "Number",
                "value": "round($grid-column-header-font-size * 1.15)",
                "src": {
                  "name": "25,27,1",
                  "text": "25,25,4,39",
                  "type": "25,24,10",
                  "value": "25,27,42"
                }
              },
              {
                "$type": "property",
                "name": "$grid-column-text-overflow",
                "text": "The text-overflow of grid column headers\n",
                "type": "String",
                "value": "ellipsis",
                "src": {
                  "name": "25,36,1",
                  "text": "25,34,4,41",
                  "type": "25,33,10",
                  "value": "25,36,37"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-background-color",
                "text": "The background-color of grid headers\n",
                "type": "color",
                "value": "#ddd",
                "src": {
                  "name": "26,9,1",
                  "text": "26,7,4,37",
                  "type": "26,6,10",
                  "value": "26,9,40"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-background-gradient",
                "text": "The background-gradient of grid headers.  Can be either the name of a predefined gradient\nor a list of color stops. Used as the `$type` parameter for <a href='#!/api/Global_CSS-background-gradient'>Global_CSS#background-gradient</a>.\n",
                "type": "String/list",
                "value": "'grid-header'",
                "src": {
                  "name": "26,16,1",
                  "text": "26,13,4,190",
                  "type": "26,12,10",
                  "value": "26,16,43"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-border-color",
                "text": "The border-color of grid headers\n",
                "type": "color",
                "value": "#333",
                "src": {
                  "name": "26,22,1",
                  "text": "26,20,4,33",
                  "type": "26,19,10",
                  "value": "26,22,36"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-border-style",
                "text": "The border-style of grid headers\n",
                "type": "String",
                "value": "solid",
                "src": {
                  "name": "26,34,1",
                  "text": "26,32,4,33",
                  "type": "26,31,10",
                  "value": "26,34,36"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-border-width",
                "text": "The border-width of grid headers\n",
                "type": "Number",
                "value": "1px",
                "src": {
                  "name": "26,28,1",
                  "text": "26,26,4,33",
                  "type": "26,25,10",
                  "value": "26,28,36"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-menu-columns-glyph",
                "text": "Glyph for the grid header menu \"columns\" icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "$ext-var-columns $grid-header-menu-glyph-font-size ExtJS",
                "src": {
                  "name": "26,209,1",
                  "text": "26,207,4,100",
                  "type": "26,206,10",
                  "value": "26,209,42"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-menu-glyph-color",
                "text": "The color to use for the grid header menu icons when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "color",
                "value": "$menu-glyph-color",
                "src": {
                  "name": "26,191,1",
                  "text": "26,189,4,102",
                  "type": "26,188,10",
                  "value": "26,191,40"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-menu-glyph-font-size",
                "text": "Glyph for the grid header menu icons when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "16px",
                "src": {
                  "name": "26,185,1",
                  "text": "26,183,4,91",
                  "type": "26,182,10",
                  "value": "26,185,44"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-menu-sort-asc-glyph",
                "text": "Glyph for the grid header menu \"sort ascending\" icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "$ext-var-sort-up $grid-header-menu-glyph-font-size ExtJS",
                "src": {
                  "name": "26,197,1",
                  "text": "26,195,4,107",
                  "type": "26,194,10",
                  "value": "26,197,43"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-menu-sort-desc-glyph",
                "text": "Glyph for the grid header menu \"sort descending\" icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "$ext-var-sort-down $grid-header-menu-glyph-font-size ExtJS",
                "src": {
                  "name": "26,203,1",
                  "text": "26,201,4,108",
                  "type": "26,200,10",
                  "value": "26,203,44"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-open-background-color",
                "text": "The background-color of a grid header when its menu is open\n",
                "type": "color",
                "value": "transparent",
                "src": {
                  "name": "26,68,1",
                  "text": "26,66,4,60",
                  "type": "26,65,10",
                  "value": "26,68,45"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-over-background-color",
                "text": "The background-color of grid headers when the cursor is over the header\n",
                "type": "color",
                "value": "#eee",
                "src": {
                  "name": "26,40,1",
                  "text": "26,38,4,72",
                  "type": "26,37,10",
                  "value": "26,40,45"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-over-background-gradient",
                "text": "The background-gradient of grid headers when the cursor is over the header.  Can be\neither the name of a predefined gradient or a list of color stops. Used as the `$type`\nparameter for <a href='#!/api/Global_CSS-background-gradient'>Global_CSS#background-gradient</a>.\n",
                "type": "String/list",
                "value": "'grid-header-over'",
                "src": {
                  "name": "26,48,1",
                  "text": "26,44,4,225",
                  "type": "26,43,10",
                  "value": "26,48,48"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-padding",
                "text": "The padding to apply to grid headers\n",
                "type": "Number/list",
                "value": "5px",
                "src": {
                  "name": "26,74,1",
                  "text": "26,72,4,37",
                  "type": "26,71,10",
                  "value": "26,74,31"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sort-asc-glyph",
                "text": "Glyph for the grid header \"sort ascending\" icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "$fa-var-long-arrow-up $grid-header-sort-glyph-font-size $font-icon-font-family",
                "src": {
                  "name": "26,173,1",
                  "text": "26,171,4,102",
                  "type": "26,170,10",
                  "value": "26,173,38"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sort-desc-glyph",
                "text": "Glyph for the grid header \"sort descending\" icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "$fa-var-long-arrow-down $grid-header-sort-glyph-font-size $font-icon-font-family",
                "src": {
                  "name": "26,179,1",
                  "text": "26,177,4,103",
                  "type": "26,176,10",
                  "value": "26,179,39"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sort-glyph-color",
                "text": "The color to use for the grid header sort icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "color",
                "value": "$color",
                "src": {
                  "name": "26,167,1",
                  "text": "26,165,4,101",
                  "type": "26,164,10",
                  "value": "26,167,40"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sort-glyph-font-size",
                "text": "Glyph for the grid header sort icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "14px",
                "src": {
                  "name": "26,161,1",
                  "text": "26,159,4,90",
                  "type": "26,158,10",
                  "value": "26,161,44"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sort-icon-spacing",
                "text": "The space between the grid header sort icon and the grid header text\n",
                "type": "Number",
                "value": "3px",
                "src": {
                  "name": "26,152,1",
                  "text": "26,150,4,69",
                  "type": "26,149,10",
                  "value": "26,152,41"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sort-icon-width",
                "text": "The width of the grid header sort icon\n",
                "type": "Number",
                "value": "9px",
                "src": {
                  "name": "26,116,1",
                  "text": "26,114,4,39",
                  "type": "26,113,10",
                  "value": "26,116,39"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sorted-background-color",
                "text": "The background-color of grid headers when sorted\n",
                "type": "color",
                "value": "$grid-header-over-background-color",
                "src": {
                  "name": "26,54,1",
                  "text": "26,52,4,49",
                  "type": "26,51,10",
                  "value": "26,54,47"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-sorted-background-gradient",
                "text": "The background-gradient of grid headers when sorted.  Can be either the name of a\npredefined gradient or a list of color stops. Used as the `$type`\nparameter for <a href='#!/api/Global_CSS-background-gradient'>Global_CSS#background-gradient</a>.\n",
                "type": "String/list",
                "value": "$grid-header-over-background-gradient",
                "src": {
                  "name": "26,62,1",
                  "text": "26,58,4,202",
                  "type": "26,57,10",
                  "value": "26,62,50"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-background-color",
                "text": "The background-color of the header trigger\n",
                "type": "color",
                "value": "transparent",
                "src": {
                  "name": "26,140,1",
                  "text": "26,138,4,43",
                  "type": "26,137,10",
                  "value": "26,140,48"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-background-color-open",
                "text": "The background-color of the header trigger when the menu is open\n",
                "type": "color",
                "value": "transparent",
                "src": {
                  "name": "26,146,1",
                  "text": "26,144,4,65",
                  "type": "26,143,10",
                  "value": "26,146,53"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-background-image",
                "text": "The background-image of grid header triggers\n",
                "type": "String",
                "value": "'grid/hd-pop'",
                "src": {
                  "name": "26,92,1",
                  "text": "26,90,4,45",
                  "type": "26,89,10",
                  "value": "26,92,48"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-background-position",
                "text": "The background-position of the header trigger\n",
                "type": "list",
                "value": "0 center",
                "src": {
                  "name": "26,134,1",
                  "text": "26,132,4,46",
                  "type": "26,131,10",
                  "value": "26,134,51"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-cursor",
                "text": "The type of cursor to display when the cursor is over a grid header trigger\n",
                "type": "String",
                "value": "pointer",
                "src": {
                  "name": "26,122,1",
                  "text": "26,120,4,76",
                  "type": "26,119,10",
                  "value": "26,122,38"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-glyph",
                "text": "Glyph for the grid header trigger icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "$fa-var-caret-down $grid-header-trigger-glyph-font-size $font-icon-font-family",
                "src": {
                  "name": "26,104,1",
                  "text": "26,102,4,93",
                  "type": "26,101,10",
                  "value": "26,104,37"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-glyph-color",
                "text": "The color to use for the grid header trigger icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "color",
                "value": "$color",
                "src": {
                  "name": "26,110,1",
                  "text": "26,108,4,104",
                  "type": "26,107,10",
                  "value": "26,110,43"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-glyph-font-size",
                "text": "Glyph for the grid header trigger icon when <a href='#!/api/Global_CSS-var-$enable-font-icons'>Global_CSS#$enable-font-icons</a> is `true`.\n",
                "type": "String/list",
                "value": "16px",
                "src": {
                  "name": "26,98,1",
                  "text": "26,96,4,93",
                  "type": "26,95,10",
                  "value": "26,98,47"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-height",
                "text": "The height of grid header triggers\n",
                "type": "Number",
                "value": "22px",
                "src": {
                  "name": "26,80,1",
                  "text": "26,78,4,35",
                  "type": "26,77,10",
                  "value": "26,80,38"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-spacing",
                "text": "The amount of space between the header trigger and text\n",
                "type": "Number",
                "value": "1px",
                "src": {
                  "name": "26,128,1",
                  "text": "26,126,4,56",
                  "type": "26,125,10",
                  "value": "26,128,39"
                }
              },
              {
                "$type": "property",
                "name": "$grid-header-trigger-width",
                "text": "The width of grid header triggers\n",
                "type": "Number",
                "value": "14px",
                "src": {
                  "name": "26,86,1",
                  "text": "26,84,4,34",
                  "type": "26,83,10",
                  "value": "26,86,37"
                }
              },
              {
                "$type": "property",
                "name": "$scroll-indicator-background-color",
                "text": "The background color of scroll indicators when touch scrolling is enabled\n",
                "type": "color",
                "value": "#000",
                "src": {
                  "name": "27,12,1",
                  "text": "27,10,4,74",
                  "type": "27,9,10",
                  "value": "27,12,45"
                }
              },
              {
                "$type": "property",
                "name": "$scroll-indicator-border-radius",
                "text": "The border-radius of scroll indicators when touch scrolling is enabled\n",
                "type": "Number",
                "value": "3px",
                "src": {
                  "name": "27,24,1",
                  "text": "27,22,4,71",
                  "type": "27,21,10",
                  "value": "27,24,42"
                }
              },
              {
                "$type": "property",
                "name": "$scroll-indicator-margin",
                "text": "The space between scroll indicators and the edge of their container\n",
                "type": "Number",
                "value": "2px",
                "src": {
                  "name": "27,36,1",
                  "text": "27,34,4,68",
                  "type": "27,33,10",
                  "value": "27,36,35"
                }
              },
              {
                "$type": "property",
                "name": "$scroll-indicator-opacity",
                "text": "The opacity of scroll indicators when touch scrolling is enabled\n",
                "type": "Number",
                "value": ".5",
                "src": {
                  "name": "27,18,1",
                  "text": "27,16,4,65",
                  "type": "27,15,10",
                  "value": "27,18,36"
                }
              },
              {
                "$type": "property",
                "name": "$scroll-indicator-size",
                "text": "The background color of scroll indicators when touch scrolling is enabled\n",
                "type": "color",
                "value": "6px",
                "src": {
                  "name": "27,30,1",
                  "text": "27,28,4,74",
                  "type": "27,27,10",
                  "value": "27,30,33"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,56,0",
          "alternateClassNames": "0,57,0",
          "extends": "0,55,0",
          "name": "1,2,11",
          "text": "0,2,4,1999"
        }
      }
    ]
  },
  "version": 1
}