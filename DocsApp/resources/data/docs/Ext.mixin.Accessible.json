{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/mixin/Accessible.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "access": "private",
        "extends": "Ext.Mixin",
        "name": "Ext.mixin.Accessible",
        "text": "This mixin defines certain config options, properties, and APIs to be used\nby Components that implement accessible traits according to WAI-ARIA 1.0 specification.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "ariaAttributes",
                "text": "An object containing ARIA attributes to be set\non this Component's ARIA element. Use this to set the attributes that cannot be\ndetermined by the Component's state, such as `aria-live`, `aria-flowto`, etc.\n\n**Note** that this config is only meaningful at the Component rendering time,\nand setting it after that will do nothing.\n",
                "type": "Object",
                "src": {
                  "name": "0,39,26",
                  "text": "0,39,41,47:0,40,12,280",
                  "type": "0,39,18"
                }
              },
              {
                "$type": "property",
                "name": "ariaDescribedBy",
                "optional": true,
                "text": "DOM selector for a child element that is to be used\nas description for this Component, set in `aria-describedby` attribute.\nThe selector works the same way as <a href='#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy'>ariaLabelledBy</a>.\n",
                "type": "String",
                "src": {
                  "name": "0,32,23",
                  "text": "0,32,40,52:0,33,8,132",
                  "type": "0,32,14"
                }
              },
              {
                "$type": "property",
                "name": "ariaLabel",
                "optional": true,
                "text": "ARIA label for this Component. It is best to use\n<a href='#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy'>ariaLabelledBy</a> option instead, because screen readers prefer\n`aria-labelledby` attribute to `aria-label`. <a href='#!/api/Ext.mixin.Accessible-cfg-ariaLabel'>ariaLabel</a> and\n<a href='#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy'>ariaLabelledBy</a> config options are mutually exclusive.\n",
                "type": "String",
                "src": {
                  "name": "0,15,23",
                  "text": "0,15,34,49:0,16,8,201",
                  "type": "0,15,14"
                }
              },
              {
                "$type": "property",
                "name": "ariaLabelledBy",
                "optional": true,
                "text": "DOM selector for a child element that is to be used\nas label for this Component, set in `aria-labelledby` attribute.\nIf the selector is by `#id`, the label element can be any existing element,\nnot necessarily a child of the main Component element.\n\n<a href='#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy'>ariaLabelledBy</a> and <a href='#!/api/Ext.mixin.Accessible-cfg-ariaLabel'>ariaLabel</a> config options are\nmutually exclusive, and <a href='#!/api/Ext.mixin.Accessible-cfg-ariaLabelledBy'>ariaLabelledBy</a> has the higher precedence.\n",
                "type": "String",
                "src": {
                  "name": "0,22,23",
                  "text": "0,22,39,52:0,23,8,331",
                  "type": "0,22,14"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "getAriaLabelEl",
                "text": "Find component(s) that label or describe this component,\nand return the id(s) of their ariaEl elements.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "reference",
                    "optional": true,
                    "text": "Component reference,\nor array of component references, or a function that should return\nthe proper attribute string. The function will be called in the\ncontext of the labelled component.\n",
                    "type": "Function/String/String[]",
                    "src": {
                      "name": "0,72,47",
                      "text": "0,72,58,21:0,73,12,167",
                      "type": "0,72,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "Element id string, or null\n",
                    "type": "Ext.dom.Element",
                    "src": {
                      "text": "0,77,34,27",
                      "type": "0,77,21"
                    }
                  }
                ],
                "src": {
                  "access": "0,78,12",
                  "name": "0,80,0",
                  "text": "0,69,12,105"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "access": "private",
                "name": "ariaRenderAttributes",
                "optional": true,
                "text": "**Instance specific** ARIA attributes\nto render into Component's ariaEl. This object is only used during rendering,\nand is discarded afterwards.\n",
                "type": "Object",
                "src": {
                  "access": "0,64,8",
                  "name": "0,60,28",
                  "text": "0,60,50,38:0,61,8,108",
                  "type": "0,60,19"
                }
              },
              {
                "$type": "property",
                "name": "ariaRole",
                "optional": true,
                "readonly": true,
                "text": "ARIA role for this Component, defaults to no role.\nWith no role, no other ARIA attributes are set.\n",
                "type": "String",
                "src": {
                  "name": "0,53,28",
                  "readonly": "0,56,8",
                  "text": "0,53,38,51:0,54,8,49",
                  "type": "0,53,19"
                }
              }
            ]
          }
        ],
        "src": {
          "access": "0,5,4",
          "extends": "0,8,0",
          "name": "0,7,0",
          "text": "0,2,4,164"
        }
      }
    ]
  },
  "version": 1
}