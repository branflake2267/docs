{
  "$type": "doxi",
  "files": [
    "../../../packages/pivot/src/pivot/filter/Base.js",
    "../../../ext/packages/core/src/mixin/Factoryable.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "pivotfilter.base",
        "alternateClassNames": "Mz.aggregate.filter.Abstract",
        "mixins": "Ext.mixin.Factoryable",
        "name": "Ext.pivot.filter.Base",
        "text": "Base implementation of a filter. It handles common type of filters.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "caseSensitive",
                "optional": true,
                "text": "\nDuring filtering should we use case sensitive comparison?\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "0,66,24",
                  "text": "0,67,8,60",
                  "type": "0,66,14",
                  "value": "0,66,38"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.pivot.filter.Base-value'>value</a> instead as an array with 2 values.\n\nUsed in case of a 'between/not between' type of filter\n",
                "deprecatedVersion": "6.0",
                "name": "from",
                "type": "String",
                "src": {
                  "deprecatedMessage": "0,44,8",
                  "deprecatedVersion": "0,44,8",
                  "name": "0,43,22",
                  "type": "0,43,14"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.pivot.filter.Base-type'>type</a> instead. The old type config was renamed to <a href='#!/api/Ext.pivot.filter.Base-operator'>operator</a>.\n",
                "deprecatedVersion": "6.0",
                "name": "mztype",
                "type": "String",
                "src": {
                  "deprecatedMessage": "0,19,8",
                  "deprecatedVersion": "0,19,8",
                  "name": "0,17,22",
                  "type": "0,17,14"
                }
              },
              {
                "$type": "property",
                "name": "operator",
                "text": "(required)\n\nOperator to use to compare labels/values to this Filter's <a href='#!/api/Ext.pivot.filter.Base-cfg-value'>value</a>.\n\nThe `between` and `not between` operators expect this filter's <a href='#!/api/Ext.pivot.filter.Base-cfg-value'>value</a> to be an array with two values.\n\nPossible values are:\n\n   * `<`\n   * `<=`\n   * `=`\n   * `>=`\n   * `>`\n   * `!=`\n   * `between`\n   * `not between`\n",
                "type": "String",
                "src": {
                  "name": "0,23,22",
                  "text": "0,23,31,11:0,24,8,300",
                  "type": "0,23,14"
                }
              },
              {
                "$type": "property",
                "deprecatedMessage": "Use <a href='#!/api/Ext.pivot.filter.Base-value'>value</a> instead as an array with 2 values.\n\nUsed in case of a 'between/not between' operator\n",
                "deprecatedVersion": "6.0",
                "name": "to",
                "type": "String",
                "src": {
                  "deprecatedMessage": "0,52,8",
                  "deprecatedVersion": "0,52,8",
                  "name": "0,51,22",
                  "type": "0,51,14"
                }
              },
              {
                "$type": "property",
                "name": "value",
                "text": "(required)\n\nValue to filter by. For 'between' and 'not between' operators this should be an array of values.\n",
                "type": "String/Array",
                "src": {
                  "name": "0,59,28",
                  "text": "0,59,34,11:0,60,8,98",
                  "type": "0,59,14"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "isMatch",
                "text": "Check if the specified value matches the filter.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Boolean True if the value matches the filter\n",
                    "src": {
                      "text": "0,119,17,45"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "value",
                    "src": {
                      "name": "0,120,15"
                    }
                  }
                ],
                "src": {
                  "name": "0,123,0",
                  "text": "0,117,8,50"
                }
              },
              {
                "$type": "method",
                "name": "serialize",
                "text": "Returns the serialized filter data as an object.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "0,94,18"
                    }
                  }
                ],
                "src": {
                  "name": "0,96,0",
                  "text": "0,92,8,50"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "factoryConfig",
                "optional": true,
                "text": "If this property is specified by the target class of this mixin its properties are\nused to configure the created <a href='#!/api/Ext.Factory'>Ext.Factory</a>.\n",
                "type": "Object",
                "src": {
                  "name": "1,295,28",
                  "text": "1,296,8,128",
                  "type": "1,295,19"
                }
              },
              {
                "$type": "property",
                "name": "getSerialArgs",
                "text": "Template method to be implemented by all subclasses that is used to\nget and return serialized filter data.\n\nDefaults to Ext.emptyFn.\n",
                "src": {
                  "name": "0,114,0",
                  "text": "0,108,8,134"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "parent",
                "readonly": true,
                "text": "Reference to the parent dimension object.\n",
                "type": "Ext.pivot.dimension.Item",
                "src": {
                  "access": "0,77,8",
                  "name": "0,74,45",
                  "readonly": "0,75,8",
                  "text": "0,74,52,42",
                  "type": "0,74,19"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,10,0",
          "alternateClassNames": "0,7,0",
          "mixins": "0,13,0",
          "name": "0,5,0",
          "text": "0,2,4,69"
        }
      }
    ]
  },
  "version": 1
}