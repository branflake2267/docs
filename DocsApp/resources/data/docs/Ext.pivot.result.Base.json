{
  "$type": "doxi",
  "files": [
    "../../../packages/pivot/src/pivot/result/Base.js",
    "../../../ext/packages/core/src/mixin/Factoryable.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "pivotresult.base",
        "mixins": "Ext.mixin.Factoryable",
        "name": "Ext.pivot.result.Base",
        "text": "Base implementation of a result object.\n\nThe Result object stores all calculated values for the aggregate dimensions\nfor a left/top item pair.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "leftKey",
                "text": "(required)\n\n Key of left axis item or grandTotalKey\n",
                "type": "String",
                "src": {
                  "name": "0,17,22",
                  "text": "0,17,30,11:0,18,8,41",
                  "type": "0,17,14"
                }
              },
              {
                "$type": "property",
                "name": "topKey",
                "text": "(required)\n\nKey of top axis item or grandTotalKey\n",
                "type": "String",
                "src": {
                  "name": "0,23,22",
                  "text": "0,23,29,11:0,24,8,39",
                  "type": "0,23,14"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "addValue",
                "text": "Add the calculated value for an aggregate dimension to the internal values storage\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "dimensionId",
                    "src": {
                      "name": "0,93,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "value",
                    "src": {
                      "name": "0,94,15"
                    }
                  }
                ],
                "src": {
                  "name": "0,96,0",
                  "text": "0,91,8,84"
                }
              },
              {
                "$type": "method",
                "name": "calculateByFn",
                "text": "\nBesides the calculation functions defined on your aggregate dimension you could\ncalculate values based on other store fields and custom functions.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "key",
                    "text": "The generated value will be stored in the result under this key for later extraction\n",
                    "src": {
                      "name": "0,84,15",
                      "text": "0,84,19,85"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "dataIndex",
                    "text": "The dataIndex that should be used on the records for doing calculations\n",
                    "src": {
                      "name": "0,85,15",
                      "text": "0,85,25,72"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "aggFn",
                    "text": "Your custom function\n",
                    "src": {
                      "name": "0,86,15",
                      "text": "0,86,21,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,88,0",
                  "text": "0,80,8,149"
                }
              },
              {
                "$type": "method",
                "name": "getLeftAxisItem",
                "text": "Returns the left axis item\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Ext.pivot.axis.Item",
                    "src": {
                      "type": "0,112,18"
                    }
                  }
                ],
                "src": {
                  "name": "0,114,0",
                  "text": "0,110,8,28"
                }
              },
              {
                "$type": "method",
                "name": "getTopAxisItem",
                "text": "Returns the top axis item\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Ext.pivot.axis.Item",
                    "src": {
                      "type": "0,121,18"
                    }
                  }
                ],
                "src": {
                  "name": "0,123,0",
                  "text": "0,119,8,27"
                }
              },
              {
                "$type": "method",
                "name": "getValue",
                "text": "Returns the calculated value for the specified aggregate dimension\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "dimensionId",
                    "src": {
                      "name": "0,103,15"
                    }
                  }
                ],
                "src": {
                  "name": "0,105,0",
                  "text": "0,101,8,68"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "calculate",
                "text": "Calculate all pivot aggregate dimensions for the internal records. Useful when using a\n<a href='#!/api/Ext.pivot.matrix.Local'>Ext.pivot.matrix.Local</a> matrix.\n",
                "src": {
                  "name": "0,76,0",
                  "text": "0,72,8,133"
                }
              },
              {
                "$type": "property",
                "name": "dirty",
                "text": "\nSet this flag on true if you modified at least one record in this result.\nThe grid cell will be marked as dirty in such a case.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,29,28",
                  "text": "0,30,8,129",
                  "type": "0,29,19"
                }
              },
              {
                "$type": "property",
                "name": "factoryConfig",
                "optional": true,
                "text": "If this property is specified by the target class of this mixin its properties are\nused to configure the created <a href='#!/api/Ext.Factory'>Ext.Factory</a>.\n",
                "type": "Object",
                "src": {
                  "name": "1,295,28",
                  "text": "1,296,8,128",
                  "type": "1,295,19"
                }
              },
              {
                "$type": "property",
                "name": "matrix",
                "readonly": true,
                "text": "\nReference to the matrix object\n",
                "type": "Ext.pivot.matrix.Base",
                "src": {
                  "name": "0,46,42",
                  "readonly": "0,47,8",
                  "text": "0,48,8,32",
                  "type": "0,46,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "values",
                "text": "\nObject that stores all calculated values for each pivot aggregate.\nThe object keys are the dimension ids.\n",
                "type": "Object",
                "src": {
                  "access": "0,42,8",
                  "name": "0,37,27",
                  "text": "0,38,8,108",
                  "type": "0,37,19"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,10,0",
          "mixins": "0,13,0",
          "name": "0,8,0",
          "text": "0,2,4,144"
        }
      }
    ]
  },
  "version": 1
}