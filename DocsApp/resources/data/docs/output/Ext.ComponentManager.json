{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/ComponentManager.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alternateClassNames": "Ext.ComponentMgr",
        "name": "Ext.ComponentManager",
        "singleton": true,
        "text": "Provides a registry of all Components (instances of <a href='#!/api/Ext.Component'>Ext.Component</a> or any subclass\nthereof) on a page so that they can be easily accessed by <a href='#!/api/Ext.Component'>Ext.Component</a>\n<a href='#!/api/Ext.Component-cfg-id'>Ext.Component#id</a> (see <a href='#!/api/Ext.ComponentManager-method-get'>get</a>, or the convenience method\n<a href='#!/api/Ext-getCmp'>Ext.getCmp</a>).\n\nThis object also provides a registry of available Component *classes* indexed by a\nmnemonic code known as the Component's <a href='#!/api/Ext.Component-cfg-xtype'>Ext.Component#xtype</a>. The `xtype`\nprovides a way to avoid instantiating child Components when creating a full, nested\nconfig object for a complete Ext page.\n\nA child Component may be specified simply as a *config object* as long as the correct\n<a href='#!/api/Ext.Component-cfg-xtype'>Ext.Component#xtype</a> is specified so that if and when the Component\nneeds rendering, the correct type can be looked up for lazy instantiation.\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "constructor",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "src": {
                      "name": "0,30,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,28,8",
                  "name": "0,30,0"
                }
              },
              {
                "$type": "method",
                "name": "create",
                "text": "Creates a new Component from the specified config object using the config object's\n`xtype` to determine the class to instantiate.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "text": "A configuration object for the Component you wish to create.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,43,24",
                      "text": "0,43,31,61",
                      "type": "0,43,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "defaultType",
                    "optional": true,
                    "text": "The `xtype` to use if the config object does not\ncontain a `xtype`. (Optional if the config contains a `xtype`).\n",
                    "type": "String",
                    "src": {
                      "name": "0,44,25",
                      "text": "0,44,38,49:0,45,8,64",
                      "type": "0,44,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The newly instantiated Component.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "0,46,32,34",
                      "type": "0,46,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,48,0",
                  "text": "0,40,8,131"
                }
              },
              {
                "$type": "method",
                "name": "get",
                "text": "Returns an item by id.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "text": "The id of the item\n",
                    "type": "String",
                    "src": {
                      "name": "0,65,24",
                      "text": "0,65,27,19",
                      "type": "0,65,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The item, undefined if not found.\n",
                    "type": "Object",
                    "src": {
                      "text": "0,66,25,34",
                      "type": "0,66,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,68,0",
                  "text": "0,64,8,23"
                }
              },
              {
                "$type": "method",
                "name": "onAvailable",
                "text": "Registers a function that will be called (a single time) when an item with the specified id is added to the manager.\nThis will happen on instantiation.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "text": "The item id\n",
                    "type": "String",
                    "src": {
                      "name": "0,142,24",
                      "text": "0,142,27,12",
                      "type": "0,142,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The callback function. Called with a single parameter, the item.\n",
                    "type": "Function",
                    "src": {
                      "name": "0,143,26",
                      "text": "0,143,29,65",
                      "type": "0,143,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "The scope ('this' reference) in which the callback is executed.\nDefaults to the item.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,144,24",
                      "text": "0,144,30,64:0,145,8,22",
                      "type": "0,144,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,147,0",
                  "text": "0,140,8,152"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "notifyAvailable",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "src": {
                      "name": "0,169,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,167,7",
                  "name": "0,169,0"
                }
              },
              {
                "$type": "method",
                "name": "each",
                "text": "Executes the specified function once for each item in the collection.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The function to execute.\n",
                    "type": "Function",
                    "items": [
                      {
                        "$type": "property",
                        "name": "key",
                        "text": "The key of the item\n",
                        "type": "String",
                        "src": {
                          "name": "0,179,27",
                          "text": "0,179,31,20",
                          "type": "0,179,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "value",
                        "text": "The value of the item\n",
                        "type": "Number",
                        "src": {
                          "name": "0,180,27",
                          "text": "0,180,33,22",
                          "type": "0,180,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "length",
                        "text": "The total number of items in the collection ** Removed\nin 5.0 **\n",
                        "type": "Number",
                        "src": {
                          "name": "0,181,27",
                          "text": "0,181,34,55:0,182,8,10",
                          "type": "0,181,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "return",
                        "text": "False to cease iteration.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,183,28",
                          "text": "0,183,35,26",
                          "type": "0,183,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,178,26",
                      "text": "0,178,29,25",
                      "type": "0,178,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "The scope to execute in. Defaults to `this`.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,184,24",
                      "text": "0,184,30,45",
                      "type": "0,184,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,186,0",
                  "text": "0,177,8,70"
                }
              },
              {
                "$type": "method",
                "name": "getCount",
                "text": "Gets the number of items in the collection.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The number of items in the collection.\n",
                    "type": "Number",
                    "src": {
                      "text": "0,192,25,39",
                      "type": "0,192,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,194,0",
                  "text": "0,191,8,44"
                }
              },
              {
                "$type": "method",
                "name": "getAll",
                "text": "Returns an array of all components\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Array",
                    "src": {
                      "type": "0,200,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,202,0",
                  "text": "0,199,8,35"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getActiveComponent",
                "text": "Return the currently active (focused) Component\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Active Component, or null\n",
                    "type": "Ext.Component/null",
                    "src": {
                      "text": "0,209,37,26",
                      "type": "0,209,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,210,8",
                  "name": "0,212,0",
                  "text": "0,207,8,49"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "fromElement",
                "since": "6.0.1",
                "text": "Find the Widget or Component to which the given Element belongs.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The element from which to start to find\nan owning Component.\n",
                    "type": "Ext.dom.Element/HTMLElement",
                    "src": {
                      "name": "0,290,49",
                      "text": "0,290,52,40:0,291,12,21",
                      "type": "0,290,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "limit",
                    "optional": true,
                    "text": "The element at which to stop upward\nsearching for an owning Component, or the number of Components to traverse before\ngiving up. Defaults to the document's HTML element.\n",
                    "type": "Ext.dom.Element/HTMLElement",
                    "src": {
                      "name": "0,292,50",
                      "text": "0,292,57,36:0,293,12,134",
                      "type": "0,292,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "selector",
                    "optional": true,
                    "text": "An optional <a href='#!/api/Ext.ComponentQuery'>Ext.ComponentQuery</a> selector to\nfilter the target.\n",
                    "type": "String",
                    "src": {
                      "name": "0,295,29",
                      "text": "0,295,39,51:0,296,12,19",
                      "type": "0,295,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The widget, component or <a href='#!/api/null'>null</a>.\n",
                    "type": "Ext.Widget/Ext.Component",
                    "src": {
                      "text": "0,297,47,33",
                      "type": "0,297,21"
                    }
                  }
                ],
                "src": {
                  "access": "0,299,12",
                  "name": "0,302,0",
                  "since": "0,300,19",
                  "text": "0,288,12,66"
                }
              }
            ]
          }
        ],
        "src": {
          "alternateClassNames": "0,19,0",
          "name": "0,18,0",
          "singleton": "0,16,4",
          "text": "0,2,4,824"
        }
      }
    ]
  },
  "version": 1
}