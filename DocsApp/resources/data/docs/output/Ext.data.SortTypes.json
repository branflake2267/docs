{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/data/SortTypes.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "name": "Ext.data.SortTypes",
        "singleton": true,
        "text": "This class defines a series of static methods that are used on a\n<a href='#!/api/Ext.data.field.Field'>Ext.data.Field</a> for performing sorting. The methods cast the\nunderlying values into a data type that is appropriate for sorting on\nthat particular field.  If a <a href='#!/api/Ext.data.Field-type'>Ext.data.Field#type</a> is specified,\nthe sortType will be set to a sane default if the sortType is not\nexplicitly defined on the field. The sortType will make any necessary\nmodifications to the value and return it.\n\n - **<a href='#!/api/Ext.data.SortTypes-method-asText'>asText</a>** - Removes any tags and converts the value to a string\n - **<a href='#!/api/Ext.data.SortTypes-method-asUCText'>asUCText</a>** - Removes any tags and converts the value to an uppercase string\n - **<a href='#!/api/Ext.data.SortTypes-method-asUCText'>asUCText</a>** - Converts the value to an uppercase string\n - **<a href='#!/api/Ext.data.SortTypes-method-asDate'>asDate</a>** - Converts the value into Unix epoch time\n - **<a href='#!/api/Ext.data.SortTypes-method-asFloat'>asFloat</a>** - Converts the value to a floating point number\n - **<a href='#!/api/Ext.data.SortTypes-method-asInt'>asInt</a>** - Converts the value to an integer number\n\nIt is also possible to create a custom sortType that can be used throughout\nan application.\n\n     Ext.apply(Ext.data.SortTypes, {\n         asPerson: function(person){\n             // expects an object with a first and last name property\n             return person.lastName.toUpperCase() + person.firstName.toLowerCase();\n         }\n     });\n\n     Ext.define('Employee', {\n         extend: 'Ext.data.Model',\n         fields: [{\n             name: 'person',\n             sortType: 'asPerson'\n         }, {\n             name: 'salary',\n             type: 'float' // sortType set to asFloat\n         }]\n     });\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "none",
                "text": "Default sort that does nothing\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "The value being converted\n",
                    "type": "Object",
                    "src": {
                      "name": "0,47,24",
                      "text": "0,47,26,26",
                      "type": "0,47,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The comparison value\n",
                    "type": "Object",
                    "src": {
                      "text": "0,48,25,21",
                      "type": "0,48,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,50,0",
                  "text": "0,46,8,31"
                }
              },
              {
                "$type": "method",
                "name": "asText",
                "text": "Strips all HTML tags to sort on text only\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "The value being converted\n",
                    "type": "Object",
                    "src": {
                      "name": "0,66,24",
                      "text": "0,66,26,26",
                      "type": "0,66,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The comparison value\n",
                    "type": "String",
                    "src": {
                      "text": "0,67,25,21",
                      "type": "0,67,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,69,0",
                  "text": "0,65,8,42"
                }
              },
              {
                "$type": "method",
                "name": "asUCText",
                "text": "Strips all HTML tags to sort on text only - Case insensitive\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "The value being converted\n",
                    "type": "Object",
                    "src": {
                      "name": "0,76,24",
                      "text": "0,76,26,26",
                      "type": "0,76,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The comparison value\n",
                    "type": "String",
                    "src": {
                      "text": "0,77,25,21",
                      "type": "0,77,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,79,0",
                  "text": "0,75,8,61"
                }
              },
              {
                "$type": "method",
                "name": "asUCString",
                "text": "Case insensitive string\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "The value being converted\n",
                    "type": "Object",
                    "src": {
                      "name": "0,86,24",
                      "text": "0,86,26,26",
                      "type": "0,86,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The comparison value\n",
                    "type": "String",
                    "src": {
                      "text": "0,87,25,21",
                      "type": "0,87,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,89,0",
                  "text": "0,85,8,24"
                }
              },
              {
                "$type": "method",
                "name": "asDate",
                "text": "Date sorting\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "The value being converted\n",
                    "type": "Object",
                    "src": {
                      "name": "0,96,24",
                      "text": "0,96,26,26",
                      "type": "0,96,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The comparison value\n",
                    "type": "Number",
                    "src": {
                      "text": "0,97,25,21",
                      "type": "0,97,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,99,0",
                  "text": "0,95,8,13"
                }
              },
              {
                "$type": "method",
                "name": "asFloat",
                "text": "Float sorting\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "The value being converted\n",
                    "type": "Object",
                    "src": {
                      "name": "0,113,24",
                      "text": "0,113,26,26",
                      "type": "0,113,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The comparison value\n",
                    "type": "Number",
                    "src": {
                      "text": "0,114,25,21",
                      "type": "0,114,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,116,0",
                  "text": "0,112,8,14"
                }
              },
              {
                "$type": "method",
                "name": "asInt",
                "text": "Integer sorting\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "The value being converted\n",
                    "type": "Object",
                    "src": {
                      "name": "0,123,24",
                      "text": "0,123,26,26",
                      "type": "0,123,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The comparison value\n",
                    "type": "Number",
                    "src": {
                      "text": "0,124,25,21",
                      "type": "0,124,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,126,0",
                  "text": "0,122,8,16"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "stripCommasRe",
                "text": "The regular expression used to strip commas\n",
                "type": "RegExp",
                "src": {
                  "name": "0,56,0",
                  "text": "0,53,8,44",
                  "type": "0,54,19"
                }
              },
              {
                "$type": "property",
                "name": "stripTagsRE",
                "text": "The regular expression used to strip tags\n",
                "type": "RegExp",
                "src": {
                  "name": "0,62,0",
                  "text": "0,59,8,42",
                  "type": "0,60,19"
                }
              }
            ]
          }
        ],
        "src": {
          "name": "0,40,0",
          "singleton": "0,38,4",
          "text": "0,2,4,1458"
        }
      }
    ]
  },
  "version": 1
}