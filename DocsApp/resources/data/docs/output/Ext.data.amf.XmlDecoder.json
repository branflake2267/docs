{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/amf/src/data/amf/XmlDecoder.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "data.amf.xmldecoder",
        "name": "Ext.data.amf.XmlDecoder",
        "text": "This class parses an XML-based AMFX message and returns the deserialized\nobjects. You should not need to use this class directly. It's mostly used by\nthe AMFX Direct implementation.\nTo decode a message, first construct a Decoder:\n\n     decoder = Ext.create('Ext.data.amf.XmlDecoder');\n\nThen ask it to read in the message :\n\n    resp = decoder.readAmfxMessage(str);\n\nFor more information on working with AMF data please refer to the\n[AMF Guide](#/guide/amf).\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "constructor",
                "text": "Creates new encoder.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "text": "Configuration options\n",
                    "type": "Object",
                    "src": {
                      "name": "0,84,24",
                      "text": "0,84,31,22",
                      "type": "0,84,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,86,0",
                  "text": "0,83,8,21"
                }
              },
              {
                "$type": "method",
                "name": "clear",
                "text": "Clears the accumulated data and reference tables\n",
                "src": {
                  "name": "0,94,0",
                  "text": "0,92,8,49"
                }
              },
              {
                "$type": "method",
                "name": "readAmfxMessage",
                "text": "Reads and returns a decoded AMFX packet.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "xml",
                    "text": "the xml of the message\n",
                    "type": "String",
                    "src": {
                      "name": "0,103,24",
                      "text": "0,103,28,23",
                      "type": "0,103,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the response object containing the message\n",
                    "type": "Object",
                    "src": {
                      "text": "0,104,25,43",
                      "type": "0,104,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,106,0",
                  "text": "0,102,8,41"
                }
              },
              {
                "$type": "method",
                "name": "readValue",
                "text": "Parses an HTML element returning the appropriate JavaScript value from the AMFX data.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "The node to parse\n",
                    "type": "HTMLElement",
                    "src": {
                      "name": "0,136,29",
                      "text": "0,136,34,18",
                      "type": "0,136,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "a JavaScript object or value\n",
                    "type": "Object",
                    "src": {
                      "text": "0,137,25,29",
                      "type": "0,137,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,139,0",
                  "text": "0,135,8,86"
                }
              },
              {
                "$type": "method",
                "name": "readString",
                "text": "Reads a string or string reference and return the value\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "the node containing a string object\n",
                    "type": "HTMLElement/XMLElement",
                    "src": {
                      "name": "0,185,40",
                      "text": "0,185,45,36",
                      "type": "0,185,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the parsed string\n",
                    "type": "String",
                    "src": {
                      "text": "0,186,25,18",
                      "type": "0,186,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,188,0",
                  "text": "0,184,8,56"
                }
              },
              {
                "$type": "method",
                "name": "readTraits",
                "text": "Parses and returns an ordered list of trait names\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "the traits node from the XML doc\n",
                    "type": "HTMLElement/XMLElement",
                    "src": {
                      "name": "0,200,40",
                      "text": "0,200,45,33",
                      "type": "0,200,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "an array of ordered trait names or null if it's an externalizable object\n",
                    "type": "Array",
                    "src": {
                      "text": "0,201,24,73",
                      "type": "0,201,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,203,0",
                  "text": "0,199,8,50"
                }
              },
              {
                "$type": "method",
                "name": "readObjectRef",
                "text": "Parses and return an object / array / dictionary / date from reference\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "the ref node\n",
                    "type": "HTMLElement/XMLElement",
                    "src": {
                      "name": "0,241,40",
                      "text": "0,241,45,13",
                      "type": "0,241,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the previously instantiated object referred to by the ref node\n",
                    "type": "Object",
                    "src": {
                      "text": "0,242,25,63",
                      "type": "0,242,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,244,0",
                  "text": "0,240,8,71"
                }
              },
              {
                "$type": "method",
                "name": "readObject",
                "text": "Parses and returns an AMFX object.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "the `<object>` node to parse\n",
                    "type": "HTMLElement/XMLElement",
                    "src": {
                      "name": "0,252,40",
                      "text": "0,252,45,29",
                      "type": "0,252,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the deserialized object\n",
                    "type": "Object",
                    "src": {
                      "text": "0,253,25,24",
                      "type": "0,253,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,255,0",
                  "text": "0,251,8,35"
                }
              },
              {
                "$type": "method",
                "name": "readArray",
                "text": "Parses and returns an AMFX array.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "the array node\n",
                    "type": "HTMLElement/XMLElement",
                    "src": {
                      "name": "0,313,40",
                      "text": "0,313,45,15",
                      "type": "0,313,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the deserialized array\n",
                    "type": "Array",
                    "src": {
                      "text": "0,314,24,23",
                      "type": "0,314,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,316,0",
                  "text": "0,312,8,34"
                }
              },
              {
                "$type": "method",
                "name": "readDictionary",
                "text": "Parses and returns an AMFX dictionary.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "the `<dictionary>` node\n",
                    "type": "HTMLElement/XMLElement",
                    "src": {
                      "name": "0,367,40",
                      "text": "0,367,45,24",
                      "type": "0,367,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "a javascript object with the dictionary value-pair elements\n",
                    "type": "Object",
                    "src": {
                      "text": "0,368,25,60",
                      "type": "0,368,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,370,0",
                  "text": "0,366,8,39"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "convertObjectWithSourceField",
                "text": "Converts externalizable flex objects with a source array to a regular array.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "src": {
                      "name": "0,414,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,412,8",
                  "name": "0,414,0",
                  "text": "0,411,8,77"
                }
              }
            ]
          },
          {
            "$type": "static-methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "readXml",
                "static": true,
                "text": "Parses an xml string and returns an xml document\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "xml",
                    "type": "String",
                    "src": {
                      "name": "0,27,28",
                      "type": "0,27,20"
                    }
                  }
                ],
                "src": {
                  "access": "0,26,12",
                  "name": "0,29,0",
                  "static": "0,21,-1",
                  "text": "0,25,12,49"
                }
              },
              {
                "$type": "method",
                "name": "readByteArray",
                "static": true,
                "text": "parses a node containing a byte array in hexadecimal format, returning the reconstructed array.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "the node\n",
                    "type": "HTMLElement/XMLElement",
                    "src": {
                      "name": "0,44,44",
                      "text": "0,44,49,9",
                      "type": "0,44,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "a byte array\n",
                    "type": "Array",
                    "src": {
                      "text": "0,45,28,13",
                      "type": "0,45,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,47,0",
                  "static": "0,21,-1",
                  "text": "0,43,12,96"
                }
              },
              {
                "$type": "method",
                "name": "readAMF3Value",
                "static": true,
                "text": "Deserializes an AMF3 binary object from a byte array\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "bytes",
                    "text": "the byte array containing one AMF3-encoded value\n",
                    "type": "Array",
                    "src": {
                      "name": "0,60,27",
                      "text": "0,60,33,49",
                      "type": "0,60,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the decoded value\n",
                    "type": "Object",
                    "src": {
                      "text": "0,61,29,18",
                      "type": "0,61,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,63,0",
                  "static": "0,21,-1",
                  "text": "0,59,12,53"
                }
              },
              {
                "$type": "method",
                "name": "decodeTidFromFlexUID",
                "static": true,
                "text": "Accepts Flex-style UID and decodes the number in the first four bytes (8 hex digits) of data.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "messageId",
                    "text": "the message ID\n",
                    "type": "String",
                    "src": {
                      "name": "0,71,28",
                      "text": "0,71,38,15",
                      "type": "0,71,20"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "the transaction ID\n",
                    "type": "Number",
                    "src": {
                      "text": "0,72,29,19",
                      "type": "0,72,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,74,0",
                  "static": "0,21,-1",
                  "text": "0,70,12,94"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,20,0",
          "name": "0,3,11",
          "text": "0,4,4,458"
        }
      }
    ]
  },
  "version": 1
}