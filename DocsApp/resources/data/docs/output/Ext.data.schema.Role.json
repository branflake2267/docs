{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/data/schema/Role.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "access": "private",
        "name": "Ext.data.schema.Role",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "processLoad",
                "text": "Exclude any locally modified records that don't belong in the store. Include locally\nmodified records that should be in the store. Also correct any foreign keys that\nneed to be updated.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "store",
                    "text": "The store.\n",
                    "type": "Ext.data.Store",
                    "src": {
                      "name": "0,95,32",
                      "text": "0,95,38,11",
                      "type": "0,95,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "associatedEntity",
                    "text": "The entity that owns the records.\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,96,32",
                      "text": "0,96,49,34",
                      "type": "0,96,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "records",
                    "text": "The records to check.\n",
                    "type": "Ext.data.Model[]",
                    "src": {
                      "name": "0,97,34",
                      "text": "0,97,42,22",
                      "type": "0,97,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "session",
                    "text": "The session holding the records\n",
                    "type": "Ext.data.Session",
                    "src": {
                      "name": "0,98,34",
                      "text": "0,98,42,32",
                      "type": "0,98,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The corrected set of records.\n",
                    "type": "Ext.data.Model[]",
                    "src": {
                      "text": "0,99,35,30",
                      "type": "0,99,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,101,8",
                  "name": "0,103,0",
                  "text": "0,91,8,187"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "checkMembership",
                "text": "\nCheck whether a record belongs to any stores when it is added to the session.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "session",
                    "text": "The session\n",
                    "type": "Ext.data.Session",
                    "src": {
                      "name": "0,112,34",
                      "text": "0,112,42,12",
                      "type": "0,112,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "record",
                    "text": "The model being added to the session\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,113,32",
                      "text": "0,113,39,37",
                      "type": "0,113,16"
                    }
                  }
                ],
                "src": {
                  "access": "0,114,8",
                  "name": "0,116,0",
                  "text": "0,109,8,80"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "adoptAssociated",
                "text": "Adopt the associated items when a record is adopted.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "record",
                    "text": "The record being adopted.\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,120,32",
                      "text": "0,120,39,26",
                      "type": "0,120,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "session",
                    "text": "The session being adopted into\n",
                    "type": "Ext.data.Session",
                    "src": {
                      "name": "0,121,34",
                      "text": "0,121,42,31",
                      "type": "0,121,16"
                    }
                  }
                ],
                "src": {
                  "access": "0,123,8",
                  "name": "0,125,0",
                  "text": "0,119,8,53"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getAssociatedItem",
                "text": "Gets the store/record associated with this role from an existing record.\nWill only return if the value is loaded.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "rec",
                    "text": "The record\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,293,32",
                      "text": "0,293,36,11",
                      "type": "0,293,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The associated item. <a href='#!/api/null'>null</a> if not loaded.\n",
                    "type": "Ext.data.Model/Ext.data.Store",
                    "src": {
                      "text": "0,295,48,43",
                      "type": "0,295,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,296,8",
                  "name": "0,298,0",
                  "text": "0,290,8,115"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "association",
                "readonly": true,
                "type": "Ext.data.schema.Association",
                "src": {
                  "name": "0,6,48",
                  "readonly": "0,7,8",
                  "type": "0,6,19"
                }
              },
              {
                "$type": "property",
                "name": "left",
                "readonly": true,
                "type": "Boolean",
                "src": {
                  "name": "0,13,28",
                  "readonly": "0,14,8",
                  "type": "0,13,19"
                }
              },
              {
                "$type": "property",
                "name": "owner",
                "readonly": true,
                "type": "Boolean",
                "src": {
                  "name": "0,19,28",
                  "readonly": "0,20,8",
                  "type": "0,19,19"
                }
              },
              {
                "$type": "property",
                "name": "side",
                "readonly": true,
                "type": "String",
                "src": {
                  "name": "0,25,27",
                  "readonly": "0,26,8",
                  "type": "0,25,19"
                }
              },
              {
                "$type": "property",
                "name": "isMany",
                "readonly": true,
                "type": "Boolean",
                "src": {
                  "name": "0,31,28",
                  "readonly": "0,32,8",
                  "type": "0,31,19"
                }
              },
              {
                "$type": "property",
                "name": "cls",
                "readonly": true,
                "text": "The <a href='#!/api/Ext.data.Model'>Ext.data.Model</a> derived class.\n",
                "type": "Ext.Class",
                "src": {
                  "name": "0,37,30",
                  "readonly": "0,39,8",
                  "text": "0,38,8,36",
                  "type": "0,37,19"
                }
              },
              {
                "$type": "property",
                "name": "inverse",
                "readonly": true,
                "type": "Ext.data.schema.Role",
                "src": {
                  "name": "0,43,41",
                  "readonly": "0,44,8",
                  "type": "0,43,19"
                }
              },
              {
                "$type": "property",
                "name": "type",
                "readonly": true,
                "text": "The <a href='#!/api/Ext.data.Model-property-entityName'>Ext.data.Model#entityName</a> derived class.\n",
                "type": "String",
                "src": {
                  "name": "0,48,27",
                  "readonly": "0,50,8",
                  "text": "0,49,8,55",
                  "type": "0,48,19"
                }
              },
              {
                "$type": "property",
                "name": "role",
                "readonly": true,
                "type": "String",
                "src": {
                  "name": "0,54,27",
                  "readonly": "0,55,8",
                  "type": "0,54,19"
                }
              }
            ]
          }
        ],
        "src": {
          "access": "0,2,4",
          "name": "0,4,0"
        }
      }
    ]
  },
  "version": 1
}