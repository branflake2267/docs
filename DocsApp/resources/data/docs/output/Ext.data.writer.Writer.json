{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/data/writer/Writer.js",
    "../../../ext/packages/core/src/mixin/Factoryable.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "writer.base",
        "alternateClassNames": "Ext.data.DataWriter,Ext.data.Writer",
        "mixins": "Ext.mixin.Factoryable",
        "name": "Ext.data.writer.Writer",
        "text": "Base Writer class used by most subclasses of <a href='#!/api/Ext.data.proxy.Server'>Ext.data.proxy.Server</a>. This class\nis responsible for taking a set of <a href='#!/api/Ext.data.operation.Operation'>Ext.data.operation.Operation</a> objects and a\n<a href='#!/api/Ext.data.Request'>Ext.data.Request</a> object and modifying that request based on the Operations.\n\nFor example a Ext.data.writer.Json would format the Operations and their\n<a href='#!/api/Ext.data.Model'>Ext.data.Model</a> instances based on the config options passed to the JsonWriter's\nconstructor.\n\nWriters are not needed for any kind of local storage - whether via a\n<a href='#!/api/Ext.data.proxy.WebStorage'>Ext.data.proxy.WebStorage</a> (see\n<a href='#!/api/Ext.data.proxy.LocalStorage'>Ext.data.proxy.LocalStorage</a> and\n<a href='#!/api/Ext.data.proxy.SessionStorage'>Ext.data.proxy.SessionStorage</a>)\nor just in memory via a <a href='#!/api/Ext.data.proxy.Memory'>Ext.data.proxy.Memory</a>.\n\n# Dates\n\nBefore sending dates to the server, they can be formatted using an <a href='#!/api/Ext.Date'>Ext.Date</a>\nformat. These formats can be specified both on the field and the writer itself. In terms\nof precedence, from highest to lowest:\n\n- <a href='#!/api/Ext.data.writer.Writer-cfg-dateFormat'>dateFormat</a> The writer <a href='#!/api/Ext.data.writer.Writer-cfg-dateFormat'>dateFormat</a> will always have the\n  highest precedence.\n- <a href='#!/api/Ext.data.field.Date-cfg-dateWriteFormat'>Ext.data.field.Date#dateWriteFormat</a> The `dateWriteFormat` given to the field\n  instance. This is handled by <a href='#!/api/Ext.data.field.Date-method-serialize'>Ext.data.field.Date#method-serialize</a>.\n- <a href='#!/api/Ext.data.field.Date-cfg-dateFormat'>Ext.data.field.Date#dateFormat</a> This is handled by the field's\n  `serialize` method.\n- <a href='#!/api/Ext.data.field.Date-cfg-dateReadFormat'>Ext.data.field.Date#dateReadFormat</a> Also handled by the\n  field's `serialize` method.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "allDataOptions",
                "text": "This object contains the options passed to <a href='#!/api/Ext.data.Model-method-getData'>Ext.data.Model#getData</a> when\nwriting <a href='#!/api/Ext.data.Model-property-phantom'>Ext.data.Model#phantom</a> records or when <a href='#!/api/Ext.data.writer.Writer-cfg-writeAllFields'>writeAllFields</a> is set\nto `true`.\n\n*NOTE:* The `serialize` option cannot be used here.\n",
                "type": "Object",
                "src": {
                  "name": "0,107,26",
                  "text": "0,108,12,226",
                  "type": "0,107,18"
                }
              },
              {
                "$type": "property",
                "name": "clientIdProperty",
                "text": "When specified this property causes the <a href='#!/api/Ext.data.Model-cfg-idProperty'>Ext.data.Model#idProperty</a> of\nnewly created records to be sent to the server as this name instead of the\nvalue of the `idProperty`.\n\nFor example, by default, the following code:\n\n     Ext.define('Person', {\n         idProperty: 'id',  // this is the default value (for clarity)\n\n         fields: [ 'name' ]\n     });\n\n     var person = new Person({\n         // no id provided, so one is generated\n         name: 'Clark Kent'\n     });\n\nWill send this to the server:\n\n     {\n         id: 'Person-1',\n         name: 'Clark Kent'\n     }\n\nThis can be an issue if the server expects an integer for the \"id\" property.\nYou can use <a href='#!/api/Ext.data.Model-cfg-identifier'>Ext.data.Model#identifier</a> to produce identifiers that\nthe server would recognize or use this config to send the client's id in a\ndifferent property.\n\n     Ext.define('Person', {\n         idProperty: 'id',  // this is the default value (for clarity)\n\n         proxy: {\n             writer: {\n                 clientIdProperty: 'clientId'\n             }\n         },\n\n         fields: [ 'name' ]\n     });\n\nGiven the above, the server is sent this data now:\n\n     {\n         clientId: 'Person-1',\n         name: 'Clark Kent'\n     }\n\nWhile this config provides the behavior of <a href='#!/api/Ext.data.Model-cfg-clientIdProperty'>Ext.data.Model#clientIdProperty</a>\nfrom previous releases, this property is not as useful as a suitable\n<a href='#!/api/Ext.data.Model-cfg-identifier'>Ext.data.Model#identifier</a> due to id's appearing in foreign-key fields\nand in <a href='#!/api/Ext.data.Model-cfg-manyToMany'>Ext.data.Model#manyToMany</a> associations.\n\nSee <a href='#!/api/Ext.data.Model-cfg-identifier'>Ext.data.Model#identifier</a> for more on id generation.\n",
                "type": "String",
                "src": {
                  "name": "0,48,26",
                  "text": "0,49,12,1569",
                  "type": "0,48,18"
                }
              },
              {
                "$type": "property",
                "name": "dateFormat",
                "text": "This is used for each field of type date in the model to format the value before\nit is sent to the server.\n",
                "type": "String",
                "src": {
                  "name": "0,151,26",
                  "text": "0,152,12,107",
                  "type": "0,151,18"
                }
              },
              {
                "$type": "property",
                "name": "nameProperty",
                "text": "This property is used to read the key for each value that will be sent to the\nserver.\n\nFor example:\n\n    Ext.define('Person', {\n        extend: 'Ext.data.Model',\n        fields: [{\n            name: 'first',\n            mapping: 'firstName'\n        }, {\n            name: 'last',\n            mapping: 'lastName'\n        }, {\n            name: 'age'\n        }]\n    });\n\n    new Ext.data.writer.Writer({\n        nameProperty: 'mapping'\n    });\n\n    // This will be sent to the server\n    {\n        firstName: 'first name value',\n        lastName: 'last name value',\n        age: 1\n    }\n\nIf the value is not present, the field name will always be used.\n",
                "type": "String",
                "src": {
                  "name": "0,158,26",
                  "text": "0,159,12,651",
                  "type": "0,158,18"
                }
              },
              {
                "$type": "property",
                "name": "partialDataOptions",
                "text": "This object contains the options passed to <a href='#!/api/Ext.data.Model-method-getData'>Ext.data.Model#getData</a> when\nwriting non <a href='#!/api/Ext.data.Model-property-phantom'>Ext.data.Model#phantom</a> records or when <a href='#!/api/Ext.data.writer.Writer-cfg-writeAllFields'>writeAllFields</a> is\nset to `false`.\n\n*NOTE:* The `serialize` option cannot be used here.\n",
                "type": "Object",
                "src": {
                  "name": "0,119,26",
                  "text": "0,120,12,231",
                  "type": "0,119,18"
                }
              },
              {
                "$type": "property",
                "name": "transform",
                "optional": true,
                "text": "If a transform function is set, it will be invoked just before <a href='#!/api/Ext.data.writer.Writer-method-writeRecords'>writeRecords</a>\nexecutes. It is passed the unserialized data object and the <a href='#!/api/Ext.data.Request'>Ext.data.Request</a>\nobject. The transform function returns a data object, which can be a modified version of the original\ndata object, or a completely new data object. The transform can be a function, or an object\nwith a 'fn' key and an optional 'scope' key. Example usage:\n\n    Ext.create('Ext.data.Store', {\n        model: 'User',\n        proxy: {\n            type: 'ajax',\n            url : 'users.json',\n            writer: {\n                type: 'json',\n                transform: {\n                    fn: function(data, request) {\n                        // do some manipulation of the unserialized data object\n                        return data;\n                    },\n                    scope: this\n                }\n            }\n        },\n    });\n",
                "type": "Function/Object",
                "src": {
                  "name": "0,207,36",
                  "text": "0,208,12,921",
                  "type": "0,207,18"
                }
              },
              {
                "$type": "property",
                "name": "writeAllFields",
                "text": "`true` to write all fields from the record to the\nserver. If set to `false` it will only send the fields that were modified. Note\nthat any fields that have <a href='#!/api/Ext.data.field.Field-cfg-persist'>Ext.data.field.Field#persist</a> set to `false`\nwill still be ignored while those with <a href='#!/api/Ext.data.field.Field-cfg-critical'>Ext.data.field.Field#critical</a>\nset to `true` will be included.\n\nThe exact set of fields written is determined by <a href='#!/api/Ext.data.writer.Writer-cfg-allDataOptions'>allDataOptions</a> (when `true`)\nor <a href='#!/api/Ext.data.writer.Writer-cfg-partialDataOptions'>partialDataOptions</a> (when `false`). This option is ignored and treated as\n`true` when writing <a href='#!/api/Ext.data.Model-property-phantom'>Ext.data.Model#phantom</a> records.\n\nIt is seldom a good idea to use this config. Rather use <a href='#!/api/Ext.data.writer.Writer-cfg-allDataOptions'>allDataOptions</a> or\n<a href='#!/api/Ext.data.writer.Writer-cfg-partialDataOptions'>partialDataOptions</a> to control what fields are sent for records based on their\n<a href='#!/api/Ext.data.Model-property-phantom'>Ext.data.Model#phantom</a> state.\n\nIn the previous release, this was default `true`.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,132,27",
                  "text": "0,132,42,50:0,133,12,740",
                  "type": "0,132,18"
                }
              },
              {
                "$type": "property",
                "name": "writeRecordId",
                "optional": true,
                "text": "By default, each record's id is always included in the output for non-phantom\nrecords since in most cases the id will be required on the server to process\nthe record action. This is helpful since the id will normally not be modified,\nand so would not be sent to the server unless <a href='#!/api/Ext.data.writer.Writer-cfg-writeAllFields'>writeAllFields</a> was\nexplicitly enabled.\n\nHowever, there are cases where it is not desirable for the record id to be passed\nin the data directly. For example, when using a RESTful API the record id would\ntypically be appended to the url instead.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,193,28",
                  "text": "0,194,12,533",
                  "type": "0,193,18"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "constructor",
                "text": "Creates new Writer.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "optional": true,
                    "text": "Config object.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,244,25",
                      "text": "0,244,33,15",
                      "type": "0,244,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,246,0",
                  "text": "0,243,8,20"
                }
              },
              {
                "$type": "method",
                "name": "getRecordData",
                "text": "Formats the data for each record before sending it to the server. This method should\nbe overridden to format the data in a way that differs from the default.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "record",
                    "text": "The record that we are writing to the server.\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,294,32",
                      "text": "0,294,39,46",
                      "type": "0,294,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "operation",
                    "optional": true,
                    "text": "An operation object.\n",
                    "type": "Ext.data.operation.Operation",
                    "src": {
                      "name": "0,295,47",
                      "text": "0,295,58,21",
                      "type": "0,295,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "An object literal of name/value keys to be written to the server.\nBy default this method returns the data property on the record.\n",
                    "type": "Object",
                    "src": {
                      "text": "0,296,25,66:0,297,8,64",
                      "type": "0,296,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,299,0",
                  "text": "0,291,8,159"
                }
              },
              {
                "$type": "method",
                "name": "write",
                "text": "Prepares a Proxy's Ext.data.Request object.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "request",
                    "text": "The request object.\n",
                    "type": "Ext.data.Request",
                    "src": {
                      "name": "0,262,34",
                      "text": "0,262,42,20",
                      "type": "0,262,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The modified request object.\n",
                    "type": "Ext.data.Request",
                    "src": {
                      "text": "0,263,35,29",
                      "type": "0,263,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,265,0",
                  "text": "0,261,8,44"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "writeRecords",
                "text": "\nWrite the record data to the request in the appropriate format.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "request",
                    "text": "The request.\n",
                    "type": "Ext.data.Request",
                    "src": {
                      "name": "0,284,34",
                      "text": "0,284,42,13",
                      "type": "0,284,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "data",
                    "text": "An array of objects containing data.\n",
                    "type": "Array",
                    "src": {
                      "name": "0,285,23",
                      "text": "0,285,28,37",
                      "type": "0,285,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The request.\n",
                    "type": "Ext.data.Request",
                    "src": {
                      "text": "0,286,35,13",
                      "type": "0,286,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,283,8",
                  "name": "0,288,0",
                  "text": "0,281,8,65"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "factoryConfig",
                "optional": true,
                "text": "If this property is specified by the target class of this mixin its properties are\nused to configure the created <a href='#!/api/Ext.Factory'>Ext.Factory</a>.\n",
                "type": "Object",
                "src": {
                  "name": "1,295,28",
                  "text": "1,296,8,128",
                  "type": "1,295,19"
                }
              },
              {
                "$type": "property",
                "name": "isWriter",
                "text": "`true` in this class to identify an object as an instantiated Writer, or subclass thereof.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,237,28",
                  "text": "0,238,8,92",
                  "type": "0,237,19"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,36,0",
          "alternateClassNames": "0,42,0,0:0,43,0,0",
          "mixins": "0,33,0",
          "name": "0,31,0",
          "text": "0,2,4,1454"
        }
      }
    ]
  },
  "version": 1
}