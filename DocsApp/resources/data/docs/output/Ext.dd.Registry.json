{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/dd/Registry.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "name": "Ext.dd.Registry",
        "singleton": true,
        "text": "Provides easy access to all drag drop components that are registered on a page. Items can be retrieved either\ndirectly by DOM node id, or by passing in the drag drop event that occurred and looking up the event target.\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "register",
                "text": "Registers a drag drop element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "element",
                    "text": "The id or DOM node to register\n",
                    "type": "String/HTMLElement",
                    "src": {
                      "name": "0,28,36",
                      "text": "0,28,44,31",
                      "type": "0,28,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "data",
                    "text": "An custom data object that will be passed between the elements that are involved in drag\ndrop operations. You can populate this object with any arbitrary properties that your own code knows how to\ninterpret, plus there are some specific properties known to the Registry that should be populated in the data\nobject (if applicable):\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "handles",
                        "text": "Array of DOM nodes that trigger dragging for the element being registered.\n",
                        "type": "HTMLElement[]",
                        "src": {
                          "name": "0,33,36",
                          "text": "0,33,44,75",
                          "type": "0,33,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "isHandle",
                        "text": "True if the element passed in triggers dragging itself, else false.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,34,30",
                          "text": "0,34,39,68",
                          "type": "0,34,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,29,24",
                      "text": "0,29,29,89:0,30,8,242",
                      "type": "0,29,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,36,0",
                  "text": "0,26,8,32"
                }
              },
              {
                "$type": "method",
                "name": "unregister",
                "text": "Unregister a drag drop element\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "element",
                    "text": "The id or DOM node to unregister\n",
                    "type": "String/HTMLElement",
                    "src": {
                      "name": "0,57,36",
                      "text": "0,57,44,33",
                      "type": "0,57,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,59,0",
                  "text": "0,56,8,31"
                }
              },
              {
                "$type": "method",
                "name": "getHandle",
                "text": "Returns the handle registered for a DOM Node by id\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "text": "The DOM node or id to look up\n",
                    "type": "String/HTMLElement",
                    "src": {
                      "name": "0,76,36",
                      "text": "0,76,39,30",
                      "type": "0,76,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "handle The custom handle data\n",
                    "type": "Object",
                    "src": {
                      "text": "0,77,25,30",
                      "type": "0,77,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,79,0",
                  "text": "0,75,8,51"
                }
              },
              {
                "$type": "method",
                "name": "getHandleFromEvent",
                "text": "Returns the handle that is registered for the DOM node that is the target of the event\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "text": "The event\n",
                    "type": "Event",
                    "src": {
                      "name": "0,88,23",
                      "text": "0,88,25,10",
                      "type": "0,88,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "handle The custom handle data\n",
                    "type": "Object",
                    "src": {
                      "text": "0,89,25,30",
                      "type": "0,89,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,91,0",
                  "text": "0,87,8,87"
                }
              },
              {
                "$type": "method",
                "name": "getTarget",
                "text": "Returns a custom data object that is registered for a DOM node by id\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "text": "The DOM node or id to look up\n",
                    "type": "String/HTMLElement",
                    "src": {
                      "name": "0,98,36",
                      "text": "0,98,39,30",
                      "type": "0,98,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "data The custom data\n",
                    "type": "Object",
                    "src": {
                      "text": "0,99,25,21",
                      "type": "0,99,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,101,0",
                  "text": "0,97,8,69"
                }
              },
              {
                "$type": "method",
                "name": "getTargetFromEvent",
                "text": "Returns a custom data object that is registered for the DOM node that is the target of the event\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "text": "The event\n",
                    "type": "Event",
                    "src": {
                      "name": "0,110,23",
                      "text": "0,110,25,10",
                      "type": "0,110,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "data The custom data\n",
                    "type": "Object",
                    "src": {
                      "text": "0,111,25,21",
                      "type": "0,111,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,113,0",
                  "text": "0,109,8,97"
                }
              }
            ]
          }
        ],
        "src": {
          "name": "0,5,0",
          "singleton": "0,6,0",
          "text": "0,2,4,219"
        }
      }
    ]
  },
  "version": 1
}