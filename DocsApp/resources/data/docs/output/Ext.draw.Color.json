{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/charts/src/draw/Color.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "name": "Ext.draw.Color",
        "text": "Represents an RGB color and provides helper functions on it e.g. to get\ncolor components in HSL color space.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "lightnessFactor",
                "text": "\nThe default factor to compute the lighter or darker color.\n",
                "type": "Number",
                "src": {
                  "name": "0,21,22",
                  "text": "0,22,8,60",
                  "type": "0,21,14"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "constructor": true,
                "name": "constructor",
                "items": [
                  {
                    "$type": "param",
                    "name": "red",
                    "text": "Red component (0..255)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,29,24",
                      "text": "0,29,28,23",
                      "type": "0,29,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "green",
                    "text": "Green component (0..255)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,30,24",
                      "text": "0,30,30,25",
                      "type": "0,30,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "blue",
                    "text": "Blue component (0..255)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,31,24",
                      "text": "0,31,29,24",
                      "type": "0,31,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "alpha",
                    "optional": true,
                    "text": "(optional) Alpha component (0..1)\n",
                    "type": "Number",
                    "value": "1",
                    "src": {
                      "name": "0,32,25",
                      "text": "0,32,34,34",
                      "type": "0,32,16",
                      "value": "0,32,31"
                    }
                  }
                ],
                "src": {
                  "constructor": "0,28,8",
                  "name": "0,34,0"
                }
              },
              {
                "$type": "method",
                "name": "getGrayscale",
                "text": "Returns the gray value (0 to 255) of the color.\n\nThe gray value is calculated using the formula r*0.3 + g*0.59 + b*0.11.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number",
                    "src": {
                      "type": "0,55,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,57,0",
                  "text": "0,51,8,122"
                }
              },
              {
                "$type": "method",
                "name": "getHSL",
                "text": "Get the equivalent HSL components of the color.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number[]",
                    "src": {
                      "type": "0,64,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,66,0",
                  "text": "0,63,8,48"
                }
              },
              {
                "$type": "method",
                "name": "getHSV",
                "text": "Get the equivalent HSV components of the color.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Number[]",
                    "src": {
                      "type": "0,101,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,103,0",
                  "text": "0,100,8,48"
                }
              },
              {
                "$type": "method",
                "name": "setHSL",
                "text": "Set current color based on the specified HSL values.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "h",
                    "text": "Hue component [0..360)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,139,24",
                      "text": "0,139,26,23",
                      "type": "0,139,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "Saturation component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,140,24",
                      "text": "0,140,26,28",
                      "type": "0,140,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "l",
                    "text": "Lightness component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,141,24",
                      "text": "0,141,26,27",
                      "type": "0,141,16"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,142,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,144,0",
                  "text": "0,137,8,54"
                }
              },
              {
                "$type": "method",
                "name": "setHSV",
                "text": "Set current color based on the specified HSV values.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "h",
                    "text": "Hue component [0..360)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,194,24",
                      "text": "0,194,26,23",
                      "type": "0,194,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "Saturation component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,195,24",
                      "text": "0,195,26,28",
                      "type": "0,195,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "v",
                    "text": "Value component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,196,24",
                      "text": "0,196,26,23",
                      "type": "0,196,16"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,197,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,199,0",
                  "text": "0,192,8,54"
                }
              },
              {
                "$type": "method",
                "name": "createLighter",
                "text": "Returns a new color that is lighter than this color in the HSL color space.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "factor",
                    "optional": true,
                    "text": "Lighter factor (0..1).\n",
                    "type": "Number",
                    "value": "0.2",
                    "src": {
                      "name": "0,247,25",
                      "text": "0,247,37,23",
                      "type": "0,247,16",
                      "value": "0,247,32"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,248,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,250,0",
                  "text": "0,246,8,76"
                }
              },
              {
                "$type": "method",
                "name": "createDarker",
                "text": "Returns a new color that is darker than this color in the HSL color space.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "factor",
                    "optional": true,
                    "text": "Darker factor (0..1).\n",
                    "type": "Number",
                    "value": "0.2",
                    "src": {
                      "name": "0,261,25",
                      "text": "0,261,37,22",
                      "type": "0,261,16",
                      "value": "0,261,32"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,262,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,264,0",
                  "text": "0,260,8,75"
                }
              },
              {
                "$type": "method",
                "name": "toString",
                "text": "toString() returns a color in hex format ('#rrggbb') if the alpha is 1. If the\nalpha is less than one, toString() returns the color in RGBA format ('rgba(255,0,0,0.3)').\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "0,275,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,277,0",
                  "text": "0,272,8,171"
                }
              },
              {
                "$type": "method",
                "name": "toHex",
                "text": "Convert a color to hexadecimal format.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "color",
                    "text": "The color value (i.e 'rgb(255, 255, 255)', 'color: #ffffff').\nCan also be an Array, in this case the function handles the first member.\n",
                    "type": "String/Array",
                    "src": {
                      "name": "0,307,30",
                      "text": "0,307,36,62:0,308,8,74",
                      "type": "0,307,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The color in hexadecimal format.\n",
                    "type": "String",
                    "src": {
                      "text": "0,309,25,33",
                      "type": "0,309,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,311,0",
                  "text": "0,305,8,40"
                }
              },
              {
                "$type": "method",
                "name": "setFromString",
                "text": "Parse the string and set the current color.\n\nSupported formats:\n\n+ '#rrggbb'\n+ '#rgb', 'rgb(r,g,b)'\n+ 'rgba(r,g,b,a)'\n+ supported CSS color names (e.g., 'black', 'white', etc).\n\nIf the string is not recognized, setFromString returns rgba(0,0,0,0).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "Color",
                    "text": "Color as string.\n",
                    "type": "String",
                    "src": {
                      "name": "0,347,24",
                      "text": "0,347,30,17",
                      "type": "0,347,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "src": {
                      "text": "0,348,16,5"
                    }
                  }
                ],
                "src": {
                  "name": "0,350,0",
                  "text": "0,336,8,249"
                }
              }
            ]
          },
          {
            "$type": "static-methods",
            "items": [
              {
                "$type": "method",
                "name": "fly",
                "static": true,
                "text": "Returns a flyweight instance of Ext.draw.Color.\n\nCan be called with either a CSS color string or with separate\narguments for red, green, blue, alpha.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "red",
                    "text": "Red component (0..255) or CSS color string.\n",
                    "type": "Number/String",
                    "src": {
                      "name": "0,405,35",
                      "text": "0,405,39,44",
                      "type": "0,405,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "green",
                    "optional": true,
                    "text": "Green component (0..255)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,406,29",
                      "text": "0,406,36,25",
                      "type": "0,406,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "blue",
                    "optional": true,
                    "text": "Blue component (0..255)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,407,29",
                      "text": "0,407,35,24",
                      "type": "0,407,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "alpha",
                    "optional": true,
                    "text": "Alpha component (0..1)\n",
                    "type": "Number",
                    "value": "1",
                    "src": {
                      "name": "0,408,29",
                      "text": "0,408,38,23",
                      "type": "0,408,20",
                      "value": "0,408,35"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,409,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,412,0",
                  "static": "0,410,12",
                  "text": "0,400,12,151"
                }
              },
              {
                "$type": "method",
                "name": "fromHSL",
                "static": true,
                "text": "Create a new color based on the specified HSL values.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "h",
                    "text": "Hue component [0..360)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,574,28",
                      "text": "0,574,30,23",
                      "type": "0,574,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "Saturation component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,575,28",
                      "text": "0,575,30,28",
                      "type": "0,575,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "l",
                    "text": "Lightness component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,576,28",
                      "text": "0,576,30,27",
                      "type": "0,576,20"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,577,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,580,0",
                  "static": "0,578,12",
                  "text": "0,572,12,55"
                }
              },
              {
                "$type": "method",
                "name": "fromHSV",
                "static": true,
                "text": "Create a new color based on the specified HSV values.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "h",
                    "text": "Hue component [0..360)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,587,28",
                      "text": "0,587,30,23",
                      "type": "0,587,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "s",
                    "text": "Saturation component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,588,28",
                      "text": "0,588,30,28",
                      "type": "0,588,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "l",
                    "text": "Value component [0..1]\n",
                    "type": "Number",
                    "src": {
                      "name": "0,589,28",
                      "text": "0,589,30,23",
                      "type": "0,589,20"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,590,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,593,0",
                  "static": "0,591,12",
                  "text": "0,585,12,55"
                }
              },
              {
                "$type": "method",
                "name": "fromString",
                "static": true,
                "text": "Parse the string and create a new color.\n\nSupported formats:\n\n+ '#rrggbb'\n+ '#rgb', 'rgb(r,g,b)'\n+ 'rgba(r,g,b,a)'\n+ supported CSS color names (e.g., 'black', 'white', etc).\n\nIf the string is not recognized, fromString returns rgba(0,0,0,0).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "Color",
                    "text": "Color as string.\n",
                    "type": "String",
                    "src": {
                      "name": "0,609,28",
                      "text": "0,609,34,17",
                      "type": "0,609,20"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,610,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,613,0",
                  "static": "0,611,12",
                  "text": "0,598,12,243"
                }
              },
              {
                "$type": "method",
                "name": "create",
                "static": true,
                "text": "Convenience method for creating a color.\n\nCan be called with several different combinations of arguments:\n\n    // Ext.draw.Color is returned unchanged.\n    Ext.draw.Color.create(new Ext.draw.color(255, 0, 0, 0));\n\n    // CSS color string.\n    Ext.draw.Color.create(\"red\");\n\n    // Array of red, green, blue, alpha\n    Ext.draw.Color.create([255, 0, 0, 0]);\n\n    // Separate arguments of red, green, blue, alpha\n    Ext.draw.Color.create(255, 0, 0, 0);\n\n    // Returns black when no arguments given.\n    Ext.draw.Color.create();\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "red",
                    "optional": true,
                    "text": "Red component (0..255),\nCSS color string or array of all components.\n",
                    "type": "Ext.draw.Color/String/Number[]/Number",
                    "src": {
                      "name": "0,637,60",
                      "text": "0,637,65,24:0,638,12,45",
                      "type": "0,637,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "green",
                    "optional": true,
                    "text": "Green component (0..255)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,639,29",
                      "text": "0,639,36,25",
                      "type": "0,639,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "blue",
                    "optional": true,
                    "text": "Blue component (0..255)\n",
                    "type": "Number",
                    "src": {
                      "name": "0,640,29",
                      "text": "0,640,35,24",
                      "type": "0,640,20"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "alpha",
                    "optional": true,
                    "text": "Alpha component (0..1)\n",
                    "type": "Number",
                    "value": "1",
                    "src": {
                      "name": "0,641,29",
                      "text": "0,641,38,23",
                      "type": "0,641,20",
                      "value": "0,641,35"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.draw.Color",
                    "src": {
                      "type": "0,642,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,645,0",
                  "static": "0,643,12",
                  "text": "0,618,12,529"
                }
              }
            ]
          }
        ],
        "src": {
          "name": "0,5,0",
          "text": "0,2,4,109"
        }
      }
    ]
  },
  "version": 1
}