{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/charts/src/draw/plugin/SpriteEvents.js",
    "../../../ext/packages/core/src/plugin/Abstract.js",
    "../../../ext/classic/classic/overrides/plugin/Abstract.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "plugin.spriteevents",
        "extends": "Ext.plugin.Abstract",
        "name": "Ext.draw.plugin.SpriteEvents",
        "requires": "Ext.draw.PathUtil",
        "text": "A draw container <a href='#!/api/Ext.plugin.Abstract'>Ext.AbstractPlugin</a> that adds ability to listen\nto sprite events. For example:\n\n    var drawContainer = Ext.create('Ext.draw.Container', {\n         plugins: ['spriteevents'],\n         renderTo: Ext.getBody(),\n         width: 200,\n         height: 200,\n         sprites: [{\n              type: 'circle',\n              fillStyle: '#79BB3F',\n              r: 50,\n              x: 100,\n              y: 100\n         }],\n         listeners: {\n             spriteclick: function (item, event) {\n                 var sprite = item && item.sprite;\n                 if (sprite) {\n                     sprite.setAttributes({fillStyle: 'red'});\n                       sprite.getSurface().renderFrame();\n                 }\n             }\n         }\n    });\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "pluginId",
                "text": "A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough <a href='#!/api/Ext.Component-method-getPlugin'>Ext.Component#getPlugin</a> method.  For example:\n\n    var grid = Ext.create('Ext.grid.Panel', {\n        plugins: [{\n            ptype: 'cellediting',\n            clicksToEdit: 2,\n            pluginId: 'cellplugin'\n        }]\n    });\n\n    // later on:\n    var plugin = grid.getPlugin('cellplugin');\n",
                "type": "String",
                "src": {
                  "name": "1,61,22",
                  "text": "1,62,8,404",
                  "type": "1,61,14"
                }
              },
              {
                "$type": "property",
                "name": "stateEvents",
                "text": "The configured list of stateEvents used to (optionally) participate in Owner Component's state management.\n",
                "type": "String/Array",
                "src": {
                  "name": "2,13,28",
                  "text": "2,14,8,107",
                  "type": "2,13,14"
                }
              }
            ]
          },
          {
            "$type": "events",
            "items": [
              {
                "$type": "event",
                "name": "spriteclick",
                "text": "Fires when a click event occurs on a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,72,24",
                      "type": "0,72,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,73,23",
                      "type": "0,73,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,70,15",
                  "text": "0,71,8,45"
                }
              },
              {
                "$type": "event",
                "name": "spritedblclick",
                "text": "Fires when a double click event occurs on a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,79,24",
                      "type": "0,79,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,80,23",
                      "type": "0,80,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,77,15",
                  "text": "0,78,8,52"
                }
              },
              {
                "$type": "event",
                "name": "spritemousedown",
                "text": "Fires when a mousedown event occurs on a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,51,24",
                      "type": "0,51,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,52,23",
                      "type": "0,52,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,49,15",
                  "text": "0,50,8,49"
                }
              },
              {
                "$type": "event",
                "name": "spritemousemove",
                "text": "Fires when the mouse is moved on a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,37,24",
                      "type": "0,37,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,38,23",
                      "type": "0,38,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,35,15",
                  "text": "0,36,8,43"
                }
              },
              {
                "$type": "event",
                "name": "spritemouseout",
                "text": "Fires when the mouse exits a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,65,24",
                      "type": "0,65,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,66,23",
                      "type": "0,66,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,63,15",
                  "text": "0,64,8,37"
                }
              },
              {
                "$type": "event",
                "name": "spritemouseover",
                "text": "Fires when the mouse enters a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,58,24",
                      "type": "0,58,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,59,23",
                      "type": "0,59,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,56,15",
                  "text": "0,57,8,38"
                }
              },
              {
                "$type": "event",
                "name": "spritemouseup",
                "text": "Fires when a mouseup event occurs on a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,44,24",
                      "type": "0,44,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,45,23",
                      "type": "0,45,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,42,15",
                  "text": "0,43,8,47"
                }
              },
              {
                "$type": "event",
                "name": "spritetap",
                "text": "Fires when a tap event occurs on a sprite.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "sprite",
                    "type": "Object",
                    "src": {
                      "name": "0,86,24",
                      "type": "0,86,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "event",
                    "type": "Event",
                    "src": {
                      "name": "0,87,23",
                      "type": "0,87,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,84,15",
                  "text": "0,85,8,43"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "applyState",
                "text": "The applyState method is invoked by the client Component's State mixin after initComponent method has been run for the client.\n\nThe supplied implementation is empty. If plugin Subclasses are to (optionally) participate in the client Component's\nstate management, implementers should provide a suitable method to utilize it.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "state",
                    "text": "The current plugin state object to be applied.\n",
                    "type": "Object",
                    "src": {
                      "name": "2,35,24",
                      "text": "2,35,30,47",
                      "type": "2,35,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "allState",
                    "text": "The current aggregate state of the Component and all plugins.\n",
                    "type": "Object",
                    "src": {
                      "name": "2,36,24",
                      "text": "2,36,33,62",
                      "type": "2,36,16"
                    }
                  }
                ],
                "src": {
                  "name": "2,39,0",
                  "text": "2,31,8,324"
                }
              },
              {
                "$type": "method",
                "name": "clonePlugin",
                "text": "Creates clone of the plugin.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "overrideCfg",
                    "optional": true,
                    "text": "Additional config for the derived plugin.\n",
                    "type": "Object",
                    "src": {
                      "name": "1,38,25",
                      "text": "1,38,38,42",
                      "type": "1,38,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,40,0",
                  "text": "1,37,8,29"
                }
              },
              {
                "$type": "method",
                "name": "constructor",
                "text": "Instantiates the plugin.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "optional": true,
                    "text": "Configuration object.\n",
                    "type": "Object",
                    "src": {
                      "name": "1,27,25",
                      "text": "1,27,33,22",
                      "type": "1,27,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,29,0",
                  "text": "1,26,8,25"
                }
              },
              {
                "$type": "method",
                "name": "destroy",
                "text": "The destroy method is invoked by the owning Component at the time the Component is\nbeing destroyed.\n",
                "src": {
                  "name": "1,91,16",
                  "text": "1,88,8,101"
                }
              },
              {
                "$type": "method",
                "name": "disable",
                "text": "The base implementation just sets the plugin's `disabled` flag to `true`\n\nPlugin subclasses which need more complex processing may implement an overriding implementation.\n",
                "src": {
                  "name": "2,57,0",
                  "text": "2,52,8,171"
                }
              },
              {
                "$type": "method",
                "name": "enable",
                "text": "The base implementation just sets the plugin's `disabled` flag to `false`\n\nPlugin subclasses which need more complex processing may implement an overriding implementation.\n",
                "src": {
                  "name": "2,47,0",
                  "text": "2,42,8,172"
                }
              },
              {
                "$type": "method",
                "name": "getCmp",
                "text": "Returns the component to which this plugin is attached.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "Owner component.\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "1,54,32,17",
                      "type": "1,54,17"
                    }
                  }
                ],
                "src": {
                  "name": "1,56,0",
                  "text": "1,53,8,56"
                }
              },
              {
                "$type": "method",
                "name": "getState",
                "text": "The getState method is invoked by the client Component's State mixin when one or more of the the specified <a href='#!/api/Ext.draw.plugin.SpriteEvents-cfg-stateEvents'>stateEvents</a> are raised.\n\nThe supplied implementation is empty. If plugin Subclasses are to (optionally) participate in the client Component's\nstate management, implementers should provide a suitable method which returns a state object.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "state\n",
                    "type": "Object",
                    "src": {
                      "text": "2,24,25,6",
                      "type": "2,24,17"
                    }
                  }
                ],
                "src": {
                  "name": "2,27,0",
                  "text": "2,20,8,352"
                }
              },
              {
                "$type": "method",
                "name": "init",
                "text": "The init method is invoked after initComponent method has been run for the client Component.\n\nThe supplied implementation is empty. Subclasses should perform plugin initialization, and set up bidirectional\nlinks between the plugin and its client Component in their own implementation of this method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "client",
                    "text": "The client Component which owns this plugin.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "1,83,31",
                      "text": "1,83,38,45",
                      "type": "1,83,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,85,0",
                  "text": "1,79,8,300"
                }
              },
              {
                "$type": "method",
                "name": "setCmp",
                "text": "Sets the component to which this plugin is attached.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "cmp",
                    "text": "Owner component.\n",
                    "type": "Ext.Component",
                    "src": {
                      "name": "1,46,31",
                      "text": "1,46,35,17",
                      "type": "1,46,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,48,0",
                  "text": "1,45,8,53"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "isPlugin",
                "text": "`true` in this class to identify an object as an instantiated Plugin, or subclass thereof.\n",
                "type": "Boolean",
                "src": {
                  "name": "1,20,28",
                  "text": "1,21,8,91",
                  "type": "1,20,19"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,30,0",
          "extends": "0,29,0",
          "name": "0,28,0",
          "requires": "0,32,0",
          "text": "0,2,4,665:0,22,2,58:0,23,4,53"
        }
      }
    ]
  },
  "version": 1
}