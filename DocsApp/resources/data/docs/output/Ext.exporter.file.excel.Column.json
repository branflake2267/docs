{
  "$type": "doxi",
  "files": [
    "../../../packages/exporter/src/exporter/file/excel/Column.js",
    "../../../packages/exporter/src/exporter/file/Base.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "extends": "Ext.exporter.file.Base",
        "name": "Ext.exporter.file.excel.Column",
        "text": "This class is used to create an xml Excel Column.\n\nColumns are usually created when you want to add a special style to them.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "autoFitWidth",
                "optional": true,
                "text": "\nUse 1 if you want this column to auto fit its width.\nTextual values do not autofit.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "0,11,28",
                  "text": "0,12,12,85",
                  "type": "0,11,18",
                  "value": "0,11,41"
                }
              },
              {
                "$type": "property",
                "name": "caption",
                "text": "\nSpecifies the caption that should appear when the Component's custom row and column headers are showing.\n",
                "type": "String",
                "src": {
                  "name": "0,18,26",
                  "text": "0,19,12,106",
                  "type": "0,18,18"
                }
              },
              {
                "$type": "property",
                "name": "hidden",
                "text": "\n`true` specifies that this column is hidden. `false` (or omitted) specifies that this column is shown.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,24,27",
                  "text": "0,25,12,104",
                  "type": "0,24,18"
                }
              },
              {
                "$type": "property",
                "name": "id",
                "text": "\nUnique id for this object. Auto generated when missing.\n",
                "type": "String",
                "src": {
                  "name": "1,14,26",
                  "text": "1,15,12,57",
                  "type": "1,14,18"
                }
              },
              {
                "$type": "property",
                "name": "index",
                "text": "\nIndex of this column in the Excel table.\n\nIf this tag is not specified, the first instance has an assumed Index=\"1\". Each additional Column element\nhas an assumed Index that is one higher.\n\nIndices must appear in strictly increasing order. Failure to do so will result in an XML Spreadsheet\ndocument that is invalid. Indices do not need to be sequential, however. Omitted indices are formatted\nwith the default style's format.\n\nIndices must not overlap. If duplicates exist, the behavior is unspecified and the XML Spreadsheet\ndocument is considered invalid. An easy way to create overlap is through careless use of the Span attribute.\n",
                "type": "Number",
                "src": {
                  "name": "0,30,26",
                  "text": "0,31,12,637",
                  "type": "0,30,18"
                }
              },
              {
                "$type": "property",
                "name": "span",
                "text": "\nSpecifies the number of adjacent columns with the same formatting as this column. When a Span attribute\nis used, the spanned column elements are not written out.\n\nAs mentioned in the index config, columns must not overlap. Doing so results in an XML Spreadsheet document\nthat is invalid. Care must be taken with this attribute to ensure that the span does not include another\ncolumn index that is specified.\n",
                "type": "Number",
                "src": {
                  "name": "0,46,26",
                  "text": "0,47,12,409",
                  "type": "0,46,18"
                }
              },
              {
                "$type": "property",
                "name": "styleId",
                "text": "\nExcel style attached to this column\n",
                "type": "String",
                "src": {
                  "name": "0,57,26",
                  "text": "0,58,12,37",
                  "type": "0,57,18"
                }
              },
              {
                "$type": "property",
                "name": "width",
                "text": "\nSpecifies the width of a column in points. This value must be greater than or equal to 0.\n",
                "type": "Number",
                "src": {
                  "name": "0,63,26",
                  "text": "0,64,12,91",
                  "type": "0,63,18"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "checkCollection",
                "text": "This method could be used in config appliers that need to initialize a\nCollection that has items of type className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "data",
                    "src": {
                      "name": "1,44,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "dataCollection",
                    "src": {
                      "name": "1,45,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,46,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "*",
                    "src": {
                      "type": "1,47,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,49,0",
                  "text": "1,41,8,117"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "constructCollection",
                "text": "Create a new Collection with a decoder for the specified className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,64,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.util.Collection",
                    "src": {
                      "type": "1,65,18"
                    }
                  }
                ],
                "src": {
                  "access": "1,67,8",
                  "name": "1,69,0",
                  "text": "1,62,8,69"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getCollectionDecoder",
                "text": "Builds a Collection decoder for the specified className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,78,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Function",
                    "src": {
                      "type": "1,79,18"
                    }
                  }
                ],
                "src": {
                  "access": "1,81,8",
                  "name": "1,83,0",
                  "text": "1,76,8,58"
                }
              },
              {
                "$type": "method",
                "name": "getRenderData",
                "text": "Return the data used when rendering the template\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "1,101,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,103,0",
                  "text": "1,99,8,50"
                }
              },
              {
                "$type": "method",
                "name": "render",
                "text": "Renders the content according to the template provided to the class\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "1,92,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,94,0",
                  "text": "1,90,8,69"
                }
              }
            ]
          }
        ],
        "src": {
          "extends": "0,7,0",
          "name": "0,6,0",
          "text": "0,2,4,125"
        }
      }
    ]
  },
  "version": 1
}