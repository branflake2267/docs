{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/util/Floating.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "name": "Ext.util.Floating",
        "text": "A mixin to add floating capability to a Component.\n",
        "uses": "Ext.ZIndexManager",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "focusOnToFront",
                "text": "Specifies whether the floated component should be automatically <a href='#!/api/Ext.Component-method-focus'>Ext.Component#method-focus</a> when\nit is <a href='#!/api/Ext.util.Floating-method-toFront'>toFront</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,10,23",
                  "text": "0,11,8,157",
                  "type": "0,10,14"
                }
              },
              {
                "$type": "property",
                "name": "modal",
                "optional": true,
                "text": "True to make the floated component modal and mask everything behind it when displayed, false to display it without\nrestricting access to other UI elements.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "0,17,24",
                  "text": "0,18,8,156",
                  "type": "0,17,14",
                  "value": "0,17,30"
                }
              },
              {
                "$type": "property",
                "name": "shadow",
                "text": "Specifies whether the floating component should be given a shadow. Set to true to automatically create an\n<a href='#!/api/Ext.dom.Shadow'>Ext.Shadow</a>, or a string indicating the shadow's display <a href='#!/api/Ext.dom.Shadow-cfg-mode'>Ext.Shadow#mode</a>. Set to false to\ndisable the shadow.\n",
                "type": "String/Boolean",
                "src": {
                  "name": "0,23,30",
                  "text": "0,24,8,231",
                  "type": "0,23,14"
                }
              },
              {
                "$type": "property",
                "name": "animateShadow",
                "optional": true,
                "text": "`true` to animate the shadow along with the component while the component is animating.\nBy default the shadow is hidden while the component is animating\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "0,31,24",
                  "text": "0,32,8,153",
                  "type": "0,31,14",
                  "value": "0,31,38"
                }
              },
              {
                "$type": "property",
                "name": "constrain",
                "text": "True to constrain this Components within its containing element, false to allow it to fall outside of its containing\nelement. By default this Component will be rendered to `document.body`. To render and constrain this Component within\nanother element specify <a href='#!/api/Ext.Component-cfg-renderTo'>Ext.Component#renderTo</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,38,23",
                  "text": "0,39,8,300",
                  "type": "0,38,14"
                }
              },
              {
                "$type": "property",
                "name": "fixed",
                "optional": true,
                "text": "Configure as `true` to have this Component fixed at its `X, Y` coordinates in the browser viewport, immune\nto scrolling the document.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "0,46,24",
                  "text": "0,47,8,134",
                  "type": "0,46,14",
                  "value": "0,46,30"
                }
              },
              {
                "$type": "property",
                "name": "shadowOffset",
                "text": "Number of pixels to offset the shadow.\n",
                "type": "Number",
                "src": {
                  "name": "0,52,22",
                  "text": "0,53,8,39",
                  "type": "0,52,14"
                }
              },
              {
                "$type": "property",
                "name": "shim",
                "text": "`true` to enable an iframe shim for this Component to keep\nwindowed objects from showing through.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,57,23",
                  "text": "0,57,28,59:0,58,8,39",
                  "type": "0,57,14"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "activeCounter",
                "text": "An incrementing numeric counter indicating activation index for use by the <a href='#!/api/Ext.util.Floating-property-zIndexManager'>zIndexManager</a>\nto sort its stack.\n",
                "type": "Number",
                "src": {
                  "access": "0,117,12",
                  "name": "0,118,26",
                  "text": "0,118,40,98:0,119,12,19",
                  "type": "0,118,18"
                }
              },
              {
                "$type": "property",
                "name": "alwaysOnTop",
                "optional": true,
                "text": "A flag indicating that this component should be on the top of the z-index stack for use by the <a href='#!/api/Ext.util.Floating-property-zIndexManager'>zIndexManager</a>\nto sort its stack.\n\nThis may be a positive number to prioritize the ordering of multiple visible always on top components.\n\nThis may be set to a *negative* number to prioritize a component to the *bottom* of the z-index stack.\n",
                "type": "Boolean/Number",
                "value": "false",
                "src": {
                  "name": "0,124,35",
                  "text": "0,124,54,118:0,125,12,227",
                  "type": "0,124,18",
                  "value": "0,124,47"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "onMouseDown",
                "text": "Mousedown brings to front, and programmatically grabs focus\nunless the mousedown was on a focusable element\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "0,283,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,279,8",
                  "name": "0,283,0",
                  "text": "0,280,8,108"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "syncHidden",
                "text": "synchronizes the hidden state of this component with the state of its hierarchy\n",
                "src": {
                  "access": "0,345,8",
                  "name": "0,347,0",
                  "text": "0,344,8,80"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setZIndex",
                "text": "z-index is managed by the zIndexManager and may be overwritten at any time.\nReturns the next z-index to be used.\n\nIf this is a Container, then it will have rebased any managed floating Components,\nand so the next available z-index will be approximately 10000 above that.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "src": {
                      "name": "0,376,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,369,8",
                  "name": "0,376,0",
                  "text": "0,370,8,271"
                }
              },
              {
                "$type": "method",
                "name": "doConstrain",
                "text": "Moves this floating Component into a constrain region.\n\nBy default, this Component is constrained to be within the container it was added to, or the element it was\nrendered to.\n\nAn alternative constraint may be passed.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "constrainTo",
                    "optional": true,
                    "text": "The Element or <a href='#!/api/Ext.util.Region'>Ext.util.Region</a>\ninto which this Component is to be constrained. Defaults to the element into which this floating Component\nwas rendered.\n",
                    "type": "String/HTMLElement/Ext.dom.Element/Ext.util.Region",
                    "src": {
                      "name": "0,399,69",
                      "text": "0,399,82,46:0,400,8,121",
                      "type": "0,399,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,403,0",
                  "text": "0,393,8,219"
                }
              },
              {
                "$type": "method",
                "name": "toFront",
                "text": "Brings this floating Component to the front of any other visible, floating Components managed by the same\n<a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a>\n\nIf this Component is modal, inserts the modal mask just below this Component in the z-index stack.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "preventFocus",
                    "optional": true,
                    "text": "Specify `true` to prevent the Component from being focused.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "0,446,26",
                      "text": "0,446,46,60",
                      "type": "0,446,16",
                      "value": "0,446,39"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "0,447,32,5",
                      "type": "0,447,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,449,0",
                  "text": "0,441,8,247"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setActive",
                "text": "This method is called internally by <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a> to signal that a floating Component has either been\nmoved to the top of its zIndex stack, or pushed from the top of its zIndex stack.\n\nIf a _Window_ is superceded by another Window, deactivating it hides its shadow.\n\nThis method also fires the <a href='#!/api/Ext.Component-event-activate'>Ext.Component#activate</a> or\n<a href='#!/api/Ext.Component-event-deactivate'>Ext.Component#deactivate</a> event depending on which action occurred.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "active",
                    "optional": true,
                    "text": "True to activate the Component, false to deactivate it.\n",
                    "type": "Boolean",
                    "value": "false",
                    "src": {
                      "name": "0,472,26",
                      "text": "0,472,40,56",
                      "type": "0,472,16",
                      "value": "0,472,33"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "doFocus",
                    "optional": true,
                    "text": "When activating, set to true to focus the component;\nwhen deactivating, set to false to avoid returning focus to previous element.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "0,473,26",
                      "text": "0,473,35,53:0,474,8,79",
                      "type": "0,473,16"
                    }
                  }
                ],
                "src": {
                  "access": "0,463,8",
                  "name": "0,477,0",
                  "text": "0,464,8,436"
                }
              },
              {
                "$type": "method",
                "name": "toBack",
                "text": "Sends this Component to the back of (lower z-index than) any other visible windows\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "0,507,32,5",
                      "type": "0,507,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,509,0",
                  "text": "0,506,8,83"
                }
              },
              {
                "$type": "method",
                "name": "center",
                "text": "Center this Component in its container.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.Component",
                    "src": {
                      "text": "0,516,32,5",
                      "type": "0,516,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,518,0",
                  "text": "0,515,8,40"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "fitContainer",
                "items": [
                  {
                    "$type": "param",
                    "name": "animate",
                    "src": {
                      "name": "0,545,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,543,8",
                  "name": "0,545,0"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "access": "private",
                "name": "floating",
                "readonly": true,
                "text": "The value `true` indicates that this Component is floating.\n",
                "type": "Boolean",
                "src": {
                  "access": "0,64,8",
                  "name": "0,62,28",
                  "readonly": "0,65,8",
                  "text": "0,63,8,60",
                  "type": "0,62,19"
                }
              },
              {
                "$type": "property",
                "name": "zIndexManager",
                "readonly": true,
                "text": "Only present for <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components after\nthey have been rendered.\n\nA reference to the ZIndexManager which is managing this Component's z-index.\n\nThe <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a> maintains a stack of floating Component z-indices, and also provides\na single modal mask which is insert just beneath the topmost visible modal floating Component.\n\nFloating Components may be <a href='#!/api/Ext.Component-method-toFront'>Ext.Component#toFront</a> or <a href='#!/api/Ext.Component-method-toBack'>Ext.Component#toBack</a> of the\nz-index stack.\n\nThis defaults to the global <a href='#!/api/Ext.WindowManager'>Ext.WindowManager</a> for floating Components that are\nprogramatically <a href='#!/api/Ext.Component-method-render'>Ext.Component#method-render</a>.\n\nFor <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components that are added to a\nContainer, the ZIndexManager is acquired from the first ancestor Container found\nthat is floating. If no floating ancestor is found, the global\n<a href='#!/api/Ext.WindowManager'>Ext.WindowManager</a> is used.\n\nSee <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> and <a href='#!/api/Ext.util.Floating-property-zIndexParent'>zIndexParent</a>\n",
                "type": "Ext.ZIndexManager",
                "src": {
                  "name": "0,69,38",
                  "readonly": "0,90,8",
                  "text": "0,70,8,1043",
                  "type": "0,69,19"
                }
              },
              {
                "$type": "property",
                "name": "zIndexParent",
                "readonly": true,
                "text": "Only present for <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components which were\ninserted as child items of Containers, and which have a floating Container in\ntheir containment ancestry.\n\nFor <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> Components which are child items of a\nContainer, the zIndexParent will be a floating ancestor Container which is\nresponsible for the base z-index value of all its floating descendants. It\nprovides a <a href='#!/api/Ext.ZIndexManager'>Ext.ZIndexManager</a> which provides z-indexing\nservices for all its descendant floating Components.\n\nFloating Components that are programmatically <a href='#!/api/Ext.Component-method-render'>Ext.Component#method-render</a> will not have a <a href='#!/api/Ext.util.Floating-property-zIndexParent'>zIndexParent</a>\nproperty.\n\nFor example, the dropdown <a href='#!/api/Ext.view.BoundList'>Ext.view.BoundList</a> of a ComboBox which is in a Window will have the\nWindow as its <a href='#!/api/Ext.util.Floating-property-zIndexParent'>zIndexParent</a>, and will always show above that Window, wherever the Window is placed in the z-index stack.\n\nSee <a href='#!/api/Ext.Component-cfg-floating'>Ext.Component#cfg-floating</a> and <a href='#!/api/Ext.util.Floating-property-zIndexManager'>zIndexManager</a>\n",
                "type": "Ext.container.Container",
                "src": {
                  "name": "0,94,34",
                  "readonly": "0,112,8",
                  "text": "0,95,8,973",
                  "type": "0,94,19"
                }
              }
            ]
          }
        ],
        "src": {
          "name": "0,4,0",
          "text": "0,2,4,51",
          "uses": "0,7,0"
        }
      }
    ]
  },
  "version": 1
}