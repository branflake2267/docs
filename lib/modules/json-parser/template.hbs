<html>
<head>
    <title>{{{name}}}</title>
    <meta charset="UTF-8">
        <link rel="stylesheet" type="text/css" href="css/styles.css">
        <link rel="stylesheet" type="text/css" href="css/treeview.css">
        <script src="js/treeview.js"></script>
</head>
<body>
    <h1 class='{{classType}}'>{{{name}}}
        {{#classAlias}}
        <span class='alias'>alias: {{{.}}}</span>
        {{/classAlias}}
    </h1>
    <div class="classHead">
        <div class="classMetaHeader">
            Related Classes <a class="button" href="javascript:void(0);" onClick="ExtL.onExpandToggleClick(this);">collapse</a>
        </div>
        <div class="classMeta">
            {{#if altNames}}
            <h3>Alternate Names</h3>
            <p class="list">{{{altNames}}}</p>
            {{/if}}
            {{#if mixins}}
            <h3>Mixins</h3>
            <p class="list">{{{mixins}}}</p>
            {{/if}}
            {{#if requires}}
            <h3>Requires</h3>
            <p class="list">{{{requires}}}</p>
            {{/if}}
        </div>
    </div>
    <div id="toolbar">
        <div class="toolbarButton">
            <a href="#configs">configs</a>
        </div>
        <div class="toolbarButton">
            <a href="#properties">properties</a>
        </div>
        <div class="toolbarButton">
            <a href="#methods">methods</a>
        </div>
        <div class="toolbarButton">
            <a href="#static-methods">static methods</a>
        </div>
        <div class="toolbarButton">
            <a href="#events">events</a>
        </div>
        <div class="toolbarButton">
            <a href="#mixins">mixins</a>
        </div>
        <div class="memberFilter">
            <input placeholder="Filter Members" type="text" id="box" name="box">
        </div>
    </div>
    <div id="centerContent">
        <div id="tree"></div>
        <div id="rightMembers">
            <div class="classText"><h2>Summary</h2>{{{classText}}}</div>
            <div class="members">
                <a name="{{{$type}}}"></a>
                {{#members}}
                    <h2 id="{{{$type}}}" class="type">{{{$type}}}</h2>
                    {{#items}}
                        <div class="classmembers" data-member-name="{{{name}}}">
                            <a name="{{{name}}}"></a>
                            <h2>{{{name}}}
                                {{#type}}
                                    <span class='memberType'>{{{.}}}</span>
                                {{/type}}
                                {{#access}}
                                    <span class='{{{.}}}'>{{{.}}}</span>
                                {{/access}}
                            </h2>
                            {{#text}}
                                <p>{{{.}}}</p>
                            {{/text}}
                            {{#value}}
                                <p>Defaults to: {{{.}}}</p>
                            {{/value}}
                            {{#deprecatedMessage}}
                                <p>Deprecated: {{{.}}}</p>
                            {{/deprecatedMessage}}
                        </div>
                    {{/items}}
                {{/members}}
            </div>
        </div>
    </div>
</body>
<script type="text/javascript">
    var ExtL = ExtL || {};

    ExtL.hasClass = function (ele,cls) {
        return ele.className.match(new RegExp('(\\s|^)'+cls+'(\\s|$)'));
    }
    ExtL.addClass = function (ele,cls) {
        if (!this.hasClass(ele,cls)) ele.className += " "+cls;
    }
    ExtL.removeClass = function (ele,cls) {
        if (ExtL.hasClass(ele,cls)) {
            var reg = new RegExp('(\\s|^)'+cls+'(\\s|$)');
            ele.className=ele.className.replace(reg,' ');
        }
    }
    ExtL.onExpandToggleClick = function (dom) {
        var parent = dom.parentElement,
        metaBody = parent.nextElementSibling,
        isExpanded = dom.innerHTML === 'collapse';

        dom.innerHTML = isExpanded ? 'expand' : 'collapse';
        ExtL[isExpanded ? 'addClass' : 'removeClass'](metaBody, 'collapsed');
    };

    if (document.getElementsByClassName('classMeta')[0].innerHTML.trim() === "") {
        document.getElementsByClassName('classMeta')[0].style.display = "none";
        document.getElementsByClassName('classMetaHeader')[0].style.display = "none";
    }

    document.getElementById("box").onkeyup = function() {
        var value = this.value,
            matcher = new RegExp(value, "gi"),
            head = document.getElementsByClassName("classText"),
            classmembers = document.getElementsByClassName("classmembers"),
            member = document.getElementsByClassName("members")[0];

        if (value == "" || value == " ") {
            head[0].style.display="block";
            member.style.borderTop="3px solid #DCDCDC";
        } else {
            head[0].style.display="none";
            member.style.borderTop="none";
        }

        for (var i=0;i<classmembers.length;i++) {
            if (matcher.test(classmembers[i].getAttribute('data-member-name'))) {
                classmembers[i].style.display="block";
            } else {
                classmembers[i].style.display="none";
            }
        }
    }

    var tree = new TreeView({{{tree}}}, 'tree');

    window.onscroll = function (e) {
        var vertical_position = 0;
        if (pageYOffset)//usual
            vertical_position = pageYOffset;
        else if (document.documentElement.clientHeight)//ie
            vertical_position = document.documentElement.scrollTop;
        else if (document.body)//ie quirks
            vertical_position = document.body.scrollTop;

        var your_div = document.getElementById('tree');

        if (vertical_position > 200) {
            your_div.style.top = (55) + 'px';
        } else {
            your_div.style.top = (250) + 'px';
        }
    }
</script>
</html>
