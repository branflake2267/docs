<div id="help-wrap">
    <div class="help-header">
        ExtReact Docs Help
        <div id="help-close" class="icon-btn">
            <i class="fa fa-close"></i>
        </div>
    </div>
    <div class="classText">
        <div class="toc classMeta">
            <h2>Contents</h2>
            <a class="toc-page-h2" href="#introduction">Introduction</a>
            <a class="toc-page-h2" href="#terms-icons-and-labels">Terms, Icons, and Labels</a>
            <a class="toc-page-h3" href="#access-levels">Access Levels</a>
            <a class="toc-page-h3" href="#member-types">Member Types</a>
            <a class="toc-page-h3" href="#member-syntax">Member Syntax</a>
            <a class="toc-page-h3" href="#member-flags">Member Flags</a>
            <a class="toc-page-h3" href="#class-icons">Class Icons</a>
            <a class="toc-page-h3" href="#member-icons">Member Icons</a>
            <a class="toc-page-h2" href="#navigation-and-features">Navigation and Features</a>
            <a class="toc-page-h3" href="#class-member-quick-nav-menu">Class Member Quick-Nav Menu</a>
            <a class="toc-page-h3" href="#getter-and-setter-methods">Getter and Setter Methods</a>
            <a class="toc-page-h3" href="#history-bar">History Bar</a>
            <a class="toc-page-h3" href="#search-and-filters">Search and Filters</a>
            <a class="toc-page-h3" href="#api-doc-class-metadata">API Doc Class Metadata</a>
            <a class="toc-page-h3" href="#expanding-and-collapsing-examples-and-class-members">Expanding and Collapsing Examples and Class Members</a>
            <a class="toc-page-h3" href="#desktop-vs-mobile-view">Desktop -vs- Mobile View</a>
            <a class="toc-page-h3" href="#viewing-the-class-source">Viewing the Class Source</a>
        </div>

        <h2 id="introduction">Introduction</h2>
        <p>The documentation for the ExtReact product diverges somewhat from the
            documentation of other Sencha products.  The sections below describe
            documentation for all products except where indicated as unique to
            <code><b>ExtReact</b></code>.</p>

        <h2 id="terms-icons-and-labels">Terms, Icons, and Labels</h2>
        <p>Many classes have shortcut names used when creating (instantiating) a class with a
            configuration object.  The shortcut name is referred to as an <code>alias</code> (or <code>xtype</code> if the
            class extends Ext.Component).  The alias/xtype is listed next to the class name of
            applicable classes for quick reference.</p>
        <p class="ext-react-note">ExtReact component classes list the configurable name
            prominently at the top of the API class doc followed by the fully-qualified
            class name.</p>
        <h3 id="access-levels">Access Levels</h3>
        <p>Framework classes or their members may be specified as <code>private</code> or <code>protected</code>.  Else,
            the class / member is <code>public</code>.  <code>Public</code>, <code>protected</code>, and <code>private</code> are access
            descriptors used to convey how and when the class or class member should be used.</p>
        <ul>
            <li><p><strong>Public</strong> classes and class members are available for use by any other class or
                application code and may be relied upon as a stable and persistent within major product
                versions.  Public classes and members may safely be extended via a subclass.</p>
            </li>
            <li><p><strong>Protected</strong> class members are stable <code>public</code> members intended to be used by the
                owning class or its subclasses.  Protected members may safely be extended via a subclass.</p>
            </li>
            <li><p><strong>Private</strong> classes and class members are used internally by the framework and are not
                intended to be used by application developers.  Private classes and members may change or
                be omitted from the framework at any time without notice and should not be relied upon in
                application logic.</p>
            </li>
        </ul>
        <h3 id="member-types">Member Types</h3>
        <ul>
            <li><strong>Config</strong> - The configuration options for a class.
                <p class="ext-react-note">ExtReact component classes display
                    configuration options as <code>props</code></p>
            </li>
            <li><strong>Property</strong> - Set once a class is instantiated. *See Read
            Only below.
                <p class="ext-react-note">ExtReact component classes do not list
                    properties as a dedicated member type, but rather as
                    <code>read only</code> props</p>
            </li>
            <li><strong>Method</strong> - Actions that can be performed by a class.  Methods should be read as
                instance methods and can only be called from a instance of a given class.  Static methods
                that can be called directly from the class itself will have a <code>static</code> label next to the
                method name.  *See Static below.</li>
            <li><strong>Event</strong> - Events are specific to the framework event system allowing for classes to
                programmatically raise an event to be handled by one or more event handler methods.  DOM
                events, while handled by the framework event system, are not specifically described
                within the API documentation.  *For DOM events refer to the
                <a href="https://developer.mozilla.org/en-US/docs/Web/Events">event reference</a> page from MDN.</li>
            <li><strong>Theme Variable</strong> - Variables used by the visual theme engine employed by the
                framework.</li>
            <li><strong>Theme Mixin</strong> - Functions used by the visual theme engine employed by the framework
                and may use values set in various Theme Variables.</li>
        </ul>
        <h3 id="member-syntax">Member Syntax</h3>
        <p>Below is an example class member that we can disect to show the syntax of a class member
            (the lookupComponent method as viewed from the Ext.button.Button class in this case).</p>
        <div style="position: relative;" class="show-inherited show-protected members">
            <div style="border: 1px solid #E4E4E4;" class="classmembers member-protected isNotStatic isInherited member-expanded" data-member-name="lookupComponent">
                <div class="collapse-toggle">
                    <i class="fa fa-caret-right"></i>
                    <i class="fa fa-caret-down"></i>
                </div>
                <div class="source-class"><a href="javascript:void(0);">Ext.container.Container</a><div class="viewSource"><a href="javascript:void(0);"></a><a target="_blank" href="javascript:void(0);">view source</a></div></div>
                <div class="member-header">
                    <a href="javascript:void(0);" class="member-name-link"><span data-ref="method-lookupComponent" class="member-name"><strong>lookup</strong>Component</span></a>
                    <span class="params-list"> ( item )</span> : <span class="memberType">Ext.Component</span>
                    <div class="member-tags"><span class="protected">protected</span></div>
                </div>
                <p>Called when a raw config object is added to this container either during initialization of the <a href="javascript:void(0);">items</a> config,
                    or when new items are <a href="javascript:void(0);">added), or {@link #insert inserted</a>.</p>
                <p>This method converts the passed object into an instanced child component.</p>
                <p>This may be overridden in subclasses when special processing needs to be applied to child creation.</p>
                <div class="detail-header">Parameters</div>
                <p><span class="params-list">item</span> :
                    <span class="memberType">&nbsp;Object</span>
                </p>
                <div class="params-desc"><p>The config object being added.</p></div>
                <div class="detail-header">Returns</div>
                <span style="margin-left:12px;" class="memberType">Ext.Component</span>
                <div class="return-desc"><p>The component to be added.</p>
                </div>
            </div>
        </div>

        <p>Let's look at each part of the member row:</p>
        <ul>
            <li><strong>Expand/Collapse</strong> - On the left-hand size of the member row is a control used to
                expand and collapse each member row to show / hide member details.</li>
            <li><strong>Member Name</strong> - The name of the class member (<code>lookupComponent</code> in this example)</li>
            <li><strong>Method Param</strong> - Any required or optional params used by a method (or passed to an
                event handler method) will be listed next to the method name within parenthesis
                (<code>( item )</code> in this example)</li>
            <li><strong>Return type</strong> - The class instance or javascript object returned by the method or
                property (<code>Ext.Component</code> in this case).  This may be omitted for methods that do not
                return anything other than <code>undefined</code> or may display as multiple possible values
                separated by a forward slash <code>/</code> signifying that what is returned may depend on the
                results of the method call (i.e. a method may return a Component if a get method calls is
                successful or <code>false</code> if unsuccessful which would be displayed as
                <code>Ext.Component/Boolean</code>).</li>
            <li><strong>Flags</strong> - Any flags applicable to the member will be displayed next (<code>PROTECTED</code> in
                this example - see the Flags section below)</li>
            <li><strong>Member Origin</strong> - On the right-hand side of the member row is the class where the
                member was initially described (<code>Ext.container.Container</code> in this example).  The source
                class will be displayed as a blue link if the member originates from the current class
                and gray if it is inherited from an ancestor or mixed-in class.</li>
            <li><strong>Member Source</strong> - On the right-hand side below the member origin class is a link to
                view the member's source (<code>view source</code> in the example)</li>
            <li><strong>Params List</strong> - Each param for a class method will be listed using the same name
                found above in parenthesis, the type of class or object expected, and a description of
                the param (<code>item : Object</code> in the example).</li>
            <li><strong>Returns</strong> - If a class returns a value other than <code>undefined</code> a "Returns" section
                will note the type of class or object returned and a description (<code>Ext.Component</code> in the
                example)</li>
            <li><strong>Since</strong> (<em>not shown in the example</em>) - Some members will show which version of the
                product the member was first introduced (i.e. <code>Available since 3.4.0</code> - <em>not pictured in
                    the example</em>) just after the member description</li>
            <li><strong>Default</strong> (<em>not shown in the example</em>) - Configs often show the default config value
                to be applied to a class instance if not overridden (i.e. <code>Defaults to: false</code>)</li>
        </ul>
        <h3 id="member-flags">Member Flags</h3>
        <p>The API documentation uses a number of flags to further commnicate the class member's
            function and intent.  The label may be represented by a text label, an abbreviation, or
            an icon.</p>
        <ul>
            <li><strong>Required</strong> - Required config when instantiating a class</li>
            <li><strong>Bindable</strong> - The config has a setter which allows this config to be set via ViewModel
                binding
                <p class="ext-react-note">All ExtReact props are <code>bindable</code>
                unless decorated as <code>immutable</code></p>
            </li>
            <li><strong>Immutable</strong>
                <p class="ext-react-note">Immutable ExtReact props may not be use as a
                    configurable prop when instantiating a component</p>
            </li>
            <li><strong>Read Only</strong> - The property may be read, but cannot be used to configure /
                re-configure a class instance at runtime</li>
            <li><strong>Singleton</strong> - Singleton classes are instantiated immediately once defined and may not
                be instantiated manually</li>
            <li><strong>Static</strong> - A static method or property is a method or property belonging to the class
                itself, not an instance of the class</li>
            <li><strong>Chainable</strong> - Refers to methods that return the class instance back when called.<br>This enables chained method calls like: <code>classInstance.method1().method2().etc();</code></li>
            <li><strong>Deprecated</strong> - A class or member that is scheduled for removal in a future
                framework version and is provided in the current version for backwards compatibility.<br>Deprecated classes and members will have a message directing you to the preferred class /
                method going forward.</li>
            <li><strong>Removed</strong> - A removed class or member that exists in documentation only as a
                reference for users upgrading between framework versions</li>
            <li><strong>Template</strong> - A method defined within a base class designed to be overridden by
                subclasses</li>
            <li><strong>Abstract</strong> - A class or member may be be defined as abstract.  Abstract classes and
                members establish a class structure and provide limited, if any, code.  Class-specific
                code will be furnished via overrides in subclasses.</li>
            <li><strong>Preventable</strong> - Events marked preventable will not fire if <code>false</code> is returned from
                an event handler</li>
        </ul>
        <h3 id="class-icons">Class Icons</h3>
        <p><span class="icon-demo class-icon fa fa-cube"></span> - Indicates a framework class  </p>
        <p><span class="icon-demo singleton-icon fa fa-cube"></span> - A singleton framework class. *See the
            singleton flag for more information  </p>
        <p><span class="icon-demo component-icon fa fa-gear"></span> - A component-type framework class (any
            class within the Ext JS framework that extends Ext.Component)  </p>
        <p><span class="icon-demo display-new"></span> - Indicates that the class, member, or guide
            is new in the currently viewed version</p>
        <h3 id="member-icons">Member Icons</h3>
        <p><span class="icon-demo fa fa-cubes"></span> - Indicates a class member of type <code>config</code></p>
        <p class="ext-react-note">Or in the case of an ExtReact component class this
            indicates a member of type <code>prop</code></p>
        <p><span class="icon-demo fa fa-book"></span> - Indicates a class member of type <code>property</code>  </p>
        <p><span class="icon-demo fa fa-object-group"></span> - Indicates a class member of type
            <code>method</code>  </p>
        <p><span class="icon-demo fa fa-bolt"></span> - Indicates a class member of type <code>event</code>  </p>
        <p><span class="icon-demo fa fa-paint-brush"></span> - Indicates a class member of type
            <code>theme variable</code>  </p>
        <p><span class="icon-demo fa fa-tint"></span> - Indicates a class member of type
            <code>theme mixin</code>  </p>
        <p><span class="icon-demo display-new"></span> - Indicates that the class, member, or guide
            is new in the currently viewed version</p>
        <h2 id="navigation-and-features">Navigation and Features</h2>
        <h3 id="class-member-quick-nav-menu">Class Member Quick-Nav Menu</h3>
        <p>Just below the class name on an API doc page is a row of buttons corresponding to the
            types of members owned by the current class.  Each button shows a count of members by
            type (this count is updated as filters are applied).  Clicking the button will navigate
            you to that member section.  Hovering over the member-type button will reveal a popup
            menu of all members of that type for quick navigation.</p>
        <h3 id="getter-and-setter-methods">Getter and Setter Methods</h3>
        <p>Getting and setter methods that correlate to a class config option will show up in the
            methods section as well as in the configs section of both the API doc and the member-type
            menus just beneath the config they work with.  The getter and setter method documentation
            will be found in the config row for easy reference.</p>
        <p class="ext-react-note">ExtReact component classes do not hoist the getter /
            setter methods into the prop.  All methods will be described in the
            <code>Methods</code> section</p>
        <h3 id="history-bar">History Bar</h3>
        <p>Your page history is kept in localstorage and displayed (using the available real estate)
            just below the top title bar.  By default, the only search results shown are the pages
            matching the product / version you're currently viewing.  You can expand what is
            displayed by clicking on the <span class="icon-demo history-config"></span> button on the
            right-hand side of the history bar and choosing the "All" radio option.  This will show
            all recent pages in the history bar for all products / versions.</p>
        <p>Within the history config menu you will also see a listing of your recent page visits.
            The results are filtered by the "Current Product / Version" and "All" radio options.
            Clicking on the <span class="icon-demo history-clear"></span> button will clear the history bar as
            well as the history kept in local storage.</p>
        <p>If "All" is selected in the history config menu the checkbox option for "Show product
            details in the history bar" will be enabled.  When checked, the product/version for each
            historic page will show alongside the page name in the history bar.  Hovering the cursor
            over the page names in the history bar will also show the product/version as a tooltip.</p>
        <h3 id="search-and-filters">Search and Filters</h3>
        <p>Both API docs and guides can be searched for using the search field at the top of the
            page.</p>
        <p>On API doc pages there is also a filter input field that filters the member rows
            using the filter string.  In addition to filtering by string you can filter the class
            members by access level and inheritance.  This is done using the checkboxes at the top of
            the page.</p>
        <p>The checkbox at the bottom of the API class navigation tree filters the class list to
            include or exclude private classes.</p>
        <p>Clicking on an empty search field will show your last 10 searches for quick navigation.</p>
        <h3 id="api-doc-class-metadata">API Doc Class Metadata</h3>
        <p>Each API doc page (with the exception of Javascript primitives pages) has a menu view of
            metadata relating to that class.  This metadata view will have one or more of the
            following:</p>
        <ul>
            <li><strong>Alternate Name</strong> - One or more additional class name synonymns (in Ext JS 6.0.0 the
                <code>Ext.button.Button</code> class has an alternate class name of <code>Ext.Button</code>).  Alternate class
                names are commonly maintained for backward compatibility.</li>
            <li><strong>Hierarchy</strong> - The hierararchy view lists the inheritance chain of the current class
                up through its ancestor classes up to the root base class.</li>
            <li><strong>Mixins</strong> - A list of classes that are mixed into the current class</li>
            <li><strong>Inherited Mixins</strong> - A list of classes that are mixed into an ancestor of the current
                class</li>
            <li><strong>Requires</strong> - All classes required to be defined for the class to be instantiated</li>
            <li><strong>Uses</strong> - A list of classes potentially used by the class at some point in its
                lifecycle, but not necessarily requried for the class to initially be instantiated</li>
            <li><strong>Subclasses</strong> - Classes that extend the current class</li>
        </ul>
        <h3 id="expanding-and-collapsing-examples-and-class-members">Expanding and Collapsing Examples and Class Members</h3>
        <p>Runnable examples (Fiddles) are expanded on a page by default.  You can collapse and
            expand example code blocks individually using the arrow on the top-left of the code
            block.  You can also toggle the collapse state of all examples using the toggle button on
            the top-right of the page.  The toggle-all state will be remembered between page loads.</p>
        <p>Class members are collapsed on a page by default.  You can expand and collapse members
            using the arrow icon on the left of the member row or globally using the expand /
            collapse all toggle button top-right.</p>
        <h3 id="desktop-vs-mobile-view">Desktop -vs- Mobile View</h3>
        <p>Viewing the docs on narrower screens or browsers will result in a view optimized for a
            smaller form factor.  The primary differences between the desktop and "mobile" view are:</p>
        <ul>
            <li>Global navigation will be located in a menu on the left-hand side accessible via the
                hamburger menu icon.  The menu houses the following (on most pages):<ul>
                    <li>The name of the current product (as a link to the product landing page)</li>
                    <li>The Sencha icon used to navigate back to the documentation home page</li>
                    <li>The product menu drop-down button</li>
                    <li>Headers of navigation trees for the API docs and guides</li>
                </ul>
            </li>
            <li>Current context navigation and tools is located on the right-hand side accessible via
                the gear icon.  The context menu houses teh following:<ul>
                    <li>The global search input field</li>
                    <li>(<em>API doc</em>) A "Filters" header with the member filter, expand / collapse all examples
                        button, expand / collapse all member rows button, the access level filter checkboxes,
                        and the counts of each member</li>
                    <li>(<em>API doc</em>) A "Related Classes" header containing the menu of metadata related to the
                        current class</li>
                    <li>(<em>Guides</em>) The table of contents for the guide</li>
                </ul>
            </li>
        </ul>
        <h3 id="viewing-the-class-source">Viewing the Class Source</h3>
        <p>The class source can be viewed by clicking on the class name at the top of an API doc
            page.  The source for class members can be viewed by clicking on the "view source" link
            on the right-hand side of the member row.</p>

    </div>
</div>
