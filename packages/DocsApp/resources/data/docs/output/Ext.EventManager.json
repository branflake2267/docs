{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/EventManager.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "deprecatedVersion": "5.0.0",
        "name": "Ext.EventManager",
        "singleton": true,
        "text": "Registers event handlers on DOM elements.\n\nThis class is deprecated.  Please use the Ext.dom.Element api to attach listeners to\nDOM Elements.  For example:\n\n    var element = Ext.get('myId');\n\n    element.on('click', function(e) {\n        // event handling logic here\n    });\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "addListener",
                "text": "Appends an event handler to an element.  The shorthand version <a href='#!/api/Ext.EventManager-method-on'>on</a> is equivalent.\nTypically you will use <a href='#!/api/Ext.dom.Element-method-addListener'>Ext.dom.Element#addListener</a> directly on an Element in favor of\ncalling this version.\n\n<a href='#!/api/Ext.EventManager-method-on'>Ext.EventManager#on</a> is an alias for <a href='#!/api/Ext.EventManager-method-addListener'>Ext.EventManager#addListener</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The html element or id to assign the event handler to.\n",
                    "type": "String/Ext.dom.Element/HTMLElement/Window",
                    "src": {
                      "name": "0,30,59",
                      "text": "0,30,62,55",
                      "type": "0,30,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event to listen for.\nMay also be an object who's property names are event names.\n",
                    "type": "String",
                    "src": {
                      "name": "0,32,24",
                      "text": "0,32,34,37:0,33,8,61",
                      "type": "0,32,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "handler",
                    "optional": true,
                    "text": "The handler function the event invokes. A String parameter\nis assumed to be method name in `scope` object, or Element object if no scope is provided.\n",
                    "type": "Function/String",
                    "items": [
                      {
                        "$type": "property",
                        "name": "event",
                        "text": "The <a href='#!/api/Ext.event.Event'>Ext.event.Event</a> describing the event.\n",
                        "type": "Ext.event.Event",
                        "src": {
                          "name": "0,37,41",
                          "text": "0,37,47,62",
                          "type": "0,37,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "target",
                        "text": "The Element which was the target of the event.\nNote that this may be filtered by using the `delegate` option.\n",
                        "type": "Ext.dom.Element",
                        "src": {
                          "name": "0,38,41",
                          "text": "0,38,48,47:0,39,8,63",
                          "type": "0,38,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "options",
                        "text": "The options object from the addListener call.\n",
                        "type": "Object",
                        "src": {
                          "name": "0,40,32",
                          "text": "0,40,40,46",
                          "type": "0,40,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,35,34",
                      "text": "0,35,43,59:0,36,8,91",
                      "type": "0,35,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "optional": true,
                    "text": "The scope (`this` reference) in which the handler function is executed.\nDefaults to the Element.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,42,25",
                      "text": "0,42,32,72:0,43,8,26",
                      "type": "0,42,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "An object containing handler configuration properties.\nThis may contain any of the following properties (See <a href='#!/api/Ext.dom.Element-method-addListener'>Ext.dom.Element#addListener</a>\nfor examples of how to use these options.):\n",
                    "type": "Object",
                    "items": [
                      {
                        "$type": "property",
                        "name": "scope",
                        "text": "The scope (`this` reference) in which the handler function is executed. Defaults to the Element.\n",
                        "type": "Object",
                        "src": {
                          "name": "0,48,32",
                          "text": "0,48,38,97",
                          "type": "0,48,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "delegate",
                        "text": "A simple selector to filter the target or look for a descendant of the target. See <a href='#!/api/Ext.dom.Query'>Ext.dom.Query</a> for\ninformation about simple selectors.\n",
                        "type": "String",
                        "src": {
                          "name": "0,49,32",
                          "text": "0,49,41,109:0,50,8,36",
                          "type": "0,49,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "stopEvent",
                        "text": "True to stop the event. That is stop propagation, and prevent the default action.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,51,33",
                          "text": "0,51,43,82",
                          "type": "0,51,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "preventDefault",
                        "text": "True to prevent the default action\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,52,33",
                          "text": "0,52,48,35",
                          "type": "0,52,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "stopPropagation",
                        "text": "True to prevent event propagation\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,53,33",
                          "text": "0,53,49,34",
                          "type": "0,53,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "normalized",
                        "text": "False to pass a browser event to the handler function instead of an Ext.event.Event\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,54,33",
                          "text": "0,54,44,84",
                          "type": "0,54,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "delay",
                        "text": "The number of milliseconds to delay the invocation of the handler after te event fires.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,55,32",
                          "text": "0,55,38,88",
                          "type": "0,55,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "single",
                        "text": "True to add a handler to handle just the next firing of the event, and then remove itself.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,56,33",
                          "text": "0,56,40,91",
                          "type": "0,56,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "buffer",
                        "text": "Causes the handler to be scheduled to run in an <a href='#!/api/Ext.util.DelayedTask'>Ext.util.DelayedTask</a> delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is *not* invoked, but the new handler is scheduled in its place.\n",
                        "type": "Number",
                        "src": {
                          "name": "0,57,32",
                          "text": "0,57,39,85:0,58,8,170",
                          "type": "0,57,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "target",
                        "text": "Only call the handler if the event was fired on the target Element,\n*not* if the event was bubbled up from a child node.\n",
                        "type": "Ext.dom.Element",
                        "src": {
                          "name": "0,60,41",
                          "text": "0,60,48,68:0,61,8,53",
                          "type": "0,60,16"
                        }
                      },
                      {
                        "$type": "property",
                        "name": "capture",
                        "text": "`true` to initiate capture which will fire the listeners on the target Element *before* any descendant Elements.\nNormal events start with the target element and propagate upward to ancestor elements, whereas captured events propagate from the top of the DOM\ndownward to descendant elements. This option is the same as the useCapture parameter in the javascript addEventListener method.\n",
                        "type": "Boolean",
                        "src": {
                          "name": "0,62,33",
                          "text": "0,62,41,113:0,63,8,273",
                          "type": "0,62,16"
                        }
                      }
                    ],
                    "src": {
                      "name": "0,45,25",
                      "text": "0,45,34,55:0,46,8,134",
                      "type": "0,45,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,66,0",
                  "text": "0,24,8,290"
                }
              },
              {
                "$type": "method",
                "deprecatedMessage": "Use <a href='#!/api/Ext-method-on'>Ext.on</a>('resize', fn) to attach a window resize listener.\n",
                "deprecatedVersion": "5.0.0",
                "name": "onWindowResize",
                "text": "Adds a listener to be notified when the browser window is resized and provides resize event buffering (100 milliseconds),\npasses new viewport width and height to handlers.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The handler function the window resize event invokes.\n",
                    "type": "Function",
                    "src": {
                      "name": "0,77,26",
                      "text": "0,77,29,54",
                      "type": "0,77,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "The scope (<code>this</code> reference) in which the handler function executes. Defaults to the browser window.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,78,26",
                      "text": "0,78,32,112",
                      "type": "0,78,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "optional": true,
                    "text": "Options object as passed to <a href='#!/api/Ext.dom.Element-method-addListener'>Ext.dom.Element#addListener</a>\n",
                    "type": "Boolean",
                    "src": {
                      "name": "0,79,27",
                      "text": "0,79,36,64",
                      "type": "0,79,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedMessage": "0,80,8",
                  "deprecatedVersion": "0,80,8",
                  "name": "0,82,0",
                  "text": "0,75,8,172"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "onWindowUnload",
                "text": "Adds a listener to be notified when the browser window is unloaded.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The handler function the window unload event invokes.\n",
                    "type": "Function",
                    "src": {
                      "name": "0,92,26",
                      "text": "0,92,29,54",
                      "type": "0,92,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "The scope (<code>this</code> reference) in which the handler function executes. Defaults to the browser window.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,93,26",
                      "text": "0,93,32,112",
                      "type": "0,93,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "options",
                    "text": "Options object as passed to <a href='#!/api/Ext.dom.Element-method-addListener'>Ext.dom.Element#addListener</a>\n",
                    "type": "Boolean",
                    "src": {
                      "name": "0,94,26",
                      "text": "0,94,34,64",
                      "type": "0,94,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,95,8",
                  "name": "0,97,0",
                  "text": "0,91,8,68"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "purgeElement",
                "text": "Recursively removes all previous added listeners from an element and its children.\nTypically you will use <a href='#!/api/Ext.dom.Element-method-clearListeners'>Ext.dom.Element#clearListeners</a> directly on an Element\nin favor of calling this method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id or html element from which\nto remove all event handlers.\n",
                    "type": "String/Ext.dom.Element/HTMLElement/Window",
                    "src": {
                      "name": "0,109,59",
                      "text": "0,109,62,34:0,110,8,30",
                      "type": "0,109,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "(optional) The name of the event.\n",
                    "type": "String",
                    "src": {
                      "name": "0,111,24",
                      "text": "0,111,34,34",
                      "type": "0,111,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,112,8",
                  "name": "0,114,0",
                  "text": "0,106,8,201"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "removeAll",
                "text": "Removes all event handers from an element.  Typically you will use <a href='#!/api/Ext.dom.Element-method-clearListeners'>Ext.dom.Element#clearListeners</a> directly on an Element in favor of calling this method.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id or html element from which\nto remove all event handlers.\n",
                    "type": "String/Ext.dom.Element/HTMLElement/Window",
                    "src": {
                      "name": "0,125,59",
                      "text": "0,125,62,34:0,126,8,30",
                      "type": "0,125,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,127,8",
                  "name": "0,129,0",
                  "text": "0,123,8,162"
                }
              },
              {
                "$type": "method",
                "name": "removeListener",
                "text": "Removes an event handler from an element.  The shorthand version <a href='#!/api/Ext.EventManager-method-un'>un</a> is equivalent.  Typically\nyou will use <a href='#!/api/Ext.dom.Element-method-removeListener'>Ext.dom.Element#removeListener</a> directly on an Element in favor of calling this version.\n\n<a href='#!/api/Ext.EventManager-method-on'>Ext.EventManager#on</a> is an alias for <a href='#!/api/Ext.EventManager-method-addListener'>Ext.EventManager#addListener</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id or html element from which to remove the listener.\n",
                    "type": "String/Ext.dom.Element/HTMLElement/Window",
                    "src": {
                      "name": "0,143,59",
                      "text": "0,143,62,58",
                      "type": "0,143,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "eventName",
                    "text": "The name of the event.\n",
                    "type": "String",
                    "src": {
                      "name": "0,144,24",
                      "text": "0,144,34,23",
                      "type": "0,144,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The handler function to remove. **This must be a reference to the function passed\ninto the <a href='#!/api/Ext.EventManager-method-addListener'>addListener</a> call.**\n",
                    "type": "Function",
                    "src": {
                      "name": "0,145,26",
                      "text": "0,145,29,82:0,146,8,38",
                      "type": "0,145,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "If a scope (`this` reference) was specified when the listener was added,\nthen this must refer to the same object.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,147,24",
                      "text": "0,147,30,73:0,148,8,41",
                      "type": "0,147,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,150,0",
                  "text": "0,138,8,296"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "removeResizeListener",
                "text": "Removes the passed window resize listener.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The method the event invokes\n",
                    "type": "Function",
                    "src": {
                      "name": "0,160,26",
                      "text": "0,160,29,29",
                      "type": "0,160,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "The scope of handler\n",
                    "type": "Object",
                    "src": {
                      "name": "0,161,26",
                      "text": "0,161,32,21",
                      "type": "0,161,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,162,8",
                  "name": "0,164,0",
                  "text": "0,159,8,43"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "removeUnloadListener",
                "text": "Removes the passed window unload listener.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "fn",
                    "text": "The method the event invokes\n",
                    "type": "Function",
                    "src": {
                      "name": "0,174,26",
                      "text": "0,174,29,29",
                      "type": "0,174,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "scope",
                    "text": "The scope of handler\n",
                    "type": "Object",
                    "src": {
                      "name": "0,175,26",
                      "text": "0,175,32,21",
                      "type": "0,175,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,176,8",
                  "name": "0,178,0",
                  "text": "0,173,8,43"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "stopEvent",
                "text": "Stop the event (preventDefault and stopPropagation)\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event to stop\n",
                    "type": "Event",
                    "src": {
                      "name": "0,188,23",
                      "text": "0,188,29,18",
                      "type": "0,188,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,189,8",
                  "name": "0,191,0",
                  "text": "0,187,8,52"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "stopPropagation",
                "text": "Cancels bubbling of the event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event to stop bubbling.\n",
                    "type": "Event",
                    "src": {
                      "name": "0,202,23",
                      "text": "0,202,29,28",
                      "type": "0,202,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,203,8",
                  "name": "0,205,0",
                  "text": "0,201,8,31"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "preventDefault",
                "text": "Prevents the browsers default handling of the event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event to prevent the default\n",
                    "type": "Event",
                    "src": {
                      "name": "0,220,23",
                      "text": "0,220,29,33",
                      "type": "0,220,16"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,221,8",
                  "name": "0,223,0",
                  "text": "0,219,8,53"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "getId",
                "text": "Get the id of the element. If one has not been assigned, automatically assign it.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "element",
                    "text": "The element to get the id for.\n",
                    "type": "HTMLElement/Ext.dom.Element",
                    "src": {
                      "name": "0,247,45",
                      "text": "0,247,53,31",
                      "type": "0,247,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "id\n",
                    "type": "String",
                    "src": {
                      "text": "0,248,25,3",
                      "type": "0,248,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,249,8",
                  "name": "0,251,0",
                  "text": "0,246,8,82"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "getRelatedTarget",
                "text": "Gets the related target from the event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event\n",
                    "type": "Object",
                    "src": {
                      "name": "0,262,24",
                      "text": "0,262,30,10",
                      "type": "0,262,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The related target.\n",
                    "type": "HTMLElement",
                    "src": {
                      "text": "0,263,30,20",
                      "type": "0,263,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,264,8",
                  "name": "0,266,0",
                  "text": "0,261,8,40"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "getPageX",
                "text": "Gets the x coordinate from the event\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event\n",
                    "type": "Object",
                    "src": {
                      "name": "0,285,24",
                      "text": "0,285,30,10",
                      "type": "0,285,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The x coordinate\n",
                    "type": "Number",
                    "src": {
                      "text": "0,286,25,17",
                      "type": "0,286,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,287,8",
                  "name": "0,289,0",
                  "text": "0,284,8,37"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "getPageXY",
                "text": "Gets the x & y coordinate from the event\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event\n",
                    "type": "Object",
                    "src": {
                      "name": "0,299,24",
                      "text": "0,299,30,10",
                      "type": "0,299,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The x/y coordinate\n",
                    "type": "Number[]",
                    "src": {
                      "text": "0,300,27,19",
                      "type": "0,300,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,301,8",
                  "name": "0,303,0",
                  "text": "0,298,8,41"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "getPageY",
                "text": "Gets the y coordinate from the event\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event\n",
                    "type": "Object",
                    "src": {
                      "name": "0,324,24",
                      "text": "0,324,30,10",
                      "type": "0,324,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The y coordinate\n",
                    "type": "Number",
                    "src": {
                      "text": "0,325,25,17",
                      "type": "0,325,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,326,8",
                  "name": "0,328,0",
                  "text": "0,323,8,37"
                }
              },
              {
                "$type": "method",
                "deprecatedVersion": "5.0.0",
                "name": "getTarget",
                "text": "Gets the target of the event.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "event",
                    "text": "The event\n",
                    "type": "Object",
                    "src": {
                      "name": "0,338,24",
                      "text": "0,338,30,10",
                      "type": "0,338,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "target\n",
                    "type": "HTMLElement",
                    "src": {
                      "text": "0,339,30,7",
                      "type": "0,339,17"
                    }
                  }
                ],
                "src": {
                  "deprecatedVersion": "0,340,8",
                  "name": "0,342,0",
                  "text": "0,337,8,30"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "deprecatedVersion": "5.0.0",
                "name": "resolveTextNode",
                "text": "Resolve any text nodes accounting for browser differences.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "node",
                    "text": "The node\n",
                    "type": "HTMLElement",
                    "src": {
                      "name": "0,358,29",
                      "text": "0,358,34,9",
                      "type": "0,358,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The resolved node\n",
                    "type": "HTMLElement",
                    "src": {
                      "text": "0,359,30,18",
                      "type": "0,359,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,357,8",
                  "deprecatedVersion": "0,360,8",
                  "name": "0,362,0",
                  "text": "0,356,8,59"
                }
              },
              {
                "$type": "method",
                "inheritdoc": "Ext.EventManager#addListener",
                "name": "on",
                "src": {
                  "inheritdoc": "0,380,8",
                  "name": "0,379,16"
                }
              },
              {
                "$type": "method",
                "inheritdoc": "Ext.EventManager#removeListener",
                "name": "un",
                "src": {
                  "inheritdoc": "0,387,8",
                  "name": "0,386,16"
                }
              }
            ]
          }
        ],
        "src": {
          "deprecatedVersion": "0,15,4",
          "name": "0,2,11",
          "singleton": "0,14,4",
          "text": "0,3,4,277"
        }
      }
    ]
  },
  "version": 1
}