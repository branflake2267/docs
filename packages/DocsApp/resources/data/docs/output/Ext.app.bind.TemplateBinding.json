{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/app/bind/TemplateBinding.js",
    "../../../ext/packages/core/src/app/bind/BaseBinding.js",
    "../../../ext/packages/core/src/util/Schedulable.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "extends": "Ext.app.bind.BaseBinding",
        "name": "Ext.app.bind.TemplateBinding",
        "requires": "Ext.app.bind.Multi,Ext.app.bind.Template",
        "text": "This class is created to manage a template against a `ViewModel`. A binding of this\ntype uses <a href='#!/api/Ext.app.bind.Template'>Ext.app.bind.Template</a> to process the template text so see that\nclass for details on template syntax.\n\nThe bindings to provide the data needed by the template are managed here.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "single",
                "optional": true,
                "since": "5.0.0",
                "text": "This option instructs the binding to call its `destroy` method immediately after\ndelivering the initial value.\n",
                "type": "Boolean",
                "value": "false",
                "src": {
                  "name": "1,17,24",
                  "since": "1,20,15",
                  "text": "1,18,8,111",
                  "type": "1,17,14",
                  "value": "1,17,31"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "access": "private",
                "name": "getScheduler",
                "text": "This method returns the `Scheduler` for this item.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Ext.util.Scheduler",
                    "src": {
                      "type": "2,37,21"
                    }
                  }
                ],
                "src": {
                  "access": "2,33,-1",
                  "name": "2,39,0",
                  "text": "2,36,12,51"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "schedule",
                "text": "Schedules this item with the associated <a href='#!/api/Ext.util.Scheduler'>Ext.util.Scheduler</a>.\n",
                "src": {
                  "access": "2,33,-1",
                  "name": "2,46,0",
                  "text": "2,44,12,62"
                }
              },
              {
                "$type": "method",
                "name": "sort",
                "text": "This method should be overridden by items that have dependencies to insert. The\nstandard form would be:\n\n     sort: function () {\n         this.getScheduler().sortItems(this.dependencies);\n     }\n\nThis example assumes the item has a \"dependencies\" array to pass to the scheduler.\n",
                "src": {
                  "name": "2,83,20",
                  "text": "2,84,12,280"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "unschedule",
                "text": "Unschedules this item with the associated <a href='#!/api/Ext.util.Scheduler'>Ext.util.Scheduler</a>.\n",
                "src": {
                  "access": "2,33,-1",
                  "name": "2,68,0",
                  "text": "2,66,12,64"
                }
              }
            ]
          }
        ],
        "src": {
          "extends": "0,9,0",
          "name": "0,8,0",
          "requires": "0,12,0,0:0,13,0,0",
          "text": "0,2,4,280"
        }
      }
    ]
  },
  "version": 1
}