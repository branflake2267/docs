{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/data/schema/Namer.js",
    "../../../ext/packages/core/src/mixin/Factoryable.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "access": "protected",
        "alias": "namer.default",
        "mixins": "Ext.mixin.Factoryable",
        "name": "Ext.data.schema.Namer",
        "requires": "Ext.util.Inflector",
        "text": "This class provides name derivation methods for use by a `Schema`.\n\n# Caching\n\nBecause most name derivations are only textual manipulations of input strings, the\nresults can be cached. This is handled by the `apply` method by giving it the name of\nthe method to call. For example:\n\n     var str = namer.capitalize('foo'); //  = \"Foo\"\n\n     var str = namer.apply('capitalize', 'foo');\n\nThe return value of the second call (using `apply`) is the same as the first, however,\nthe results of `capitalize` are cached. This allows repeated calls to `apply` given the\nsame operation and string to avoid the extra string manipulation.\n\n# Usage\n\nThis class is not intended to be created by application code. It is created by `Schema`\ninstances as directed by the `namer` config. Application code can derive from this\nclass and set the `namer` config to customize naming conventions used by the `Schema`.\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "fieldRole",
                "template": true,
                "text": "Given the name of a foreign key field, return the role of the related entity. For\nexample, fields like \"fooId\" or \"foo_id\" this implementation returns \"foo\".\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "name",
                    "src": {
                      "name": "0,51,0"
                    }
                  }
                ],
                "src": {
                  "name": "0,51,0",
                  "template": "0,49,8",
                  "text": "0,47,8,158"
                }
              },
              {
                "$type": "method",
                "name": "manyToOne",
                "text": "Returns the name for a one-to-many association given the left and right type and\nthe associating `role`.\n\nIn many cases the `role` matches the target type. For example, an OrderItem might\nhave an \"orderId\" field which would have a `role` of \"order\". If this is a reference\nto an Order entity then the association name will be \"OrderOrderItems\".\n\nWhen the `role` does not match, it is included in the association name. For example,\nconsider a Ticket entity with a \"creatorId\" field that references a User entity.\nThe `role` of that field will (by default) be \"creator\". The returned association\nname will be \"UserCreatorTickets\".\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "leftType",
                    "src": {
                      "name": "0,176,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "leftRole",
                    "src": {
                      "name": "0,176,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "rightType",
                    "src": {
                      "name": "0,176,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "rightRole",
                    "src": {
                      "name": "0,176,0"
                    }
                  }
                ],
                "src": {
                  "name": "0,176,0",
                  "text": "0,164,8,629"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "factoryConfig",
                "optional": true,
                "text": "If this property is specified by the target class of this mixin its properties are\nused to configure the created <a href='#!/api/Ext.Factory'>Ext.Factory</a>.\n",
                "type": "Object",
                "src": {
                  "name": "1,295,28",
                  "text": "1,296,8,128",
                  "type": "1,295,19"
                }
              }
            ]
          }
        ],
        "src": {
          "access": "0,24,4",
          "alias": "0,35,0",
          "mixins": "0,28,0",
          "name": "0,26,0",
          "requires": "0,32,0",
          "text": "0,2,4,895"
        }
      }
    ]
  },
  "version": 1
}