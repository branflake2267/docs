{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/dd/ScrollManager.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "name": "Ext.dd.ScrollManager",
        "requires": "Ext.dd.DragDropManager",
        "singleton": true,
        "text": "Provides automatic scrolling of overflow regions in the page during drag operations.\n\nThe ScrollManager configs will be used as the defaults for any scroll container registered with it, but you can also\noverride most of the configs per scroll container by adding a ddScrollConfig object to the target element that\ncontains these properties: <a href='#!/api/Ext.dd.ScrollManager-property-hthresh'>hthresh</a>, <a href='#!/api/Ext.dd.ScrollManager-property-vthresh'>vthresh</a>, <a href='#!/api/Ext.dd.ScrollManager-property-increment'>increment</a> and <a href='#!/api/Ext.dd.ScrollManager-property-frequency'>frequency</a>. Example\nusage:\n\n    var el = Ext.get('scroll-ct');\n    el.ddScrollConfig = {\n        vthresh: 50,\n        hthresh: -1,\n        frequency: 100,\n        increment: 200\n    };\n    Ext.dd.ScrollManager.register(el);\n\nNote: This class is designed to be used in \"Point Mode\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "register",
                "text": "Registers new overflow element(s) to auto scroll\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id of or the element to be scrolled or an array of either\n",
                    "type": "String/HTMLElement/Ext.dom.Element/String[]/HTMLElement[]/Ext.dom.Element[]",
                    "src": {
                      "name": "0,190,93",
                      "text": "0,191,8,62",
                      "type": "0,190,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,193,0",
                  "text": "0,189,8,49"
                }
              },
              {
                "$type": "method",
                "name": "unregister",
                "text": "Unregisters overflow element(s) so they are no longer scrolled\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id of or the element to be removed or an array of either\n",
                    "type": "String/HTMLElement/Ext.dom.Element/String[]/HTMLElement[]/Ext.dom.Element[]",
                    "src": {
                      "name": "0,206,93",
                      "text": "0,207,8,61",
                      "type": "0,206,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,209,0",
                  "text": "0,205,8,63"
                }
              },
              {
                "$type": "method",
                "name": "refreshCache",
                "text": "Manually trigger a cache refresh.\n",
                "src": {
                  "name": "0,260,0",
                  "text": "0,258,8,34"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "vthresh",
                "text": "The number of pixels from the top or bottom edge of a container the pointer needs to be to trigger scrolling\n",
                "src": {
                  "name": "0,223,0",
                  "text": "0,221,8,109"
                }
              },
              {
                "$type": "property",
                "name": "hthresh",
                "text": "The number of pixels from the right or left edge of a container the pointer needs to be to trigger scrolling\n",
                "src": {
                  "name": "0,228,0",
                  "text": "0,226,8,109"
                }
              },
              {
                "$type": "property",
                "name": "increment",
                "text": "The number of pixels to scroll in each scroll increment\n",
                "src": {
                  "name": "0,233,0",
                  "text": "0,231,8,56"
                }
              },
              {
                "$type": "property",
                "name": "frequency",
                "text": "The frequency of scrolls in milliseconds\n",
                "src": {
                  "name": "0,238,0",
                  "text": "0,236,8,41"
                }
              },
              {
                "$type": "property",
                "name": "animate",
                "text": "True to animate the scroll\n",
                "src": {
                  "name": "0,243,0",
                  "text": "0,241,8,27"
                }
              },
              {
                "$type": "property",
                "name": "animDuration",
                "text": "The animation duration in seconds - MUST BE less than Ext.dd.ScrollManager.frequency!\n",
                "src": {
                  "name": "0,248,0",
                  "text": "0,246,8,86"
                }
              },
              {
                "$type": "property",
                "name": "ddGroup",
                "text": "The named drag drop <a href='#!/api/Ext.dd.DragSource-cfg-ddGroup'>Ext.dd.DragSource#ddGroup</a> to which this container belongs. If a ddGroup is\nspecified, then container scrolling will only occur when a dragged object is in the same ddGroup.\n",
                "type": "String",
                "src": {
                  "name": "0,251,27",
                  "text": "0,252,8,207",
                  "type": "0,251,19"
                }
              }
            ]
          }
        ],
        "src": {
          "name": "0,20,0",
          "requires": "0,23,0",
          "singleton": "0,21,0",
          "text": "0,2,4,688"
        }
      }
    ]
  },
  "version": 1
}