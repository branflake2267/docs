{
  "$type": "doxi",
  "files": [
    "../../../packages/exporter/src/exporter/file/excel/Worksheet.js",
    "../../../packages/exporter/src/exporter/file/Base.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "extends": "Ext.exporter.file.Base",
        "name": "Ext.exporter.file.excel.Worksheet",
        "text": "This class is used to create an xml Excel Worksheet\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "id",
                "text": "\nUnique id for this object. Auto generated when missing.\n",
                "type": "String",
                "src": {
                  "name": "1,14,26",
                  "text": "1,15,12,57",
                  "type": "1,14,18"
                }
              },
              {
                "$type": "property",
                "name": "name",
                "text": "(required)\n\nThis value must be unique within the list of sheet names in the workbook. Sheet names must conform to\nthe legal names of Excel sheets and, thus, cannot contain /, \\, ?, *, [, ] and are limited to 31 chars.\n",
                "type": "String",
                "src": {
                  "name": "0,9,26",
                  "text": "0,9,31,11:0,10,12,207",
                  "type": "0,9,18"
                }
              },
              {
                "$type": "property",
                "name": "protection",
                "text": "\nThis attribute indicates whether or not the worksheet is protected. When the worksheet is\nnot protected, cell-level protection has no effect.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,16,27",
                  "text": "0,17,12,143",
                  "type": "0,16,18"
                }
              },
              {
                "$type": "property",
                "name": "rightToLeft",
                "text": "\nIf this attribute is `true`, the window displays from right to left, but if this element is not\nspecified (or `false`), the window displays from left to right. The Spreadsheet component does not\nsupport this attribute.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,23,27",
                  "text": "0,24,12,220",
                  "type": "0,23,18"
                }
              },
              {
                "$type": "property",
                "name": "showGridLines",
                "optional": true,
                "text": "\nShould grid lines be visible in this spreadsheet?\n",
                "type": "Boolean",
                "value": "true",
                "src": {
                  "name": "0,31,28",
                  "text": "0,32,12,51",
                  "type": "0,31,18",
                  "value": "0,31,42"
                }
              },
              {
                "$type": "property",
                "name": "tables",
                "text": "\nCollection of tables available in this worksheet\n",
                "type": "Ext.exporter.file.excel.Table[]",
                "src": {
                  "name": "0,37,51",
                  "text": "0,38,12,50",
                  "type": "0,37,18"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "addTable",
                "text": "Convenience method to add tables. You can also use workbook.getTables().add(config).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "type": "Object/Array",
                    "src": {
                      "name": "0,101,30",
                      "type": "0,101,16"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.exporter.file.excel.Table/Ext.exporter.file.excel.Table[]",
                    "src": {
                      "type": "0,102,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,104,0",
                  "text": "0,100,8,85"
                }
              },
              {
                "$type": "method",
                "name": "checkCollection",
                "text": "This method could be used in config appliers that need to initialize a\nCollection that has items of type className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "data",
                    "src": {
                      "name": "1,44,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "dataCollection",
                    "src": {
                      "name": "1,45,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,46,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "*",
                    "src": {
                      "type": "1,47,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,49,0",
                  "text": "1,41,8,117"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "constructCollection",
                "text": "Create a new Collection with a decoder for the specified className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,64,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.util.Collection",
                    "src": {
                      "type": "1,65,18"
                    }
                  }
                ],
                "src": {
                  "access": "1,67,8",
                  "name": "1,69,0",
                  "text": "1,62,8,69"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getCollectionDecoder",
                "text": "Builds a Collection decoder for the specified className.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "className",
                    "src": {
                      "name": "1,78,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Function",
                    "src": {
                      "type": "1,79,18"
                    }
                  }
                ],
                "src": {
                  "access": "1,81,8",
                  "name": "1,83,0",
                  "text": "1,76,8,58"
                }
              },
              {
                "$type": "method",
                "name": "getRenderData",
                "text": "Return the data used when rendering the template\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "1,101,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,103,0",
                  "text": "1,99,8,50"
                }
              },
              {
                "$type": "method",
                "name": "getTable",
                "text": "Convenience method to fetch a table by its id.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "src": {
                      "name": "0,110,15"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "Ext.exporter.file.excel.Table",
                    "src": {
                      "type": "0,111,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,113,0",
                  "text": "0,109,8,47"
                }
              },
              {
                "$type": "method",
                "name": "getTables",
                "items": [
                  {
                    "$type": "return",
                    "text": "\nReturns the collection of tables available in this worksheet\n",
                    "type": "Ext.util.Collection",
                    "src": {
                      "text": "0,47,8,62",
                      "type": "0,46,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,45,16"
                }
              },
              {
                "$type": "method",
                "name": "render",
                "text": "Renders the content according to the template provided to the class\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "1,92,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,94,0",
                  "text": "1,90,8,69"
                }
              }
            ]
          }
        ],
        "src": {
          "extends": "0,5,0",
          "name": "0,4,0",
          "text": "0,2,4,52"
        }
      }
    ]
  },
  "version": 1
}