{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/form/Labelable.js",
    "../../../ext/classic/theme-neutral/sass/var/form/field/Base.scss"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "extends": "Ext.Mixin",
        "name": "Ext.form.Labelable",
        "requires": "Ext.XTemplate,Ext.overrides.dom.Element",
        "text": "A mixin which allows a component to be configured and decorated with a label and/or error message as is\ncommon for form fields. This is used by e.g. Ext.form.field.Base and Ext.form.FieldContainer\nto let them be managed by the Field layout.\n\nNOTE: This mixin is mainly for internal library use and most users should not need to use it directly. It\nis more likely you will want to use one of the component classes that import this mixin, such as\nExt.form.field.Base or Ext.form.FieldContainer.\n\nUse of this mixin does not make a component a field in the logical sense, meaning it does not provide any\nlogic or state related to values or validation; that is handled by the related Ext.form.field.Field\nmixin. These two mixins may be used separately (for example Ext.form.FieldContainer is Labelable but not a\nField), or in combination (for example Ext.form.field.Base implements both and has logic for connecting the\ntwo.)\n\nComponent classes which use this mixin should use the Field layout\nor a derivation thereof to properly size and position the label and message according to the component config.\nThey must also call the <a href='#!/api/Ext.form.Labelable-method-initLabelable'>initLabelable</a> method during component initialization to ensure the mixin gets\nset up correctly.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "activeError",
                "text": "If specified, then the component will be displayed with this value as its active error when first rendered. Use\n<a href='#!/api/Ext.form.Labelable-method-setActiveError'>setActiveError</a> or <a href='#!/api/Ext.form.Labelable-method-unsetActiveError'>unsetActiveError</a> to change it after component creation.\n",
                "type": "String",
                "src": {
                  "name": "0,322,22",
                  "text": "0,323,8,204",
                  "type": "0,322,14"
                }
              },
              {
                "$type": "property",
                "name": "activeErrorsTpl",
                "text": "The template used to format the Array of error messages passed to <a href='#!/api/Ext.form.Labelable-method-setActiveErrors'>setActiveErrors</a> into a single HTML\nstring. if the <a href='#!/api/Ext.form.Labelable-cfg-msgTarget'>msgTarget</a> is title, it defaults to a list separated by new lines. Otherwise, it\nrenders each message as an item in an unordered list.\n",
                "type": "String/String[]/Ext.XTemplate",
                "src": {
                  "name": "0,117,45",
                  "text": "0,118,8,268",
                  "type": "0,117,14"
                }
              },
              {
                "$type": "property",
                "name": "afterBodyEl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nat the end of the input containing element. If an `XTemplate` is used, the component's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a>\nserves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,344,46",
                  "text": "0,345,12,233",
                  "type": "0,344,18"
                }
              },
              {
                "$type": "property",
                "name": "afterLabelTextTpl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nafter the label text. If an `XTemplate` is used, the component's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a>\nserves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,392,46",
                  "text": "0,393,12,211",
                  "type": "0,392,18"
                }
              },
              {
                "$type": "property",
                "name": "afterLabelTpl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nafter the label element. If an `XTemplate` is used, the component's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a>\nserves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,360,46",
                  "text": "0,361,12,214",
                  "type": "0,360,18"
                }
              },
              {
                "$type": "property",
                "name": "afterSubTpl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nafter the <a href='#!/api/Ext.form.Labelable-method-getSubTplMarkup'>getSubTplMarkup</a>. If an `XTemplate` is used, the\ncomponent's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a> serves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,376,46",
                  "text": "0,377,12,239",
                  "type": "0,376,18"
                }
              },
              {
                "$type": "property",
                "name": "autoFitErrors",
                "text": "Whether to adjust the component's body width to make room for 'side'\n<a href='#!/api/Ext.form.Labelable-cfg-msgTarget'>msgTarget</a>.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,285,23",
                  "text": "0,286,8,104",
                  "type": "0,285,14"
                }
              },
              {
                "$type": "property",
                "name": "baseBodyCls",
                "text": "The CSS class to be applied to the body content element.\n",
                "type": "String",
                "src": {
                  "name": "0,183,22",
                  "text": "0,184,8,57",
                  "type": "0,183,14"
                }
              },
              {
                "$type": "property",
                "name": "beforeBodyEl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nat the beginning of the input containing element. If an `XTemplate` is used, the component's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a>\nserves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,336,46",
                  "text": "0,337,12,239",
                  "type": "0,336,18"
                }
              },
              {
                "$type": "property",
                "name": "beforeLabelTextTpl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nbefore the label text. If an `XTemplate` is used, the component's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a>\nserves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,384,46",
                  "text": "0,385,12,212",
                  "type": "0,384,18"
                }
              },
              {
                "$type": "property",
                "name": "beforeLabelTpl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nbefore the label element. If an `XTemplate` is used, the component's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a>\nserves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,352,46",
                  "text": "0,353,12,215",
                  "type": "0,352,18"
                }
              },
              {
                "$type": "property",
                "name": "beforeSubTpl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\nbefore the <a href='#!/api/Ext.form.Labelable-method-getSubTplMarkup'>getSubTplMarkup</a>. If an `XTemplate` is used, the\ncomponent's <a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a> serves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,368,46",
                  "text": "0,369,12,240",
                  "type": "0,368,18"
                }
              },
              {
                "$type": "property",
                "name": "errorMsgCls",
                "text": "The CSS class to be applied to the error message element.\n",
                "type": "String",
                "src": {
                  "name": "0,172,22",
                  "text": "0,173,8,58",
                  "type": "0,172,14"
                }
              },
              {
                "$type": "property",
                "name": "fieldBodyCls",
                "text": "An extra CSS class to be applied to the body content element in addition to <a href='#!/api/Ext.form.Labelable-cfg-baseBodyCls'>baseBodyCls</a>.\n",
                "type": "String",
                "src": {
                  "name": "0,195,22",
                  "text": "0,196,8,98",
                  "type": "0,195,14"
                }
              },
              {
                "$type": "property",
                "name": "fieldLabel",
                "text": "The label for the field. It gets appended with the <a href='#!/api/Ext.form.Labelable-cfg-labelSeparator'>labelSeparator</a>, and its position and sizing is\ndetermined by the <a href='#!/api/Ext.form.Labelable-cfg-labelAlign'>labelAlign</a> and <a href='#!/api/Ext.form.Labelable-cfg-labelWidth'>labelWidth</a> configs.\n",
                "type": "String",
                "src": {
                  "name": "0,207,22",
                  "text": "0,208,8,178",
                  "type": "0,207,14"
                }
              },
              {
                "$type": "property",
                "name": "formItemCls",
                "text": "A CSS class to be applied to the outermost element to denote that it is participating in the form field layout.\n",
                "type": "String",
                "src": {
                  "name": "0,145,22",
                  "text": "0,146,8,112",
                  "type": "0,145,14"
                }
              },
              {
                "$type": "property",
                "name": "hideEmptyLabel",
                "text": "When set to true, the label element (<a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a> and <a href='#!/api/Ext.form.Labelable-cfg-labelSeparator'>labelSeparator</a>) will be automatically\nhidden if the <a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a> is empty. Setting this to false will cause the empty label element to be\nrendered and space to be reserved for it; this is useful if you want a field without a label to line up with\nother labeled fields in the same form.\n\nIf you wish to unconditionall hide the label even if a non-empty fieldLabel is configured, then set the\n<a href='#!/api/Ext.form.Labelable-cfg-hideLabel'>hideLabel</a> config to true.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,267,23",
                  "text": "0,268,8,503",
                  "type": "0,267,14"
                }
              },
              {
                "$type": "property",
                "name": "hideLabel",
                "text": "Set to true to completely hide the label element (<a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a> and <a href='#!/api/Ext.form.Labelable-cfg-labelSeparator'>labelSeparator</a>). Also see\n<a href='#!/api/Ext.form.Labelable-cfg-hideEmptyLabel'>hideEmptyLabel</a>, which controls whether space will be reserved for an empty fieldLabel.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,260,23",
                  "text": "0,261,8,205",
                  "type": "0,260,14"
                }
              },
              {
                "$type": "property",
                "name": "invalidCls",
                "text": "The CSS class to use when marking the component invalid.\n",
                "type": "String",
                "src": {
                  "name": "0,201,22",
                  "text": "0,202,8,57",
                  "type": "0,201,14"
                }
              },
              {
                "$type": "property",
                "name": "labelAlign",
                "text": "Controls the position and alignment of the <a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a>. Valid values are:\n\n  - \"left\" (the default) - The label is positioned to the left of the field, with its text aligned to the left.\n    Its width is determined by the <a href='#!/api/Ext.form.Labelable-cfg-labelWidth'>labelWidth</a> config.\n  - \"top\" - The label is positioned above the field.\n  - \"right\" - The label is positioned to the left of the field, with its text aligned to the right.\n    Its width is determined by the <a href='#!/api/Ext.form.Labelable-cfg-labelWidth'>labelWidth</a> config.\n",
                "type": "String",
                "src": {
                  "name": "0,214,22",
                  "text": "0,215,8,474",
                  "type": "0,214,14"
                }
              },
              {
                "$type": "property",
                "name": "labelAttrTpl",
                "text": "An optional string or `XTemplate` configuration to insert in the field markup\ninside the label element (as attributes). If an `XTemplate` is used, the component's\n<a href='#!/api/Ext.Component-cfg-renderData'>Ext.Component#renderData</a> serves as the context.\n",
                "type": "String/Array/Ext.XTemplate",
                "src": {
                  "name": "0,400,46",
                  "text": "0,401,12,231",
                  "type": "0,400,18"
                }
              },
              {
                "$type": "property",
                "name": "labelCls",
                "text": "The CSS class to be applied to the label element. This (single) CSS class is used to formulate the renderSelector\nand drives the field layout where it is concatenated with a hyphen ('-') and <a href='#!/api/Ext.form.Labelable-cfg-labelAlign'>labelAlign</a>. To add\nadditional classes, use <a href='#!/api/Ext.form.Labelable-cfg-labelClsExtra'>labelClsExtra</a>.\n",
                "type": "String",
                "src": {
                  "name": "0,151,22",
                  "text": "0,152,8,267",
                  "type": "0,151,14"
                }
              },
              {
                "$type": "property",
                "name": "labelClsExtra",
                "text": "An optional string of one or more additional CSS classes to add to the label element. Defaults to empty.\n",
                "type": "String",
                "src": {
                  "name": "0,167,22",
                  "text": "0,168,8,105",
                  "type": "0,167,14"
                }
              },
              {
                "$type": "property",
                "name": "labelPad",
                "text": "The amount of space in pixels between the <a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a> and the field body.\nThis defaults to `5` for compatibility with Ext JS 4, however, as of Ext JS 5\nthe space between the label and the body can optionally be determined by the theme\nusing the <a href='#!/api/Ext.form.Labelable-var-$form-label-horizontal-spacing'>$form-label-horizontal-spacing</a> (for side-aligned labels) and\n<a href='#!/api/Ext.form.Labelable-var-$form-label-vertical-spacing'>$form-label-vertical-spacing</a> (for top-aligned labels) SASS variables.\nIn order for the stylesheet values as to take effect, you must use a labelPad value\nof <a href='#!/api/null'>null</a>.\n",
                "type": "Number",
                "src": {
                  "name": "0,233,22",
                  "text": "0,234,8,497",
                  "type": "0,233,14"
                }
              },
              {
                "$type": "property",
                "name": "labelSeparator",
                "text": "Character(s) to be inserted at the end of the <a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a>.\n\nSet to empty string to hide the separator completely.\n",
                "type": "String",
                "src": {
                  "name": "0,246,22",
                  "text": "0,247,8,133",
                  "type": "0,246,14"
                }
              },
              {
                "$type": "property",
                "name": "labelStyle",
                "text": "A CSS style specification string to apply directly to this field's label.\n",
                "type": "String",
                "src": {
                  "name": "0,255,22",
                  "text": "0,256,8,74",
                  "type": "0,255,14"
                }
              },
              {
                "$type": "property",
                "name": "labelWidth",
                "text": "The width of the <a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a> in pixels. Only applicable if <a href='#!/api/Ext.form.Labelable-cfg-labelAlign'>labelAlign</a>\nis set to \"left\" or \"right\".\n",
                "type": "Number",
                "src": {
                  "name": "0,226,22",
                  "text": "0,227,8,116",
                  "type": "0,226,14"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "labelableRenderTpl",
                "text": "The rendering template for the field decorations. Component classes using this mixin\nshould include logic to use this as their <a href='#!/api/Ext.Component-cfg-renderTpl'>Ext.Component#renderTpl</a>,\nand implement the <a href='#!/api/Ext.form.Labelable-method-getSubTplMarkup'>getSubTplMarkup</a> method to generate the field body content.\n",
                "type": "String/String[]/Ext.XTemplate",
                "src": {
                  "access": "0,72,8",
                  "name": "0,68,45",
                  "text": "0,69,8,256",
                  "type": "0,68,14"
                }
              },
              {
                "$type": "property",
                "name": "msgTarget",
                "text": "The location where the error message text should display. Must be one of the following values:\n\n  - `qtip` Display a quick tip containing the message when the user hovers over the field.\n    This is the default.\n\n    **<a href='#!/api/Ext.tip.QuickTipManager-method-init'>Ext.tip.QuickTipManager#init</a> must have been called for this setting to work.**\n\n  - `title` Display the message in a default browser title attribute popup.\n  - `under` Add a block div beneath the field containing the error message.\n  - `side` Add an error icon to the right of the field, displaying the message in a popup on hover.\n  - `none` Don't display any error message. This might be useful if you are implementing custom error display.\n  - `[element id]` Add the error message directly to the innerHTML of the specified element.\n",
                "type": "String",
                "src": {
                  "name": "0,292,22",
                  "text": "0,293,8,763",
                  "type": "0,292,14"
                }
              },
              {
                "$type": "property",
                "name": "preventMark",
                "text": "true to disable displaying any <a href='#!/api/Ext.form.Labelable-method-setActiveError'>setActiveError</a> set on this object.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,279,23",
                  "text": "0,280,8,89",
                  "type": "0,279,14"
                }
              }
            ]
          },
          {
            "$type": "events",
            "items": [
              {
                "$type": "event",
                "name": "errorchange",
                "text": "Fires when the active error message is changed via <a href='#!/api/Ext.form.Labelable-method-setActiveError'>setActiveError</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.form.Labelable",
                    "src": {
                      "name": "0,461,36",
                      "type": "0,461,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "error",
                    "text": "The active error message\n",
                    "type": "String",
                    "src": {
                      "name": "0,462,24",
                      "text": "0,462,30,25",
                      "type": "0,462,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,459,15",
                  "text": "0,460,8,76"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "getActiveError",
                "text": "Gets the active error message for this component, if any. This does not trigger validation on its own, it merely\nreturns any message that the component may already hold.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The active error message on the component; if there is no error, an empty string is returned.\n",
                    "type": "String",
                    "src": {
                      "text": "0,779,25,94",
                      "type": "0,779,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,781,0",
                  "text": "0,777,8,170"
                }
              },
              {
                "$type": "method",
                "name": "getActiveErrors",
                "text": "Gets an Array of any active error messages currently applied to the field. This does not trigger validation on\nits own, it merely returns any messages that the component may already hold.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The active error messages on the component; if there are no errors, an empty Array is\nreturned.\n",
                    "type": "String[]",
                    "src": {
                      "text": "0,809,27,86:0,810,8,10",
                      "type": "0,809,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,812,0",
                  "text": "0,807,8,188"
                }
              },
              {
                "$type": "method",
                "name": "getFieldLabel",
                "template": true,
                "text": "Returns the label for the field. Defaults to simply returning the <a href='#!/api/Ext.form.Labelable-cfg-fieldLabel'>fieldLabel</a> config. Can be overridden\nto provide a custom generated label.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The configured field label, or empty string if not defined\n",
                    "type": "String",
                    "src": {
                      "text": "0,523,25,59",
                      "type": "0,523,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,525,0",
                  "template": "0,522,8",
                  "text": "0,520,8,149"
                }
              },
              {
                "$type": "method",
                "name": "getInputId",
                "text": "Get the input id, if any, for this component. This is used as the \"for\" attribute on the label element.\nImplementing subclasses may also use this as e.g. the id for their own input element.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The input id\n",
                    "type": "String",
                    "src": {
                      "text": "0,770,25,13",
                      "type": "0,770,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,772,0",
                  "text": "0,768,8,190"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getLabelableRenderData",
                "text": "Generates the arguments for the field decorations <a href='#!/api/Ext.form.Labelable-cfg-labelableRenderTpl'>labelableRenderTpl</a>.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "data",
                    "text": "optional object to use as the base data object.  If provided,\nthis method will add properties to the base object instead of creating a new one.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,618,24",
                      "text": "0,618,29,62:0,619,8,82",
                      "type": "0,618,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The template arguments\n",
                    "type": "Object",
                    "src": {
                      "text": "0,620,25,23",
                      "type": "0,620,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,621,8",
                  "name": "0,623,0",
                  "text": "0,616,8,98"
                }
              },
              {
                "$type": "method",
                "access": "protected",
                "name": "getSubTplMarkup",
                "text": "Gets the markup to be inserted into the outer template's bodyEl. Defaults to empty string, should be implemented\nby classes including this mixin as needed.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The markup to be inserted\n",
                    "type": "String",
                    "src": {
                      "text": "0,760,25,26",
                      "type": "0,760,17"
                    }
                  }
                ],
                "src": {
                  "access": "0,761,8",
                  "name": "0,763,0",
                  "text": "0,758,8,156"
                }
              },
              {
                "$type": "method",
                "name": "hasActiveError",
                "text": "Tells whether the field currently has an active error message. This does not trigger validation on its own, it\nmerely looks for any message that the component may already hold.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Boolean",
                    "src": {
                      "type": "0,788,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,790,0",
                  "text": "0,786,8,177"
                }
              },
              {
                "$type": "method",
                "name": "hasVisibleLabel",
                "text": "Checks if the field has a visible label\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "True if the field has a visible label\n",
                    "type": "Boolean",
                    "src": {
                      "text": "0,748,26,38",
                      "type": "0,748,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,750,0",
                  "text": "0,747,8,40"
                }
              },
              {
                "$type": "method",
                "name": "initLabelable",
                "text": "Performs initialization of this mixin. Component classes using this mixin should call this method during their\nown initialization.\n",
                "src": {
                  "name": "0,469,0",
                  "text": "0,466,8,131"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "renderActiveError",
                "text": "Updates the rendered DOM to match the current activeError. This only updates the content and\nattributes, you'll have to call doComponentLayout to actually update the display.\n",
                "src": {
                  "access": "0,955,8",
                  "name": "0,959,0",
                  "text": "0,956,8,175"
                }
              },
              {
                "$type": "method",
                "name": "setActiveError",
                "text": "Sets the active error message to the given string. This replaces the entire error message contents with the given\nstring. Also see <a href='#!/api/Ext.form.Labelable-method-setActiveErrors'>setActiveErrors</a> which accepts an Array of messages and formats them according to the\n<a href='#!/api/Ext.form.Labelable-cfg-activeErrorsTpl'>activeErrorsTpl</a>. Note that this only updates the error message element's text and attributes, you'll\nhave to call doComponentLayout to actually update the field's layout to match. If the field extends <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a> you should call <a href='#!/api/Ext.form.field.Base-method-markInvalid'>Ext.form.field.Base#markInvalid</a> instead.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "msg",
                    "text": "The error message\n",
                    "type": "String",
                    "src": {
                      "name": "0,800,24",
                      "text": "0,800,28,18",
                      "type": "0,800,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,802,0",
                  "text": "0,795,8,540"
                }
              },
              {
                "$type": "method",
                "name": "setActiveErrors",
                "text": "Set the active error message to an Array of error messages. The messages are formatted into a single message\nstring using the <a href='#!/api/Ext.form.Labelable-cfg-activeErrorsTpl'>activeErrorsTpl</a>. Also see <a href='#!/api/Ext.form.Labelable-method-setActiveError'>setActiveError</a> which allows setting the entire error\ncontents with a single string. Note that this only updates the error message element's text and attributes,\nyou'll have to call doComponentLayout to actually update the field's layout to match. If the field extends\n<a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a> you should call <a href='#!/api/Ext.form.field.Base-method-markInvalid'>Ext.form.field.Base#markInvalid</a> instead.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "errors",
                    "text": "The error messages\n",
                    "type": "String[]",
                    "src": {
                      "name": "0,822,26",
                      "text": "0,822,33,19",
                      "type": "0,822,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,824,0",
                  "text": "0,817,8,543"
                }
              },
              {
                "$type": "method",
                "name": "setFieldDefaults",
                "text": "Applies a set of default configuration values to this Labelable instance. For each of the properties in the given\nobject, check if this component hasOwnProperty that config; if not then it's inheriting a default value from its\nprototype and we should apply the default value.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "defaults",
                    "text": "The defaults to apply to the object.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,991,24",
                      "text": "0,991,33,37",
                      "type": "0,991,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,993,0",
                  "text": "0,988,8,276"
                }
              },
              {
                "$type": "method",
                "name": "setFieldLabel",
                "text": "Set the label of this field.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "label",
                    "text": "The new label. The <a href='#!/api/Ext.form.Labelable-cfg-labelSeparator'>labelSeparator</a> will be automatically appended to the label\nstring.\n",
                    "type": "String",
                    "src": {
                      "name": "0,531,24",
                      "text": "0,531,30,87:0,532,8,8",
                      "type": "0,531,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,534,0",
                  "text": "0,530,8,29"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "toggleInvalidCls",
                "text": "Add/remove invalid class(es)\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "hasError",
                    "type": "Boolean",
                    "src": {
                      "name": "0,981,25",
                      "type": "0,981,16"
                    }
                  }
                ],
                "src": {
                  "access": "0,979,8",
                  "name": "0,983,0",
                  "text": "0,980,8,29"
                }
              },
              {
                "$type": "method",
                "name": "trimLabelSeparator",
                "text": "Returns the trimmed label by slicing off the label separator character. Can be overridden.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The trimmed field label, or empty string if not defined\n",
                    "type": "String",
                    "src": {
                      "text": "0,507,25,56",
                      "type": "0,507,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,509,0",
                  "text": "0,506,8,91"
                }
              },
              {
                "$type": "method",
                "name": "unsetActiveError",
                "text": "Clears the active error message(s). Note that this only clears the error message element's text and attributes,\nyou'll have to call doComponentLayout to actually update the field's layout to match. If the field extends <a href='#!/api/Ext.form.field.Base'>Ext.form.field.Base</a> you should call <a href='#!/api/Ext.form.field.Base-method-clearInvalid'>Ext.form.field.Base#clearInvalid</a> instead.\n",
                "src": {
                  "name": "0,890,0",
                  "text": "0,886,8,326"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "bodyEl",
                "text": "The div Element wrapping the component's contents. Only available after the component has been rendered.\n",
                "type": "Ext.dom.Element",
                "src": {
                  "name": "0,49,44",
                  "text": "0,50,16,105",
                  "type": "0,49,27"
                }
              },
              {
                "$type": "property",
                "name": "errorEl",
                "text": "The div Element that will contain the component's error message(s). Note that depending on the configured\n<a href='#!/api/Ext.form.Labelable-cfg-msgTarget'>msgTarget</a>, this element may be hidden in favor of some other form of presentation, but will always\nbe present in the DOM for use by assistive technologies.\n",
                "type": "Ext.dom.Element",
                "src": {
                  "name": "0,55,44",
                  "text": "0,56,16,271",
                  "type": "0,55,27"
                }
              },
              {
                "$type": "property",
                "name": "isFieldLabelable",
                "text": "Flag denoting that this object is labelable as a field. Always true.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,139,28",
                  "text": "0,140,8,69",
                  "type": "0,139,19"
                }
              },
              {
                "$type": "property",
                "name": "labelEl",
                "text": "The label Element for this component. Only available after the component has been rendered.\n",
                "type": "Ext.dom.Element",
                "src": {
                  "name": "0,43,44",
                  "text": "0,44,16,92",
                  "type": "0,43,27"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "msgTargets",
                "text": "Map for msg target lookup, if target is not in this map it is assumed\nto be an element id\n",
                "src": {
                  "access": "0,309,8",
                  "name": "0,313,0",
                  "text": "0,310,8,90"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "noWrap",
                "text": "Tells the layout system that the height can be measured immediately because the width does not need setting.\n",
                "src": {
                  "access": "0,328,8",
                  "name": "0,331,0",
                  "text": "0,329,8,109"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "topLabelCls",
                "src": {
                  "access": "0,159,8",
                  "name": "0,161,0"
                }
              }
            ]
          },
          {
            "$type": "static-methods",
            "items": [
              {
                "$type": "method",
                "name": "destroyTip",
                "static": true,
                "text": "Destroy the error tip instance.\n",
                "src": {
                  "name": "0,453,0",
                  "static": "0,451,12",
                  "text": "0,450,12,32"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "initTip",
                "static": true,
                "text": "Use a custom QuickTip instance separate from the main QuickTips singleton, so that we\ncan give it a custom frame style. Responds to errorqtip rather than the qtip property.\n",
                "src": {
                  "access": "0,413,12",
                  "name": "0,415,0",
                  "static": "0,412,12",
                  "text": "0,410,12,173"
                }
              }
            ]
          },
          {
            "$type": "vars",
            "items": [
              {
                "$type": "property",
                "name": "$form-error-icon-background-image",
                "text": "The background image for error icons\n",
                "type": "String",
                "value": "'form/exclamation'",
                "src": {
                  "name": "1,211,1",
                  "text": "1,209,4,37",
                  "type": "1,208,10",
                  "value": "1,211,44"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-icon-height",
                "text": "Height for form error icons.\n",
                "type": "Number",
                "value": "16px",
                "src": {
                  "name": "1,223,1",
                  "text": "1,221,4,29",
                  "type": "1,220,10",
                  "value": "1,223,34"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-icon-side-margin",
                "text": "Margin for error icons that are aligned to the side of the field\n",
                "type": "Number/list",
                "value": "0 1px",
                "src": {
                  "name": "1,229,1",
                  "text": "1,227,4,65",
                  "type": "1,226,10",
                  "value": "1,229,39"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-icon-width",
                "text": "Width for form error icons.\n",
                "type": "Number",
                "value": "16px",
                "src": {
                  "name": "1,217,1",
                  "text": "1,215,4,28",
                  "type": "1,214,10",
                  "value": "1,217,33"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-msg-color",
                "text": "The text color of form error messages\n",
                "type": "color",
                "value": "$form-field-invalid-border-color",
                "src": {
                  "name": "1,247,1",
                  "text": "1,245,4,38",
                  "type": "1,244,10",
                  "value": "1,247,32"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-msg-font-family",
                "text": "The font-family of form error messages\n",
                "type": "String",
                "value": "$font-family",
                "src": {
                  "name": "1,265,1",
                  "text": "1,263,4,39",
                  "type": "1,262,10",
                  "value": "1,265,38"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-msg-font-size",
                "text": "The font-size of form error messages\n",
                "type": "Number",
                "value": "$font-size",
                "src": {
                  "name": "1,259,1",
                  "text": "1,257,4,37",
                  "type": "1,256,10",
                  "value": "1,259,36"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-msg-font-weight",
                "text": "The font-weight of form error messages\n",
                "type": "String",
                "value": "$font-weight",
                "src": {
                  "name": "1,253,1",
                  "text": "1,251,4,39",
                  "type": "1,250,10",
                  "value": "1,253,38"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-msg-line-height",
                "text": "The line-height of form error messages\n",
                "type": "Number",
                "value": "$form-error-icon-height",
                "src": {
                  "name": "1,271,1",
                  "text": "1,269,4,39",
                  "type": "1,268,10",
                  "value": "1,271,38"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-under-icon-spacing",
                "text": "The space between the icon and the message for errors that display under the field\n",
                "type": "Number",
                "value": "4px",
                "src": {
                  "name": "1,235,1",
                  "text": "1,233,4,83",
                  "type": "1,232,10",
                  "value": "1,235,41"
                }
              },
              {
                "$type": "property",
                "name": "$form-error-under-padding",
                "text": "The padding on errors that display under the form field\n",
                "type": "Number/list",
                "value": "2px 2px 2px 0",
                "src": {
                  "name": "1,241,1",
                  "text": "1,239,4,56",
                  "type": "1,238,10",
                  "value": "1,241,36"
                }
              },
              {
                "$type": "property",
                "name": "$form-field-disabled-opacity",
                "text": "Opacity of disabled form fields\n",
                "type": "Number",
                "value": ".3",
                "src": {
                  "name": "1,284,1",
                  "text": "1,282,4,32",
                  "type": "1,281,10",
                  "value": "1,284,39"
                }
              },
              {
                "$type": "property",
                "name": "$form-item-margin-bottom",
                "text": "The bottom margin to apply to form items when in auto, anchor, vbox, or table layout.\nThis value is also used as the default border-spacing in a form-layout.\n",
                "type": "Number",
                "value": "5px",
                "src": {
                  "name": "1,278,1",
                  "text": "1,275,4,158",
                  "type": "1,274,10",
                  "value": "1,278,35"
                }
              },
              {
                "$type": "property",
                "name": "$form-label-font-color",
                "text": "The text color of form field labels\n",
                "type": "color",
                "value": "$color",
                "src": {
                  "name": "1,169,1",
                  "text": "1,167,4,36",
                  "type": "1,166,10",
                  "value": "1,169,33"
                }
              },
              {
                "$type": "property",
                "name": "$form-label-font-family",
                "text": "The font-family of form field labels\n",
                "type": "String",
                "value": "$font-family",
                "src": {
                  "name": "1,187,1",
                  "text": "1,185,4,37",
                  "type": "1,184,10",
                  "value": "1,187,34"
                }
              },
              {
                "$type": "property",
                "name": "$form-label-font-size",
                "text": "The font-size of form field labels\n",
                "type": "Number",
                "value": "$font-size",
                "src": {
                  "name": "1,181,1",
                  "text": "1,179,4,35",
                  "type": "1,178,10",
                  "value": "1,181,32"
                }
              },
              {
                "$type": "property",
                "name": "$form-label-font-weight",
                "text": "The font-weight of form field labels\n",
                "type": "String",
                "value": "$font-weight",
                "src": {
                  "name": "1,175,1",
                  "text": "1,173,4,37",
                  "type": "1,172,10",
                  "value": "1,175,34"
                }
              },
              {
                "$type": "property",
                "name": "$form-label-horizontal-spacing",
                "text": "Horizontal space between the label and the field body when the label is left-aligned.\n",
                "type": "Number",
                "value": "5px",
                "src": {
                  "name": "1,199,1",
                  "text": "1,197,4,86",
                  "type": "1,196,10",
                  "value": "1,199,41"
                }
              },
              {
                "$type": "property",
                "name": "$form-label-line-height",
                "text": "The line-height of form field labels\n",
                "type": "Number",
                "value": "round($form-label-font-size * 1.15)",
                "src": {
                  "name": "1,193,1",
                  "text": "1,191,4,37",
                  "type": "1,190,10",
                  "value": "1,193,34"
                }
              },
              {
                "$type": "property",
                "name": "$form-label-vertical-spacing",
                "text": "Vertical space between the label and the field body when the label is top-aligned.\n",
                "type": "Number",
                "value": "5px",
                "src": {
                  "name": "1,205,1",
                  "text": "1,203,4,83",
                  "type": "1,202,10",
                  "value": "1,205,39"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-icon-background-image",
                "text": "The background image for toolbar field error icons\n",
                "type": "String",
                "value": "'form/exclamation'",
                "src": {
                  "name": "1,332,1",
                  "text": "1,330,4,51",
                  "type": "1,329,10",
                  "value": "1,332,52"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-icon-height",
                "text": "Height for toolbar field error icons.\n",
                "type": "Number",
                "value": "16px",
                "src": {
                  "name": "1,344,1",
                  "text": "1,342,4,38",
                  "type": "1,341,10",
                  "value": "1,344,42"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-icon-side-margin",
                "text": "Margin for toolbar field error icons that are aligned to the side of the field\n",
                "type": "Number/list",
                "value": "0 1px",
                "src": {
                  "name": "1,350,1",
                  "text": "1,348,4,79",
                  "type": "1,347,10",
                  "value": "1,350,47"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-icon-width",
                "text": "Width for toolbar field error icons.\n",
                "type": "Number",
                "value": "16px",
                "src": {
                  "name": "1,338,1",
                  "text": "1,336,4,37",
                  "type": "1,335,10",
                  "value": "1,338,41"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-msg-color",
                "text": "The text color of toolbar form error messages\n",
                "type": "color",
                "value": "$form-field-invalid-border-color",
                "src": {
                  "name": "1,368,1",
                  "text": "1,366,4,46",
                  "type": "1,365,10",
                  "value": "1,368,40"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-msg-font-family",
                "text": "The font-family of toolbar form field error messages\n",
                "type": "String",
                "value": "$font-family",
                "src": {
                  "name": "1,386,1",
                  "text": "1,384,4,53",
                  "type": "1,383,10",
                  "value": "1,386,46"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-msg-font-size",
                "text": "The font-size of toolbar form field error messages\n",
                "type": "Number",
                "value": "$font-size",
                "src": {
                  "name": "1,380,1",
                  "text": "1,378,4,51",
                  "type": "1,377,10",
                  "value": "1,380,44"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-msg-font-weight",
                "text": "The font-weight of toolbar form field error messages\n",
                "type": "String",
                "value": "$font-weight",
                "src": {
                  "name": "1,374,1",
                  "text": "1,372,4,53",
                  "type": "1,371,10",
                  "value": "1,374,46"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-msg-line-height",
                "text": "The line-height of toolbar form field error messages\n",
                "type": "Number",
                "value": "$form-toolbar-error-icon-height",
                "src": {
                  "name": "1,392,1",
                  "text": "1,390,4,53",
                  "type": "1,389,10",
                  "value": "1,392,46"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-under-icon-spacing",
                "text": "The space between the icon and the message for errors that display under a toolbar field\n",
                "type": "Number",
                "value": "4px",
                "src": {
                  "name": "1,356,1",
                  "text": "1,354,4,89",
                  "type": "1,353,10",
                  "value": "1,356,49"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-error-under-padding",
                "text": "The padding on errors that display under the toolbar form field\n",
                "type": "Number/list",
                "value": "2px 2px 2px 0",
                "src": {
                  "name": "1,362,1",
                  "text": "1,360,4,64",
                  "type": "1,359,10",
                  "value": "1,362,44"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-field-disabled-opacity",
                "text": "Opacity of disabled toolbar form fields\n",
                "type": "Number",
                "value": ".3",
                "src": {
                  "name": "1,398,1",
                  "text": "1,396,4,40",
                  "type": "1,395,10",
                  "value": "1,398,47"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-label-font-color",
                "text": "The text color of toolbar form field labels\n",
                "type": "color",
                "value": "$color",
                "src": {
                  "name": "1,290,1",
                  "text": "1,288,4,44",
                  "type": "1,287,10",
                  "value": "1,290,41"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-label-font-family",
                "text": "The font-family of toolbar form field labels\n",
                "type": "String",
                "value": "$font-family",
                "src": {
                  "name": "1,308,1",
                  "text": "1,306,4,45",
                  "type": "1,305,10",
                  "value": "1,308,42"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-label-font-size",
                "text": "The font-size of toolbar form field labels\n",
                "type": "Number",
                "value": "$font-size",
                "src": {
                  "name": "1,302,1",
                  "text": "1,300,4,43",
                  "type": "1,299,10",
                  "value": "1,302,40"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-label-font-weight",
                "text": "The font-weight of toolbar form field labels\n",
                "type": "String",
                "value": "$font-weight",
                "src": {
                  "name": "1,296,1",
                  "text": "1,294,4,45",
                  "type": "1,293,10",
                  "value": "1,296,42"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-label-horizontal-spacing",
                "text": "Horizontal space between the toolbar field's label and the field body when the label is left-aligned.\n",
                "type": "Number",
                "value": "5px",
                "src": {
                  "name": "1,320,1",
                  "text": "1,318,4,102",
                  "type": "1,317,10",
                  "value": "1,320,49"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-label-line-height",
                "text": "The line-height of toolbar form field labels\n",
                "type": "Number",
                "value": "round($form-toolbar-label-font-size * 1.15)",
                "src": {
                  "name": "1,314,1",
                  "text": "1,312,4,45",
                  "type": "1,311,10",
                  "value": "1,314,42"
                }
              },
              {
                "$type": "property",
                "name": "$form-toolbar-label-vertical-spacing",
                "text": "Vertical space between the toolbar field's label and the field body when the label is top-aligned.\n",
                "type": "Number",
                "value": "5px",
                "src": {
                  "name": "1,326,1",
                  "text": "1,324,4,99",
                  "type": "1,323,10",
                  "value": "1,326,47"
                }
              },
              {
                "$type": "property",
                "name": "$include-label-default-ui",
                "text": "True to include the \"default\" label UI\n",
                "type": "Boolean",
                "value": "$include-field-default-ui",
                "src": {
                  "name": "1,404,1",
                  "text": "1,402,4,39",
                  "type": "1,401,10",
                  "value": "1,404,36"
                }
              },
              {
                "$type": "property",
                "name": "$include-label-toolbar-ui",
                "text": "True to include the \"default\" label UI\n",
                "type": "Boolean",
                "value": "$include-field-toolbar-ui",
                "src": {
                  "name": "1,410,1",
                  "text": "1,408,4,39",
                  "type": "1,407,10",
                  "value": "1,410,36"
                }
              }
            ]
          }
        ],
        "src": {
          "extends": "0,22,0",
          "name": "1,162,11",
          "requires": "0,25,0,0:0,26,0,0",
          "text": "0,2,4,1229"
        }
      }
    ]
  },
  "version": 1
}