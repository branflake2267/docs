{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/grid/ColumnManager.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "access": "private",
        "alternateClassNames": "Ext.grid.ColumnModel",
        "name": "Ext.grid.ColumnManager",
        "text": "Manages and provides information about a TablePanel's *visible leaf* columns.\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "getHeaderIndex",
                "text": "If called from a root header, returns the index of a leaf level header regardless of what the nesting\nstructure is.\n\nIf called from a group header, returns the index of a leaf level header relative to the group header.\n\nIf a group header is passed, the index of the first leaf level header within it is returned.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "header",
                    "text": "The header to find the index of\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "name": "0,62,40",
                      "text": "0,62,47,32",
                      "type": "0,62,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The index of the specified column header\n",
                    "type": "Number",
                    "src": {
                      "text": "0,63,25,41",
                      "type": "0,63,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,65,0",
                  "text": "0,55,8,314"
                }
              },
              {
                "$type": "method",
                "name": "getHeaderAtIndex",
                "text": "If called from a root header, gets a leaf level header by index regardless of what the nesting\nstructure is.\n\nIf called from a group header, returns the index of a leaf level header relative to the group header.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "text": "The column index for which to retrieve the column.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,81,24",
                      "text": "0,81,30,51",
                      "type": "0,81,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The header. <a href='#!/api/null'>null</a> if it doesn't exist.\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "text": "0,82,41,40",
                      "type": "0,82,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,84,0",
                  "text": "0,76,8,213"
                }
              },
              {
                "$type": "method",
                "name": "getFirst",
                "text": "Get the first column.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The header. <a href='#!/api/null'>null</a> if it doesn't exist\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "text": "0,113,41,39",
                      "type": "0,113,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,115,0",
                  "text": "0,112,8,22"
                }
              },
              {
                "$type": "method",
                "name": "getLast",
                "text": "Get the last column.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The header. <a href='#!/api/null'>null</a> if it doesn't exist\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "text": "0,122,41,39",
                      "type": "0,122,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,124,0",
                  "text": "0,121,8,21"
                }
              },
              {
                "$type": "method",
                "name": "getHeaderByDataIndex",
                "text": "Get a leaf level header by data index regardless of what the nesting\nstructure is.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "dataIndex",
                    "text": "The data index\n",
                    "type": "String",
                    "src": {
                      "name": "0,134,24",
                      "text": "0,134,34,15",
                      "type": "0,134,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The header. <a href='#!/api/null'>null</a> if it doesn't exist.\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "text": "0,135,41,40",
                      "type": "0,135,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,137,0",
                  "text": "0,132,8,83"
                }
              },
              {
                "$type": "method",
                "name": "getHeaderById",
                "text": "Get a leaf level header by index regardless of what the nesting\nstructure is.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "id",
                    "text": "The id\n",
                    "type": "String",
                    "src": {
                      "name": "0,154,24",
                      "text": "0,154,27,7",
                      "type": "0,154,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The header. <a href='#!/api/null'>null</a> if it doesn't exist.\n",
                    "type": "Ext.grid.column.Column",
                    "src": {
                      "text": "0,155,41,40",
                      "type": "0,155,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,157,0",
                  "text": "0,152,8,78"
                }
              },
              {
                "$type": "method",
                "name": "getVisibleHeaderClosestToIndex",
                "text": "When passed a column index, returns the closet *visible* column to that. If the column at the passed index is visible,\nthat is returned. If it is hidden, either the next visible, or the previous visible column is returned.\n\nIf called from a group header, returns the visible index of a leaf level header relative to the group header with the\nsame stipulations as outlined above.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "index",
                    "text": "Position at which to find the closest visible column.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,178,24",
                      "text": "0,178,30,54",
                      "type": "0,178,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,180,0",
                  "text": "0,172,8,380"
                }
              }
            ]
          }
        ],
        "src": {
          "access": "0,2,4",
          "alternateClassNames": "0,7,0",
          "name": "0,6,0",
          "text": "0,4,4,78"
        }
      }
    ]
  },
  "version": 1
}