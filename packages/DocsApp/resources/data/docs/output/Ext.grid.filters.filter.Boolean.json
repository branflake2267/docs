{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/grid/filters/filter/Boolean.js",
    "../../../ext/classic/classic/src/grid/filters/filter/Base.js",
    "../../../ext/packages/core/src/mixin/Factoryable.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "grid.filter.boolean",
        "extends": "Ext.grid.filters.filter.SingleFilter",
        "name": "Ext.grid.filters.filter.Boolean",
        "text": "The boolean grid filter allows you to create a filter selection that limits results\nto values matching true or false.  The filter can be set programmatically or via\nuser input with a configurable <a href='#!/api/Ext.form.field.Radio'>Ext.form.field.Radio</a> in the filter section\nof the column header.\n\nBoolean filters use unique radio group IDs, so you may utilize more than one.\n\nExample Boolean Filter Usage:\n\n    @example\n    var shows = Ext.create('Ext.data.Store', {\n        fields: ['id','show', 'visible'],\n        data: [\n            {id: 0, show: 'Battlestar Galactica', visible: true},\n            {id: 1, show: 'Doctor Who', visible: true},\n            {id: 2, show: 'Farscape', visible: false},\n            {id: 3, show: 'Firefly', visible: true},\n            {id: 4, show: 'Star Trek', visible: true},\n            {id: 5, show: 'Star Wars: Christmas Special', visible: false}\n        ]\n    });\n\n    Ext.create('Ext.grid.Panel', {\n        renderTo: Ext.getBody(),\n        title: 'Sci-Fi Television',\n        height: 250,\n        width: 375,\n        store: shows,\n        plugins: 'gridfilters',\n        columns: [{\n            dataIndex: 'id',\n            text: 'ID',\n            width: 50\n        },{\n            dataIndex: 'show',\n            text: 'Show',\n            flex: 1\n        },{\n            dataIndex: 'visible',\n            text: 'Visibility',\n            width: 125,\n            filter: {\n                type: 'boolean',\n                value: 'true',\n                yesText: 'True',\n                noText: 'False'\n            }\n        }]\n    });\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "active",
                "text": "Indicates the initial status of the filter (defaults to false).\n",
                "type": "Boolean",
                "src": {
                  "name": "1,47,23",
                  "text": "1,48,8,64",
                  "type": "1,47,14"
                }
              },
              {
                "$type": "property",
                "name": "dataIndex",
                "text": "The <a href='#!/api/Ext.data.Store'>Ext.data.Store</a> dataIndex of the field this filter represents.\nThe dataIndex does not actually have to exist in the store.\n",
                "type": "String",
                "src": {
                  "name": "1,59,22",
                  "text": "1,60,8,134",
                  "type": "1,59,14"
                }
              },
              {
                "$type": "property",
                "name": "defaultValue",
                "text": "Set this to null if you do not want either option to be checked by default. Defaults to false.\n",
                "type": "Boolean",
                "src": {
                  "name": "0,61,23",
                  "text": "0,62,8,95",
                  "type": "0,61,14"
                }
              },
              {
                "$type": "property",
                "name": "itemDefaults",
                "optional": true,
                "text": "The default configuration options for any menu items created by this filter.\n\nExample usage:\n\n     itemDefaults: {\n         width: 150\n     },\n",
                "type": "Object",
                "src": {
                  "name": "1,18,27",
                  "text": "1,19,12,143",
                  "type": "1,18,18"
                }
              },
              {
                "$type": "property",
                "name": "noText",
                "text": "Defaults to 'No'.\n",
                "type": "String",
                "src": {
                  "name": "0,76,22",
                  "text": "0,77,8,18",
                  "type": "0,76,14"
                }
              },
              {
                "$type": "property",
                "name": "updateBuffer",
                "text": "Number of milliseconds to wait after user interaction to fire an update. Only supported\nby filters: 'list', 'numeric', and 'string'.\n",
                "type": "Number",
                "src": {
                  "name": "1,34,26",
                  "text": "1,35,12,133",
                  "type": "1,34,18"
                }
              },
              {
                "$type": "property",
                "name": "yesText",
                "text": "Defaults to 'Yes'.\n",
                "type": "String",
                "src": {
                  "name": "0,68,22",
                  "text": "0,69,8,19",
                  "type": "0,68,14"
                }
              }
            ]
          },
          {
            "$type": "events",
            "items": [
              {
                "$type": "event",
                "name": "activate",
                "text": "Fires when an inactive filter becomes active\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.grid.filters.Filters",
                    "src": {
                      "name": "1,84,42",
                      "type": "1,84,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,82,15",
                  "text": "1,83,8,45"
                }
              },
              {
                "$type": "event",
                "name": "deactivate",
                "text": "Fires when an active filter becomes inactive\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "type": "Ext.grid.filters.Filters",
                    "src": {
                      "name": "1,90,42",
                      "type": "1,90,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,88,15",
                  "text": "1,89,8,45"
                }
              },
              {
                "$type": "event",
                "name": "update",
                "text": "Fires when a filter configuration has changed\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "this",
                    "text": "The filter object.\n",
                    "type": "Ext.grid.filters.Filters",
                    "src": {
                      "name": "1,96,42",
                      "text": "1,96,47,19",
                      "type": "1,96,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,94,15",
                  "text": "1,95,8,46"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "constructor",
                "text": "Initializes the filter given its configuration.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "type": "Object",
                    "src": {
                      "name": "1,101,24",
                      "type": "1,101,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,103,0",
                  "text": "1,100,8,48"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "createMenu",
                "text": "Template method that is to initialize the filter and install required menu items.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "config",
                    "src": {
                      "name": "0,88,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,85,8",
                  "name": "0,88,0",
                  "text": "0,86,8,82"
                }
              },
              {
                "$type": "method",
                "name": "destroy",
                "text": "Destroys this filter by purging any event listeners, and removing any menus.\n",
                "src": {
                  "name": "1,119,0",
                  "text": "1,117,8,77"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "getValue",
                "template": true,
                "text": "Template method to be implemented by all subclasses that is to\nget and return the value of the filter.\n",
                "items": [
                  {
                    "$type": "return",
                    "text": "The 'serialized' form of this filter\n",
                    "type": "Object",
                    "src": {
                      "text": "1,242,25,37",
                      "type": "1,242,17"
                    }
                  }
                ],
                "src": {
                  "access": "1,238,8",
                  "name": "1,239,16",
                  "template": "1,243,8",
                  "text": "1,240,8,103"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onClick",
                "items": [
                  {
                    "$type": "param",
                    "name": "field",
                    "src": {
                      "name": "0,117,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,115,8",
                  "name": "0,117,0"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "onValueChange",
                "text": "Handler method called when there is a significant event on an input item.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "field",
                    "src": {
                      "name": "1,194,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "e",
                    "src": {
                      "name": "1,194,0"
                    }
                  }
                ],
                "src": {
                  "access": "1,191,8",
                  "name": "1,194,0",
                  "text": "1,192,8,74"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "preprocess",
                "template": true,
                "text": "Template method to be implemented by all subclasses that need to perform\nany operations before the column filter has finished construction.\n",
                "src": {
                  "access": "1,225,8",
                  "name": "1,226,16",
                  "template": "1,229,8",
                  "text": "1,227,8,140"
                }
              },
              {
                "$type": "method",
                "name": "setActive",
                "text": "Sets the status of the filter and fires the appropriate events.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "active",
                    "text": "The new filter state.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "1,258,25",
                      "text": "1,258,32,22",
                      "type": "1,258,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "key",
                    "text": "The filter key for columns that support multiple filters.\n",
                    "type": "String",
                    "src": {
                      "name": "1,259,24",
                      "text": "1,259,28,58",
                      "type": "1,259,16"
                    }
                  }
                ],
                "src": {
                  "name": "1,261,0",
                  "text": "1,257,8,64"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "setValue",
                "text": "Template method that is to set the value of the filter.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "value",
                    "text": "The value to set the filter.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,124,24",
                      "text": "0,124,30,29",
                      "type": "0,124,16"
                    }
                  }
                ],
                "src": {
                  "access": "0,122,8",
                  "name": "0,126,0",
                  "text": "0,123,8,56"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "active",
                "text": "True if this filter is active. Use setActive() to alter after configuration. If\nyou set a value, the filter will be actived automatically.\n",
                "type": "Boolean",
                "src": {
                  "name": "1,42,28",
                  "text": "1,43,8,139",
                  "type": "1,42,19"
                }
              },
              {
                "$type": "property",
                "name": "factoryConfig",
                "optional": true,
                "text": "If this property is specified by the target class of this mixin its properties are\nused to configure the created <a href='#!/api/Ext.Factory'>Ext.Factory</a>.\n",
                "type": "Object",
                "src": {
                  "name": "2,295,28",
                  "text": "2,296,8,128",
                  "type": "2,295,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "filterIdPrefix",
                "text": "The prefix for id's used to track stateful Store filters.\n",
                "src": {
                  "access": "1,77,8",
                  "name": "1,79,0",
                  "text": "1,76,8,58"
                }
              },
              {
                "$type": "property",
                "name": "menu",
                "text": "The filter configuration menu that will be installed into the filter submenu of a column menu.\n",
                "type": "Ext.menu.Menu",
                "src": {
                  "name": "1,66,34",
                  "text": "1,67,8,95",
                  "type": "1,66,19"
                }
              },
              {
                "$type": "property",
                "name": "type",
                "text": "The filter type. Used by the filters.Feature class when adding filters and applying state.\n",
                "type": "String",
                "src": {
                  "name": "1,53,27",
                  "text": "1,54,8,91",
                  "type": "1,53,19"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,54,0",
          "extends": "0,53,0",
          "name": "0,52,0",
          "text": "0,2,4,1557"
        }
      }
    ]
  },
  "version": 1
}