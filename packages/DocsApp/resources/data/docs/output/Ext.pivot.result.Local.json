{
  "$type": "doxi",
  "files": [
    "../../../packages/pivot/src/pivot/result/Local.js",
    "../../../packages/pivot/src/pivot/result/Base.js",
    "../../../ext/packages/core/src/mixin/Factoryable.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "alias": "pivotresult.local",
        "alternateClassNames": "Mz.aggregate.matrix.Result",
        "extends": "Ext.pivot.result.Base",
        "name": "Ext.pivot.result.Local",
        "text": "The Result object stores all calculated values for the aggregate dimensions\nfor a left/top item pair and all records that are used to calculate\nthose values.\n\nIt is used by the <a href='#!/api/Ext.pivot.matrix.Local'>Ext.pivot.matrix.Local</a> matrix class.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "leftKey",
                "text": "(required)\n\n Key of left axis item or grandTotalKey\n",
                "type": "String",
                "src": {
                  "name": "1,17,22",
                  "text": "1,17,30,11:1,18,8,41",
                  "type": "1,17,14"
                }
              },
              {
                "$type": "property",
                "name": "topKey",
                "text": "(required)\n\nKey of top axis item or grandTotalKey\n",
                "type": "String",
                "src": {
                  "name": "1,23,22",
                  "text": "1,23,29,11:1,24,8,39",
                  "type": "1,23,14"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "addRecord",
                "text": "Add the specified record to the internal records storage.\nThese records will be used for calculating the pivot aggregate dimension values.\nThis should be used only when all calculations are done locally and not remotely.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "record",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,77,32",
                      "type": "0,77,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,79,0",
                  "text": "0,73,8,222"
                }
              },
              {
                "$type": "method",
                "name": "addValue",
                "text": "Add the calculated value for an aggregate dimension to the internal values storage\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "dimensionId",
                    "src": {
                      "name": "1,93,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "value",
                    "src": {
                      "name": "1,94,15"
                    }
                  }
                ],
                "src": {
                  "name": "1,96,0",
                  "text": "1,91,8,84"
                }
              },
              {
                "$type": "method",
                "name": "calculate",
                "text": "Calculate all pivot aggregate dimensions for the internal records. Useful when using a\n<a href='#!/api/Ext.pivot.matrix.Local'>Ext.pivot.matrix.Local</a> matrix.\n",
                "src": {
                  "name": "0,43,0",
                  "text": "0,39,8,133"
                }
              },
              {
                "$type": "method",
                "name": "calculateByFn",
                "text": "Besides the calculation functions defined on your aggregate dimension you could\ncalculate values based on other store fields and custom functions.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "key",
                    "text": "The generated value will be stored in the result under this key for later extraction\n",
                    "src": {
                      "name": "0,59,15",
                      "text": "0,59,19,85"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "dataIndex",
                    "text": "The dataIndex that should be used on the records for doing calculations\n",
                    "src": {
                      "name": "0,60,15",
                      "text": "0,60,25,72"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "aggFn",
                    "text": "Your custom function\n",
                    "src": {
                      "name": "0,61,15",
                      "text": "0,61,21,21"
                    }
                  }
                ],
                "src": {
                  "name": "0,63,0",
                  "text": "0,56,8,148"
                }
              },
              {
                "$type": "method",
                "name": "getLeftAxisItem",
                "text": "Returns the left axis item\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Ext.pivot.axis.Item",
                    "src": {
                      "type": "1,112,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,114,0",
                  "text": "1,110,8,28"
                }
              },
              {
                "$type": "method",
                "name": "getTopAxisItem",
                "text": "Returns the top axis item\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Ext.pivot.axis.Item",
                    "src": {
                      "type": "1,121,18"
                    }
                  }
                ],
                "src": {
                  "name": "1,123,0",
                  "text": "1,119,8,27"
                }
              },
              {
                "$type": "method",
                "name": "getValue",
                "text": "Returns the calculated value for the specified aggregate dimension\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "dimensionId",
                    "src": {
                      "name": "1,103,15"
                    }
                  }
                ],
                "src": {
                  "name": "1,105,0",
                  "text": "1,101,8,68"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "name": "calculate",
                "text": "Calculate all pivot aggregate dimensions for the internal records. Useful when using a\n<a href='#!/api/Ext.pivot.matrix.Local'>Ext.pivot.matrix.Local</a> matrix.\n",
                "src": {
                  "name": "1,76,0",
                  "text": "1,72,8,133"
                }
              },
              {
                "$type": "property",
                "name": "dirty",
                "text": "\nSet this flag on true if you modified at least one record in this result.\nThe grid cell will be marked as dirty in such a case.\n",
                "type": "Boolean",
                "src": {
                  "name": "1,29,28",
                  "text": "1,30,8,129",
                  "type": "1,29,19"
                }
              },
              {
                "$type": "property",
                "name": "factoryConfig",
                "optional": true,
                "text": "If this property is specified by the target class of this mixin its properties are\nused to configure the created <a href='#!/api/Ext.Factory'>Ext.Factory</a>.\n",
                "type": "Object",
                "src": {
                  "name": "2,295,28",
                  "text": "2,296,8,128",
                  "type": "2,295,19"
                }
              },
              {
                "$type": "property",
                "name": "matrix",
                "readonly": true,
                "text": "\nReference to the matrix object\n",
                "type": "Ext.pivot.matrix.Base",
                "src": {
                  "name": "1,46,42",
                  "readonly": "1,47,8",
                  "text": "1,48,8,32",
                  "type": "1,46,19"
                }
              },
              {
                "$type": "property",
                "name": "records",
                "text": "\nArray of records for the left/top axis keys pair. Only available for a <a href='#!/api/Ext.pivot.matrix.Local'>Ext.pivot.matrix.Local</a> matrix.\n",
                "type": "Ext.data.Model[]",
                "src": {
                  "name": "0,19,37",
                  "text": "0,20,8,117",
                  "type": "0,19,19"
                }
              },
              {
                "$type": "property",
                "access": "private",
                "name": "values",
                "text": "\nObject that stores all calculated values for each pivot aggregate.\nThe object keys are the dimension ids.\n",
                "type": "Object",
                "src": {
                  "access": "1,42,8",
                  "name": "1,37,27",
                  "text": "1,38,8,108",
                  "type": "1,37,19"
                }
              }
            ]
          }
        ],
        "src": {
          "alias": "0,12,0",
          "alternateClassNames": "0,15,0",
          "extends": "0,10,0",
          "name": "0,9,0",
          "text": "0,2,4,229"
        }
      }
    ]
  },
  "version": 1
}