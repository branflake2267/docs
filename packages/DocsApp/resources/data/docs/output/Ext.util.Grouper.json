{
  "$type": "doxi",
  "files": [
    "../../../ext/packages/core/src/util/Grouper.js",
    "../../../ext/packages/core/src/util/Sorter.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "extends": "Ext.util.Sorter",
        "name": "Ext.util.Grouper",
        "text": "Represents a grouping of items. The grouper works in a similar fashion as the\n<a href='#!/api/Ext.util.Sorter'>Ext.util.Sorter</a> except that groups must be able to extract a value by which all items\nin the group can be collected. By default this is derived from the <a href='#!/api/Ext.util.Grouper-cfg-property'>property</a> config\nbut can be customized using the <a href='#!/api/Ext.util.Grouper-cfg-groupFn'>groupFn</a> if necessary.\n\nAll items with the same group value compare as equal. If the group values do not compare\nequally, the sort can be controlled further by setting <a href='#!/api/Ext.util.Grouper-cfg-sortProperty'>sortProperty</a> or <a href='#!/api/Ext.util.Grouper-cfg-sorterFn'>sorterFn</a>.\n",
        "items": [
          {
            "$type": "configs",
            "items": [
              {
                "$type": "property",
                "name": "direction",
                "text": "The direction to sort by. Valid values are \"ASC\", and \"DESC\".\n",
                "type": "String",
                "src": {
                  "name": "1,115,26",
                  "text": "1,115,36,62",
                  "type": "1,115,18"
                }
              },
              {
                "$type": "property",
                "name": "groupFn",
                "text": "This function is called for each item in the collection\nto determine the group to which it belongs. By default the <a href='#!/api/Ext.util.Grouper-cfg-property'>property</a> value is\nused to group items.\n",
                "type": "Function",
                "items": [
                  {
                    "$type": "property",
                    "name": "item",
                    "text": "The current item from the collection.\n",
                    "type": "Object",
                    "src": {
                      "name": "0,20,34",
                      "text": "0,20,39,38",
                      "type": "0,20,18"
                    }
                  },
                  {
                    "$type": "property",
                    "name": "return",
                    "text": "The group identifier for the item.\n",
                    "type": "String",
                    "src": {
                      "name": "0,21,34",
                      "text": "0,21,41,35",
                      "type": "0,21,18"
                    }
                  }
                ],
                "src": {
                  "name": "0,17,28",
                  "text": "0,17,36,56:0,18,12,100",
                  "type": "0,17,18"
                }
              },
              {
                "$type": "property",
                "name": "id",
                "text": "An optional id this sorter can be keyed by in Collections. If\nno id is specified it will use the property name used in this Sorter. If no\nproperty is specified, e.g. when adding a custom sorter function we will generate\na random id.\n",
                "type": "Mixed",
                "src": {
                  "name": "1,120,25",
                  "text": "1,120,28,62:1,121,12,171",
                  "type": "1,120,18"
                }
              },
              {
                "$type": "property",
                "name": "property",
                "text": "The field by which records are grouped. Groups are\nsorted alphabetically by group value as the default. To sort groups by a different\nproperty, use the <a href='#!/api/Ext.util.Grouper-cfg-sortProperty'>sortProperty</a> configuration.\n",
                "type": "String",
                "src": {
                  "name": "0,26,26",
                  "text": "0,26,35,51:0,27,12,138",
                  "type": "0,26,18"
                }
              },
              {
                "$type": "property",
                "name": "root",
                "text": "Optional root property. This is mostly useful when sorting a Store, in which case we set the\nroot to 'data' to make the filter pull the <a href='#!/api/Ext.util.Grouper-cfg-property'>property</a> out of the data object of each item\n",
                "type": "String",
                "src": {
                  "name": "1,102,26",
                  "text": "1,102,31,93:1,103,12,97",
                  "type": "1,102,18"
                }
              },
              {
                "$type": "property",
                "name": "sortProperty",
                "text": "You can set this configuration if you want the groups\nto be sorted on something other then the group string returned by the <a href='#!/api/Ext.util.Grouper-cfg-groupFn'>groupFn</a>.\nThis serves the same role as <a href='#!/api/Ext.util.Grouper-cfg-property'>property</a> on a normal <a href='#!/api/Ext.util.Sorter'>Ext.util.Sorter</a>.\n",
                "type": "String",
                "src": {
                  "name": "0,32,26",
                  "text": "0,32,39,54:0,33,12,152",
                  "type": "0,32,18"
                }
              },
              {
                "$type": "property",
                "name": "sorterFn",
                "text": "A specific sorter function to execute. Can be passed instead of <a href='#!/api/Ext.util.Grouper-cfg-property'>property</a>.\nThis function should compare the two passed arguments, returning -1, 0 or 1 depending on if item 1 should be\nsorted before, at the same level, or after item 2.\n\n    sorterFn: function(person1, person2) {\n        return (person1.age > person2.age) ? 1 : (person1.age === person2.age ? 0 : -1);\n    }\n",
                "type": "Function",
                "src": {
                  "name": "1,91,28",
                  "text": "1,91,37,83:1,92,12,299",
                  "type": "1,91,18"
                }
              },
              {
                "$type": "property",
                "name": "transform",
                "text": "A function that will be run on each value before\nit is compared in the sorter. The function will receive a single argument,\nthe value.\n",
                "type": "Function",
                "src": {
                  "name": "1,108,28",
                  "text": "1,108,38,49:1,109,12,86",
                  "type": "1,108,18"
                }
              }
            ]
          },
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "getGroupString",
                "text": "Returns the value for grouping to be used.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item",
                    "text": "The Model instance\n",
                    "type": "Ext.data.Model",
                    "src": {
                      "name": "0,53,32",
                      "text": "0,53,37,19",
                      "type": "0,53,16"
                    }
                  },
                  {
                    "$type": "return",
                    "type": "String",
                    "src": {
                      "type": "0,54,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,56,0",
                  "text": "0,52,8,43"
                }
              },
              {
                "$type": "method",
                "name": "getState",
                "text": "Returns this sorter's state.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "1,259,17"
                    }
                  }
                ],
                "src": {
                  "name": "1,261,0",
                  "text": "1,258,8,29"
                }
              },
              {
                "$type": "method",
                "name": "serialize",
                "text": "Returns this sorter's serialized state. This is used when transmitting this sorter\nto a server.\n",
                "items": [
                  {
                    "$type": "return",
                    "type": "Object",
                    "src": {
                      "type": "1,281,17"
                    }
                  }
                ],
                "src": {
                  "name": "1,283,0",
                  "text": "1,279,8,96"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "sortFn",
                "text": "Basic default sorter function that just compares the defined property of each object.\nThis is hidden by the <a href='#!/api/Ext.util.Grouper-cfg-sorterFn'>sorterFn</a> provided by the user.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "item1",
                    "src": {
                      "name": "1,206,0"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "item2",
                    "src": {
                      "name": "1,206,0"
                    }
                  }
                ],
                "src": {
                  "access": "1,202,8",
                  "name": "1,206,0",
                  "text": "1,203,8,141"
                }
              },
              {
                "$type": "method",
                "name": "toggle",
                "text": "Toggles the direction of this Sorter. Note that when you call this function,\nthe Collection this Sorter is part of does not get refreshed automatically.\n",
                "src": {
                  "name": "1,253,0",
                  "text": "1,250,8,153"
                }
              }
            ]
          },
          {
            "$type": "properties",
            "items": [
              {
                "$type": "property",
                "access": "private",
                "name": "multiplier",
                "readonly": true,
                "text": "This value is set based on the <a href='#!/api/Ext.util.Grouper-cfg-direction'>direction</a> config to be either 1 or -1. This is used\nas a multiplier for the raw comparison value to factor in the direction.\n",
                "src": {
                  "access": "1,165,8",
                  "name": "1,168,0",
                  "readonly": "1,166,8",
                  "text": "1,163,8,158"
                }
              }
            ]
          },
          {
            "$type": "static-methods"
          }
        ],
        "src": {
          "extends": "0,11,0",
          "name": "0,10,0",
          "text": "0,2,4,482"
        }
      }
    ]
  },
  "version": 1
}