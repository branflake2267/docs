{
  "$type": "doxi",
  "files": [
    "../../../ext/classic/classic/src/view/NodeCache.js"
  ],
  "global": {
    "$type": "namespace",
    "items": [
      {
        "$type": "class",
        "access": "private",
        "name": "Ext.view.NodeCache",
        "requires": "Ext.dom.CompositeElementLite",
        "text": "A cache of View elements keyed using the index of the associated record in the store.\n\nThis implements the methods of {Ext.dom.CompositeElement} which are used by <a href='#!/api/Ext.view.AbstractView'>Ext.view.AbstractView</a>\nto provide a map of record nodes and methods to manipulate the nodes.\n",
        "items": [
          {
            "$type": "methods",
            "items": [
              {
                "$type": "method",
                "name": "clear",
                "text": "Removes all elements from this NodeCache.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "removeDom",
                    "optional": true,
                    "text": "True to also remove the elements from the document.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "0,37,25",
                      "text": "0,37,36,52",
                      "type": "0,37,15"
                    }
                  }
                ],
                "src": {
                  "name": "0,39,0",
                  "text": "0,36,7,42"
                }
              },
              {
                "$type": "method",
                "name": "fill",
                "text": "Clears this NodeCache and adds the elements passed.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "els",
                    "text": "An array of DOM elements from which to fill this NodeCache.\n",
                    "type": "HTMLElement[]",
                    "src": {
                      "name": "0,63,30",
                      "text": "0,63,34,60",
                      "type": "0,63,15"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "this\n",
                    "type": "Ext.view.NodeCache",
                    "src": {
                      "text": "0,64,36,5",
                      "type": "0,64,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,66,0",
                  "text": "0,62,7,52"
                }
              },
              {
                "$type": "method",
                "access": "private",
                "name": "moveBlock",
                "text": "Used by buffered renderer when adding or removing record ranges which are above the\nrendered block. The element block must be shuffled up or down the index range,\nand the data-recordIndex connector attribute must be updated.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "increment",
                    "src": {
                      "name": "0,162,0"
                    }
                  }
                ],
                "src": {
                  "access": "0,156,8",
                  "name": "0,162,0",
                  "text": "0,157,8,226"
                }
              },
              {
                "$type": "method",
                "name": "replaceElement",
                "text": "Replaces the specified element with the passed element.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id of an element, the Element itself, the index of the\nelement in this composite to replace.\n",
                    "type": "String/HTMLElement/Ext.dom.Element/Number",
                    "src": {
                      "name": "0,222,58",
                      "text": "0,222,61,59:0,223,7,38",
                      "type": "0,222,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "replacement",
                    "text": "The id of an element or the Element itself.\n",
                    "type": "String/Ext.dom.Element",
                    "src": {
                      "name": "0,224,39",
                      "text": "0,224,51,44",
                      "type": "0,224,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "domReplace",
                    "optional": true,
                    "text": "True to remove and replace the element in the document too.\n",
                    "type": "Boolean",
                    "src": {
                      "name": "0,225,25",
                      "text": "0,225,37,60",
                      "type": "0,225,15"
                    }
                  }
                ],
                "src": {
                  "name": "0,227,0",
                  "text": "0,221,7,56"
                }
              },
              {
                "$type": "method",
                "name": "indexOf",
                "text": "Find the index of the passed element within the composite collection.\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id of an element, or an Ext.dom.Element, or an HTMLElement\nto find within the composite collection.\n",
                    "type": "String/HTMLElement/Ext.dom.Element/Number",
                    "src": {
                      "name": "0,246,58",
                      "text": "0,246,61,63:0,247,7,41",
                      "type": "0,246,15"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The index of the passed Ext.dom.Element in the composite collection, or -1 if not found.\n",
                    "type": "Number",
                    "src": {
                      "text": "0,248,24,89",
                      "type": "0,248,16"
                    }
                  }
                ],
                "src": {
                  "name": "0,250,0",
                  "text": "0,245,7,70"
                }
              },
              {
                "$type": "method",
                "name": "removeElement",
                "text": "Removes the specified element(s).\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "el",
                    "text": "The id of an element, the Element itself, the index of the\nelement in this composite or an array of any of those.\n",
                    "type": "String/HTMLElement/Ext.dom.Element/Number",
                    "src": {
                      "name": "0,305,58",
                      "text": "0,305,61,59:0,306,7,55",
                      "type": "0,305,15"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "removeDom",
                    "optional": true,
                    "text": "True to also remove the element from the document\n",
                    "type": "Boolean",
                    "src": {
                      "name": "0,307,25",
                      "text": "0,307,36,50",
                      "type": "0,307,15"
                    }
                  }
                ],
                "src": {
                  "name": "0,309,0",
                  "text": "0,304,7,34"
                }
              },
              {
                "$type": "method",
                "name": "scroll",
                "text": "Appends/prepends records depending on direction flag\n",
                "items": [
                  {
                    "$type": "param",
                    "name": "newRecords",
                    "text": "Items to append/prepend\n",
                    "type": "Ext.data.Model[]",
                    "src": {
                      "name": "0,376,34",
                      "text": "0,376,45,24",
                      "type": "0,376,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "direction",
                    "text": "`-1' = scroll up, `0` = scroll down.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,377,24",
                      "text": "0,377,34,37",
                      "type": "0,377,16"
                    }
                  },
                  {
                    "$type": "param",
                    "name": "removeCount",
                    "text": "The number of records to remove from the end. if scrolling\ndown, rows are removed from the top and the new rows are added at the bottom.\n",
                    "type": "Number",
                    "src": {
                      "name": "0,378,24",
                      "text": "0,378,36,59:0,379,8,78",
                      "type": "0,378,16"
                    }
                  },
                  {
                    "$type": "return",
                    "text": "The view item nodes added either at the top or the bottom of the view.\n",
                    "type": "HTMLElement[]",
                    "src": {
                      "text": "0,380,32,71",
                      "type": "0,380,17"
                    }
                  }
                ],
                "src": {
                  "name": "0,382,0",
                  "text": "0,375,8,53"
                }
              }
            ]
          }
        ],
        "src": {
          "access": "0,2,4",
          "name": "0,7,11",
          "requires": "0,11,0",
          "text": "0,3,4,263"
        }
      }
    ]
  },
  "version": 1
}